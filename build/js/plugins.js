(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.window = global.window || {}));
}(this, (function (exports) { 'use strict';

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  /*!
   * GSAP 3.11.3
   * https://greensock.com
   *
   * @license Copyright 2008-2022, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */
  var _config = {
    autoSleep: 120,
    force3D: "auto",
    nullTargetWarn: 1,
    units: {
      lineHeight: ""
    }
  },
      _defaults = {
    duration: .5,
    overwrite: false,
    delay: 0
  },
      _suppressOverwrites,
      _reverting,
      _context,
      _bigNum = 1e8,
      _tinyNum = 1 / _bigNum,
      _2PI = Math.PI * 2,
      _HALF_PI = _2PI / 4,
      _gsID = 0,
      _sqrt = Math.sqrt,
      _cos = Math.cos,
      _sin = Math.sin,
      _isString = function _isString(value) {
    return typeof value === "string";
  },
      _isFunction = function _isFunction(value) {
    return typeof value === "function";
  },
      _isNumber = function _isNumber(value) {
    return typeof value === "number";
  },
      _isUndefined = function _isUndefined(value) {
    return typeof value === "undefined";
  },
      _isObject = function _isObject(value) {
    return typeof value === "object";
  },
      _isNotFalse = function _isNotFalse(value) {
    return value !== false;
  },
      _windowExists = function _windowExists() {
    return typeof window !== "undefined";
  },
      _isFuncOrString = function _isFuncOrString(value) {
    return _isFunction(value) || _isString(value);
  },
      _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function () {},
      _isArray = Array.isArray,
      _strictNumExp = /(?:-?\.?\d|\.)+/gi,
      _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
      _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
      _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
      _relExp = /[+-]=-?[.\d]+/,
      _delimitedValueExp = /[^,'"\[\]\s]+/gi,
      _unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
      _globalTimeline,
      _win,
      _coreInitted,
      _doc,
      _globals = {},
      _installScope = {},
      _coreReady,
      _install = function _install(scope) {
    return (_installScope = _merge(scope, _globals)) && gsap;
  },
      _missingPlugin = function _missingPlugin(property, value) {
    return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
  },
      _warn = function _warn(message, suppress) {
    return !suppress && console.warn(message);
  },
      _addGlobal = function _addGlobal(name, obj) {
    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
  },
      _emptyFunc = function _emptyFunc() {
    return 0;
  },
      _startAtRevertConfig = {
    suppressEvents: true,
    isStart: true,
    kill: false
  },
      _revertConfigNoKill = {
    suppressEvents: true,
    kill: false
  },
      _revertConfig = {
    suppressEvents: true
  },
      _reservedProps = {},
      _lazyTweens = [],
      _lazyLookup = {},
      _lastRenderedFrame,
      _plugins = {},
      _effects = {},
      _nextGCFrame = 30,
      _harnessPlugins = [],
      _callbackNames = "",
      _harness = function _harness(targets) {
    var target = targets[0],
        harnessPlugin,
        i;
    _isObject(target) || _isFunction(target) || (targets = [targets]);

    if (!(harnessPlugin = (target._gsap || {}).harness)) {
      i = _harnessPlugins.length;

      while (i-- && !_harnessPlugins[i].targetTest(target)) {}

      harnessPlugin = _harnessPlugins[i];
    }

    i = targets.length;

    while (i--) {
      targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
    }

    return targets;
  },
      _getCache = function _getCache(target) {
    return target._gsap || _harness(toArray(target))[0]._gsap;
  },
      _getProperty = function _getProperty(target, property, v) {
    return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
  },
      _forEachName = function _forEachName(names, func) {
    return (names = names.split(",")).forEach(func) || names;
  },
      _round = function _round(value) {
    return Math.round(value * 100000) / 100000 || 0;
  },
      _roundPrecise = function _roundPrecise(value) {
    return Math.round(value * 10000000) / 10000000 || 0;
  },
      _parseRelative = function _parseRelative(start, value) {
    var operator = value.charAt(0),
        end = parseFloat(value.substr(2));
    start = parseFloat(start);
    return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
  },
      _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
    var l = toFind.length,
        i = 0;

    for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l;) {}

    return i < l;
  },
      _lazyRender = function _lazyRender() {
    var l = _lazyTweens.length,
        a = _lazyTweens.slice(0),
        i,
        tween;

    _lazyLookup = {};
    _lazyTweens.length = 0;

    for (i = 0; i < l; i++) {
      tween = a[i];
      tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
    }
  },
      _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
    _lazyTweens.length && _lazyRender();
    animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
    _lazyTweens.length && _lazyRender();
  },
      _numericIfPossible = function _numericIfPossible(value) {
    var n = parseFloat(value);
    return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : _isString(value) ? value.trim() : value;
  },
      _passThrough = function _passThrough(p) {
    return p;
  },
      _setDefaults = function _setDefaults(obj, defaults) {
    for (var p in defaults) {
      p in obj || (obj[p] = defaults[p]);
    }

    return obj;
  },
      _setKeyframeDefaults = function _setKeyframeDefaults(excludeDuration) {
    return function (obj, defaults) {
      for (var p in defaults) {
        p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults[p]);
      }
    };
  },
      _merge = function _merge(base, toMerge) {
    for (var p in toMerge) {
      base[p] = toMerge[p];
    }

    return base;
  },
      _mergeDeep = function _mergeDeep(base, toMerge) {
    for (var p in toMerge) {
      p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
    }

    return base;
  },
      _copyExcluding = function _copyExcluding(obj, excluding) {
    var copy = {},
        p;

    for (p in obj) {
      p in excluding || (copy[p] = obj[p]);
    }

    return copy;
  },
      _inheritDefaults = function _inheritDefaults(vars) {
    var parent = vars.parent || _globalTimeline,
        func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;

    if (_isNotFalse(vars.inherit)) {
      while (parent) {
        func(vars, parent.vars.defaults);
        parent = parent.parent || parent._dp;
      }
    }

    return vars;
  },
      _arraysMatch = function _arraysMatch(a1, a2) {
    var i = a1.length,
        match = i === a2.length;

    while (match && i-- && a1[i] === a2[i]) {}

    return i < 0;
  },
      _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = parent[lastProp],
        t;

    if (sortBy) {
      t = child[sortBy];

      while (prev && prev[sortBy] > t) {
        prev = prev._prev;
      }
    }

    if (prev) {
      child._next = prev._next;
      prev._next = child;
    } else {
      child._next = parent[firstProp];
      parent[firstProp] = child;
    }

    if (child._next) {
      child._next._prev = child;
    } else {
      parent[lastProp] = child;
    }

    child._prev = prev;
    child.parent = child._dp = parent;
    return child;
  },
      _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = child._prev,
        next = child._next;

    if (prev) {
      prev._next = next;
    } else if (parent[firstProp] === child) {
      parent[firstProp] = next;
    }

    if (next) {
      next._prev = prev;
    } else if (parent[lastProp] === child) {
      parent[lastProp] = prev;
    }

    child._next = child._prev = child.parent = null;
  },
      _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
    child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove(child);
    child._act = 0;
  },
      _uncache = function _uncache(animation, child) {
    if (animation && (!child || child._end > animation._dur || child._start < 0)) {
      var a = animation;

      while (a) {
        a._dirty = 1;
        a = a.parent;
      }
    }

    return animation;
  },
      _recacheAncestors = function _recacheAncestors(animation) {
    var parent = animation.parent;

    while (parent && parent.parent) {
      parent._dirty = 1;
      parent.totalDuration();
      parent = parent.parent;
    }

    return animation;
  },
      _rewindStartAt = function _rewindStartAt(tween, totalTime, suppressEvents, force) {
    return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
  },
      _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
    return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
  },
      _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
  },
      _animationCycle = function _animationCycle(tTime, cycleDuration) {
    var whole = Math.floor(tTime /= cycleDuration);
    return tTime && whole === tTime ? whole - 1 : whole;
  },
      _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
  },
      _setEnd = function _setEnd(animation) {
    return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
  },
      _alignPlayhead = function _alignPlayhead(animation, totalTime) {
    var parent = animation._dp;

    if (parent && parent.smoothChildTiming && animation._ts) {
      animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));

      _setEnd(animation);

      parent._dirty || _uncache(parent, animation);
    }

    return animation;
  },
      _postAddChecks = function _postAddChecks(timeline, child) {
    var t;

    if (child._time || child._initted && !child._dur) {
      t = _parentToChildTotalTime(timeline.rawTime(), child);

      if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
        child.render(t, true);
      }
    }

    if (_uncache(timeline, child)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
      if (timeline._dur < timeline.duration()) {
        t = timeline;

        while (t._dp) {
          t.rawTime() >= 0 && t.totalTime(t._tTime);
          t = t._dp;
        }
      }

      timeline._zTime = -_tinyNum;
    }
  },
      _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
    child.parent && _removeFromParent(child);
    child._start = _roundPrecise((_isNumber(position) ? position : position || timeline !== _globalTimeline ? _parsePosition(timeline, position, child) : timeline._time) + child._delay);
    child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));

    _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);

    _isFromOrFromStart(child) || (timeline._recent = child);
    skipChecks || _postAddChecks(timeline, child);
    timeline._ts < 0 && _alignPlayhead(timeline, timeline._tTime);
    return timeline;
  },
      _scrollTrigger = function _scrollTrigger(animation, trigger) {
    return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
  },
      _attemptInitTween = function _attemptInitTween(tween, time, force, suppressEvents, tTime) {
    _initTween(tween, time, tTime);

    if (!tween._initted) {
      return 1;
    }

    if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
      _lazyTweens.push(tween);

      tween._lazy = [tTime, suppressEvents];
      return 1;
    }
  },
      _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart(_ref) {
    var parent = _ref.parent;
    return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart(parent));
  },
      _isFromOrFromStart = function _isFromOrFromStart(_ref2) {
    var data = _ref2.data;
    return data === "isFromStart" || data === "isStart";
  },
      _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
    var prevRatio = tween.ratio,
        ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1,
        repeatDelay = tween._rDelay,
        tTime = 0,
        pt,
        iteration,
        prevIteration;

    if (repeatDelay && tween._repeat) {
      tTime = _clamp(0, tween._tDur, totalTime);
      iteration = _animationCycle(tTime, repeatDelay);
      tween._yoyo && iteration & 1 && (ratio = 1 - ratio);

      if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
        prevRatio = 1 - ratio;
        tween.vars.repeatRefresh && tween._initted && tween.invalidate();
      }
    }

    if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
      if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {
        return;
      }

      prevIteration = tween._zTime;
      tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
      suppressEvents || (suppressEvents = totalTime && !prevIteration);
      tween.ratio = ratio;
      tween._from && (ratio = 1 - ratio);
      tween._time = 0;
      tween._tTime = tTime;
      pt = tween._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }

      totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
      tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
      tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");

      if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
        ratio && _removeFromParent(tween, 1);

        if (!suppressEvents && !_reverting) {
          _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);

          tween._prom && tween._prom();
        }
      }
    } else if (!tween._zTime) {
      tween._zTime = totalTime;
    }
  },
      _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
    var child;

    if (time > prevTime) {
      child = animation._first;

      while (child && child._start <= time) {
        if (child.data === "isPause" && child._start > prevTime) {
          return child;
        }

        child = child._next;
      }
    } else {
      child = animation._last;

      while (child && child._start >= time) {
        if (child.data === "isPause" && child._start < prevTime) {
          return child;
        }

        child = child._prev;
      }
    }
  },
      _setDuration = function _setDuration(animation, duration, skipUncache, leavePlayhead) {
    var repeat = animation._repeat,
        dur = _roundPrecise(duration) || 0,
        totalProgress = animation._tTime / animation._tDur;
    totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
    animation._dur = dur;
    animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
    totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
    animation.parent && _setEnd(animation);
    skipUncache || _uncache(animation.parent, animation);
    return animation;
  },
      _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
  },
      _zeroPosition = {
    _start: 0,
    endTime: _emptyFunc,
    totalDuration: _emptyFunc
  },
      _parsePosition = function _parsePosition(animation, position, percentAnimation) {
    var labels = animation.labels,
        recent = animation._recent || _zeroPosition,
        clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur,
        i,
        offset,
        isPercent;

    if (_isString(position) && (isNaN(position) || position in labels)) {
      offset = position.charAt(0);
      isPercent = position.substr(-1) === "%";
      i = position.indexOf("=");

      if (offset === "<" || offset === ">") {
        i >= 0 && (position = position.replace(/=/, ""));
        return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
      }

      if (i < 0) {
        position in labels || (labels[position] = clippedDuration);
        return labels[position];
      }

      offset = parseFloat(position.charAt(i - 1) + position.substr(i + 1));

      if (isPercent && percentAnimation) {
        offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
      }

      return i > 1 ? _parsePosition(animation, position.substr(0, i - 1), percentAnimation) + offset : clippedDuration + offset;
    }

    return position == null ? clippedDuration : +position;
  },
      _createTweenType = function _createTweenType(type, params, timeline) {
    var isLegacy = _isNumber(params[1]),
        varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
        vars = params[varsIndex],
        irVars,
        parent;

    isLegacy && (vars.duration = params[1]);
    vars.parent = timeline;

    if (type) {
      irVars = vars;
      parent = timeline;

      while (parent && !("immediateRender" in irVars)) {
        irVars = parent.vars.defaults || {};
        parent = _isNotFalse(parent.vars.inherit) && parent.parent;
      }

      vars.immediateRender = _isNotFalse(irVars.immediateRender);
      type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1];
    }

    return new Tween(params[0], vars, params[varsIndex + 1]);
  },
      _conditionalReturn = function _conditionalReturn(value, func) {
    return value || value === 0 ? func(value) : func;
  },
      _clamp = function _clamp(min, max, value) {
    return value < min ? min : value > max ? max : value;
  },
      getUnit = function getUnit(value, v) {
    return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
  },
      clamp = function clamp(min, max, value) {
    return _conditionalReturn(value, function (v) {
      return _clamp(min, max, v);
    });
  },
      _slice = [].slice,
      _isArrayLike = function _isArrayLike(value, nonEmpty) {
    return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
  },
      _flatten = function _flatten(ar, leaveStrings, accumulator) {
    if (accumulator === void 0) {
      accumulator = [];
    }

    return ar.forEach(function (value) {
      var _accumulator;

      return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
    }) || accumulator;
  },
      toArray = function toArray(value, scope, leaveStrings) {
    return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
  },
      selector = function selector(value) {
    value = toArray(value)[0] || _warn("Invalid scope") || {};
    return function (v) {
      var el = value.current || value.nativeElement || value;
      return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
    };
  },
      shuffle = function shuffle(a) {
    return a.sort(function () {
      return .5 - Math.random();
    });
  },
      distribute = function distribute(v) {
    if (_isFunction(v)) {
      return v;
    }

    var vars = _isObject(v) ? v : {
      each: v
    },
        ease = _parseEase(vars.ease),
        from = vars.from || 0,
        base = parseFloat(vars.base) || 0,
        cache = {},
        isDecimal = from > 0 && from < 1,
        ratios = isNaN(from) || isDecimal,
        axis = vars.axis,
        ratioX = from,
        ratioY = from;

    if (_isString(from)) {
      ratioX = ratioY = {
        center: .5,
        edges: .5,
        end: 1
      }[from] || 0;
    } else if (!isDecimal && ratios) {
      ratioX = from[0];
      ratioY = from[1];
    }

    return function (i, target, a) {
      var l = (a || vars).length,
          distances = cache[l],
          originX,
          originY,
          x,
          y,
          d,
          j,
          max,
          min,
          wrapAt;

      if (!distances) {
        wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];

        if (!wrapAt) {
          max = -_bigNum;

          while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {}

          wrapAt--;
        }

        distances = cache[l] = [];
        originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
        originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
        max = 0;
        min = _bigNum;

        for (j = 0; j < l; j++) {
          x = j % wrapAt - originX;
          y = originY - (j / wrapAt | 0);
          distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
          d > max && (max = d);
          d < min && (min = d);
        }

        from === "random" && shuffle(distances);
        distances.max = max - min;
        distances.min = min;
        distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
        distances.b = l < 0 ? base - l : base;
        distances.u = getUnit(vars.amount || vars.each) || 0;
        ease = ease && l < 0 ? _invertEase(ease) : ease;
      }

      l = (distances[i] - distances.min) / distances.max || 0;
      return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u;
    };
  },
      _roundModifier = function _roundModifier(v) {
    var p = Math.pow(10, ((v + "").split(".")[1] || "").length);
    return function (raw) {
      var n = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);

      return (n - n % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw));
    };
  },
      snap = function snap(snapTo, value) {
    var isArray = _isArray(snapTo),
        radius,
        is2D;

    if (!isArray && _isObject(snapTo)) {
      radius = isArray = snapTo.radius || _bigNum;

      if (snapTo.values) {
        snapTo = toArray(snapTo.values);

        if (is2D = !_isNumber(snapTo[0])) {
          radius *= radius;
        }
      } else {
        snapTo = _roundModifier(snapTo.increment);
      }
    }

    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
      is2D = snapTo(raw);
      return Math.abs(is2D - raw) <= radius ? is2D : raw;
    } : function (raw) {
      var x = parseFloat(is2D ? raw.x : raw),
          y = parseFloat(is2D ? raw.y : 0),
          min = _bigNum,
          closest = 0,
          i = snapTo.length,
          dx,
          dy;

      while (i--) {
        if (is2D) {
          dx = snapTo[i].x - x;
          dy = snapTo[i].y - y;
          dx = dx * dx + dy * dy;
        } else {
          dx = Math.abs(snapTo[i] - x);
        }

        if (dx < min) {
          min = dx;
          closest = i;
        }
      }

      closest = !radius || min <= radius ? snapTo[closest] : raw;
      return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
    });
  },
      random = function random(min, max, roundingIncrement, returnFunction) {
    return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
      return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max - min + roundingIncrement * .99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
    });
  },
      pipe = function pipe() {
    for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
      functions[_key] = arguments[_key];
    }

    return function (value) {
      return functions.reduce(function (v, f) {
        return f(v);
      }, value);
    };
  },
      unitize = function unitize(func, unit) {
    return function (value) {
      return func(parseFloat(value)) + (unit || getUnit(value));
    };
  },
      normalize = function normalize(min, max, value) {
    return mapRange(min, max, 0, 1, value);
  },
      _wrapArray = function _wrapArray(a, wrapper, value) {
    return _conditionalReturn(value, function (index) {
      return a[~~wrapper(index)];
    });
  },
      wrap = function wrap(min, max, value) {
    var range = max - min;
    return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function (value) {
      return (range + (value - min) % range) % range + min;
    });
  },
      wrapYoyo = function wrapYoyo(min, max, value) {
    var range = max - min,
        total = range * 2;
    return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function (value) {
      value = (total + (value - min) % total) % total || 0;
      return min + (value > range ? total - value : value);
    });
  },
      _replaceRandom = function _replaceRandom(value) {
    var prev = 0,
        s = "",
        i,
        nums,
        end,
        isArray;

    while (~(i = value.indexOf("random(", prev))) {
      end = value.indexOf(")", i);
      isArray = value.charAt(i + 7) === "[";
      nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
      s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
      prev = end + 1;
    }

    return s + value.substr(prev, value.length - prev);
  },
      mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
    var inRange = inMax - inMin,
        outRange = outMax - outMin;
    return _conditionalReturn(value, function (value) {
      return outMin + ((value - inMin) / inRange * outRange || 0);
    });
  },
      interpolate = function interpolate(start, end, progress, mutate) {
    var func = isNaN(start + end) ? 0 : function (p) {
      return (1 - p) * start + p * end;
    };

    if (!func) {
      var isString = _isString(start),
          master = {},
          p,
          i,
          interpolators,
          l,
          il;

      progress === true && (mutate = 1) && (progress = null);

      if (isString) {
        start = {
          p: start
        };
        end = {
          p: end
        };
      } else if (_isArray(start) && !_isArray(end)) {
        interpolators = [];
        l = start.length;
        il = l - 2;

        for (i = 1; i < l; i++) {
          interpolators.push(interpolate(start[i - 1], start[i]));
        }

        l--;

        func = function func(p) {
          p *= l;
          var i = Math.min(il, ~~p);
          return interpolators[i](p - i);
        };

        progress = end;
      } else if (!mutate) {
        start = _merge(_isArray(start) ? [] : {}, start);
      }

      if (!interpolators) {
        for (p in end) {
          _addPropTween.call(master, start, p, "get", end[p]);
        }

        func = function func(p) {
          return _renderPropTweens(p, master) || (isString ? start.p : start);
        };
      }
    }

    return _conditionalReturn(progress, func);
  },
      _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
    var labels = timeline.labels,
        min = _bigNum,
        p,
        distance,
        label;

    for (p in labels) {
      distance = labels[p] - fromTime;

      if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
        label = p;
        min = distance;
      }
    }

    return label;
  },
      _callback = function _callback(animation, type, executeLazyFirst) {
    var v = animation.vars,
        callback = v[type],
        prevContext = _context,
        context = animation._ctx,
        params,
        scope,
        result;

    if (!callback) {
      return;
    }

    params = v[type + "Params"];
    scope = v.callbackScope || animation;
    executeLazyFirst && _lazyTweens.length && _lazyRender();
    context && (_context = context);
    result = params ? callback.apply(scope, params) : callback.call(scope);
    _context = prevContext;
    return result;
  },
      _interrupt = function _interrupt(animation) {
    _removeFromParent(animation);

    animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
    animation.progress() < 1 && _callback(animation, "onInterrupt");
    return animation;
  },
      _quickTween,
      _createPlugin = function _createPlugin(config) {
    config = !config.name && config["default"] || config;

    var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
      this._props = [];
    } : config,
        instanceDefaults = {
      init: _emptyFunc,
      render: _renderPropTweens,
      add: _addPropTween,
      kill: _killPropTweensOf,
      modifier: _addPluginModifier,
      rawVars: 0
    },
        statics = {
      targetTest: 0,
      get: 0,
      getSetter: _getSetter,
      aliases: {},
      register: 0
    };

    _wake();

    if (config !== Plugin) {
      if (_plugins[name]) {
        return;
      }

      _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics));

      _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics)));

      _plugins[Plugin.prop = name] = Plugin;

      if (config.targetTest) {
        _harnessPlugins.push(Plugin);

        _reservedProps[name] = 1;
      }

      name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
    }

    _addGlobal(name, Plugin);

    config.register && config.register(gsap, Plugin, PropTween);
  },
      _255 = 255,
      _colorLookup = {
    aqua: [0, _255, _255],
    lime: [0, _255, 0],
    silver: [192, 192, 192],
    black: [0, 0, 0],
    maroon: [128, 0, 0],
    teal: [0, 128, 128],
    blue: [0, 0, _255],
    navy: [0, 0, 128],
    white: [_255, _255, _255],
    olive: [128, 128, 0],
    yellow: [_255, _255, 0],
    orange: [_255, 165, 0],
    gray: [128, 128, 128],
    purple: [128, 0, 128],
    green: [0, 128, 0],
    red: [_255, 0, 0],
    pink: [_255, 192, 203],
    cyan: [0, _255, _255],
    transparent: [_255, _255, _255, 0]
  },
      _hue = function _hue(h, m1, m2) {
    h += h < 0 ? 1 : h > 1 ? -1 : 0;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
  },
      splitColor = function splitColor(v, toHSL, forceAlpha) {
    var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0,
        r,
        g,
        b,
        h,
        s,
        l,
        max,
        min,
        d,
        wasHSL;

    if (!a) {
      if (v.substr(-1) === ",") {
        v = v.substr(0, v.length - 1);
      }

      if (_colorLookup[v]) {
        a = _colorLookup[v];
      } else if (v.charAt(0) === "#") {
        if (v.length < 6) {
          r = v.charAt(1);
          g = v.charAt(2);
          b = v.charAt(3);
          v = "#" + r + r + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
        }

        if (v.length === 9) {
          a = parseInt(v.substr(1, 6), 16);
          return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
        }

        v = parseInt(v.substr(1), 16);
        a = [v >> 16, v >> 8 & _255, v & _255];
      } else if (v.substr(0, 3) === "hsl") {
        a = wasHSL = v.match(_strictNumExp);

        if (!toHSL) {
          h = +a[0] % 360 / 360;
          s = +a[1] / 100;
          l = +a[2] / 100;
          g = l <= .5 ? l * (s + 1) : l + s - l * s;
          r = l * 2 - g;
          a.length > 3 && (a[3] *= 1);
          a[0] = _hue(h + 1 / 3, r, g);
          a[1] = _hue(h, r, g);
          a[2] = _hue(h - 1 / 3, r, g);
        } else if (~v.indexOf("=")) {
          a = v.match(_numExp);
          forceAlpha && a.length < 4 && (a[3] = 1);
          return a;
        }
      } else {
        a = v.match(_strictNumExp) || _colorLookup.transparent;
      }

      a = a.map(Number);
    }

    if (toHSL && !wasHSL) {
      r = a[0] / _255;
      g = a[1] / _255;
      b = a[2] / _255;
      max = Math.max(r, g, b);
      min = Math.min(r, g, b);
      l = (max + min) / 2;

      if (max === min) {
        h = s = 0;
      } else {
        d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
        h *= 60;
      }

      a[0] = ~~(h + .5);
      a[1] = ~~(s * 100 + .5);
      a[2] = ~~(l * 100 + .5);
    }

    forceAlpha && a.length < 4 && (a[3] = 1);
    return a;
  },
      _colorOrderData = function _colorOrderData(v) {
    var values = [],
        c = [],
        i = -1;
    v.split(_colorExp).forEach(function (v) {
      var a = v.match(_numWithUnitExp) || [];
      values.push.apply(values, a);
      c.push(i += a.length + 1);
    });
    values.c = c;
    return values;
  },
      _formatColors = function _formatColors(s, toHSL, orderMatchData) {
    var result = "",
        colors = (s + result).match(_colorExp),
        type = toHSL ? "hsla(" : "rgba(",
        i = 0,
        c,
        shell,
        d,
        l;

    if (!colors) {
      return s;
    }

    colors = colors.map(function (color) {
      return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
    });

    if (orderMatchData) {
      d = _colorOrderData(s);
      c = orderMatchData.c;

      if (c.join(result) !== d.c.join(result)) {
        shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
        l = shell.length - 1;

        for (; i < l; i++) {
          result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
        }
      }
    }

    if (!shell) {
      shell = s.split(_colorExp);
      l = shell.length - 1;

      for (; i < l; i++) {
        result += shell[i] + colors[i];
      }
    }

    return result + shell[l];
  },
      _colorExp = function () {
    var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b",
        p;

    for (p in _colorLookup) {
      s += "|" + p + "\\b";
    }

    return new RegExp(s + ")", "gi");
  }(),
      _hslExp = /hsl[a]?\(/,
      _colorStringFilter = function _colorStringFilter(a) {
    var combined = a.join(" "),
        toHSL;
    _colorExp.lastIndex = 0;

    if (_colorExp.test(combined)) {
      toHSL = _hslExp.test(combined);
      a[1] = _formatColors(a[1], toHSL);
      a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1]));
      return true;
    }
  },
      _tickerActive,
      _ticker = function () {
    var _getTime = Date.now,
        _lagThreshold = 500,
        _adjustedLag = 33,
        _startTime = _getTime(),
        _lastUpdate = _startTime,
        _gap = 1000 / 240,
        _nextTime = _gap,
        _listeners = [],
        _id,
        _req,
        _raf,
        _self,
        _delta,
        _i,
        _tick = function _tick(v) {
      var elapsed = _getTime() - _lastUpdate,
          manual = v === true,
          overlap,
          dispatch,
          time,
          frame;

      elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
      _lastUpdate += elapsed;
      time = _lastUpdate - _startTime;
      overlap = time - _nextTime;

      if (overlap > 0 || manual) {
        frame = ++_self.frame;
        _delta = time - _self.time * 1000;
        _self.time = time = time / 1000;
        _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
        dispatch = 1;
      }

      manual || (_id = _req(_tick));

      if (dispatch) {
        for (_i = 0; _i < _listeners.length; _i++) {
          _listeners[_i](time, _delta, frame, v);
        }
      }
    };

    _self = {
      time: 0,
      frame: 0,
      tick: function tick() {
        _tick(true);
      },
      deltaRatio: function deltaRatio(fps) {
        return _delta / (1000 / (fps || 60));
      },
      wake: function wake() {
        if (_coreReady) {
          if (!_coreInitted && _windowExists()) {
            _win = _coreInitted = window;
            _doc = _win.document || {};
            _globals.gsap = gsap;
            (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);

            _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});

            _raf = _win.requestAnimationFrame;
          }

          _id && _self.sleep();

          _req = _raf || function (f) {
            return setTimeout(f, _nextTime - _self.time * 1000 + 1 | 0);
          };

          _tickerActive = 1;

          _tick(2);
        }
      },
      sleep: function sleep() {
        (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);
        _tickerActive = 0;
        _req = _emptyFunc;
      },
      lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
        _lagThreshold = threshold || 1 / _tinyNum;
        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
      },
      fps: function fps(_fps) {
        _gap = 1000 / (_fps || 240);
        _nextTime = _self.time * 1000 + _gap;
      },
      add: function add(callback, once, prioritize) {
        var func = once ? function (t, d, f, v) {
          callback(t, d, f, v);

          _self.remove(func);
        } : callback;

        _self.remove(callback);

        _listeners[prioritize ? "unshift" : "push"](func);

        _wake();

        return func;
      },
      remove: function remove(callback, i) {
        ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1) && _i >= i && _i--;
      },
      _listeners: _listeners
    };
    return _self;
  }(),
      _wake = function _wake() {
    return !_tickerActive && _ticker.wake();
  },
      _easeMap = {},
      _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
      _quotesExp = /["']/g,
      _parseObjectInString = function _parseObjectInString(value) {
    var obj = {},
        split = value.substr(1, value.length - 3).split(":"),
        key = split[0],
        i = 1,
        l = split.length,
        index,
        val,
        parsedVal;

    for (; i < l; i++) {
      val = split[i];
      index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
      parsedVal = val.substr(0, index);
      obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
      key = val.substr(index + 1).trim();
    }

    return obj;
  },
      _valueInParentheses = function _valueInParentheses(value) {
    var open = value.indexOf("(") + 1,
        close = value.indexOf(")"),
        nested = value.indexOf("(", open);
    return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
  },
      _configEaseFromString = function _configEaseFromString(name) {
    var split = (name + "").split("("),
        ease = _easeMap[split[0]];
    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
  },
      _invertEase = function _invertEase(ease) {
    return function (p) {
      return 1 - ease(1 - p);
    };
  },
      _propagateYoyoEase = function _propagateYoyoEase(timeline, isYoyo) {
    var child = timeline._first,
        ease;

    while (child) {
      if (child instanceof Timeline) {
        _propagateYoyoEase(child, isYoyo);
      } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
        if (child.timeline) {
          _propagateYoyoEase(child.timeline, isYoyo);
        } else {
          ease = child._ease;
          child._ease = child._yEase;
          child._yEase = ease;
          child._yoyo = isYoyo;
        }
      }

      child = child._next;
    }
  },
      _parseEase = function _parseEase(ease, defaultEase) {
    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
  },
      _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
    if (easeOut === void 0) {
      easeOut = function easeOut(p) {
        return 1 - easeIn(1 - p);
      };
    }

    if (easeInOut === void 0) {
      easeInOut = function easeInOut(p) {
        return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
      };
    }

    var ease = {
      easeIn: easeIn,
      easeOut: easeOut,
      easeInOut: easeInOut
    },
        lowercaseName;

    _forEachName(names, function (name) {
      _easeMap[name] = _globals[name] = ease;
      _easeMap[lowercaseName = name.toLowerCase()] = easeOut;

      for (var p in ease) {
        _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
      }
    });

    return ease;
  },
      _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
    return function (p) {
      return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
    };
  },
      _configElastic = function _configElastic(type, amplitude, period) {
    var p1 = amplitude >= 1 ? amplitude : 1,
        p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1),
        p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
        easeOut = function easeOut(p) {
      return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    p2 = _2PI / p2;

    ease.config = function (amplitude, period) {
      return _configElastic(type, amplitude, period);
    };

    return ease;
  },
      _configBack = function _configBack(type, overshoot) {
    if (overshoot === void 0) {
      overshoot = 1.70158;
    }

    var easeOut = function easeOut(p) {
      return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    ease.config = function (overshoot) {
      return _configBack(type, overshoot);
    };

    return ease;
  };

  _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i) {
    var power = i < 5 ? i + 1 : i;

    _insertEase(name + ",Power" + (power - 1), i ? function (p) {
      return Math.pow(p, power);
    } : function (p) {
      return p;
    }, function (p) {
      return 1 - Math.pow(1 - p, power);
    }, function (p) {
      return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
    });
  });

  _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;

  _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());

  (function (n, c) {
    var n1 = 1 / c,
        n2 = 2 * n1,
        n3 = 2.5 * n1,
        easeOut = function easeOut(p) {
      return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
    };

    _insertEase("Bounce", function (p) {
      return 1 - easeOut(1 - p);
    }, easeOut);
  })(7.5625, 2.75);

  _insertEase("Expo", function (p) {
    return p ? Math.pow(2, 10 * (p - 1)) : 0;
  });

  _insertEase("Circ", function (p) {
    return -(_sqrt(1 - p * p) - 1);
  });

  _insertEase("Sine", function (p) {
    return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
  });

  _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());

  _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
      if (steps === void 0) {
        steps = 1;
      }

      var p1 = 1 / steps,
          p2 = steps + (immediateStart ? 0 : 1),
          p3 = immediateStart ? 1 : 0,
          max = 1 - _tinyNum;
      return function (p) {
        return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
      };
    }
  };
  _defaults.ease = _easeMap["quad.out"];

  _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
    return _callbackNames += name + "," + name + "Params,";
  });

  var GSCache = function GSCache(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
  };
  var Animation = function () {
    function Animation(vars) {
      this.vars = vars;
      this._delay = +vars.delay || 0;

      if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
        this._rDelay = vars.repeatDelay || 0;
        this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
      }

      this._ts = 1;

      _setDuration(this, +vars.duration, 1, 1);

      this.data = vars.data;

      if (_context) {
        this._ctx = _context;

        _context.data.push(this);
      }

      _tickerActive || _ticker.wake();
    }

    var _proto = Animation.prototype;

    _proto.delay = function delay(value) {
      if (value || value === 0) {
        this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
        this._delay = value;
        return this;
      }

      return this._delay;
    };

    _proto.duration = function duration(value) {
      return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
    };

    _proto.totalDuration = function totalDuration(value) {
      if (!arguments.length) {
        return this._tDur;
      }

      this._dirty = 0;
      return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
    };

    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
      _wake();

      if (!arguments.length) {
        return this._tTime;
      }

      var parent = this._dp;

      if (parent && parent.smoothChildTiming && this._ts) {
        _alignPlayhead(this, _totalTime);

        !parent._dp || parent.parent || _postAddChecks(parent, this);

        while (parent && parent.parent) {
          if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
            parent.totalTime(parent._tTime, true);
          }

          parent = parent.parent;
        }

        if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
          _addToTimeline(this._dp, this, this._start - this._delay);
        }
      }

      if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
        this._ts || (this._pTime = _totalTime);

        _lazySafeRender(this, _totalTime, suppressEvents);
      }

      return this;
    };

    _proto.time = function time(value, suppressEvents) {
      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time;
    };

    _proto.totalProgress = function totalProgress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
    };

    _proto.progress = function progress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
    };

    _proto.iteration = function iteration(value, suppressEvents) {
      var cycleDuration = this.duration() + this._rDelay;

      return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    };

    _proto.timeScale = function timeScale(value) {
      if (!arguments.length) {
        return this._rts === -_tinyNum ? 0 : this._rts;
      }

      if (this._rts === value) {
        return this;
      }

      var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
      this._rts = +value || 0;
      this._ts = this._ps || value === -_tinyNum ? 0 : this._rts;
      this.totalTime(_clamp(-this._delay, this._tDur, tTime), true);

      _setEnd(this);

      return _recacheAncestors(this);
    };

    _proto.paused = function paused(value) {
      if (!arguments.length) {
        return this._ps;
      }

      if (this._ps !== value) {
        this._ps = value;

        if (value) {
          this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
          this._ts = this._act = 0;
        } else {
          _wake();

          this._ts = this._rts;
          this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum));
        }
      }

      return this;
    };

    _proto.startTime = function startTime(value) {
      if (arguments.length) {
        this._start = value;
        var parent = this.parent || this._dp;
        parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
        return this;
      }

      return this._start;
    };

    _proto.endTime = function endTime(includeRepeats) {
      return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
    };

    _proto.rawTime = function rawTime(wrapRepeats) {
      var parent = this.parent || this._dp;
      return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
    };

    _proto.revert = function revert(config) {
      if (config === void 0) {
        config = _revertConfig;
      }

      var prevIsReverting = _reverting;
      _reverting = config;

      if (this._initted || this._startAt) {
        this.timeline && this.timeline.revert(config);
        this.totalTime(-0.01, config.suppressEvents);
      }

      this.data !== "nested" && config.kill !== false && this.kill();
      _reverting = prevIsReverting;
      return this;
    };

    _proto.globalTime = function globalTime(rawTime) {
      var animation = this,
          time = arguments.length ? rawTime : animation.rawTime();

      while (animation) {
        time = animation._start + time / (animation._ts || 1);
        animation = animation._dp;
      }

      return !this.parent && this.vars.immediateRender ? -1 : time;
    };

    _proto.repeat = function repeat(value) {
      if (arguments.length) {
        this._repeat = value === Infinity ? -2 : value;
        return _onUpdateTotalDuration(this);
      }

      return this._repeat === -2 ? Infinity : this._repeat;
    };

    _proto.repeatDelay = function repeatDelay(value) {
      if (arguments.length) {
        var time = this._time;
        this._rDelay = value;

        _onUpdateTotalDuration(this);

        return time ? this.time(time) : this;
      }

      return this._rDelay;
    };

    _proto.yoyo = function yoyo(value) {
      if (arguments.length) {
        this._yoyo = value;
        return this;
      }

      return this._yoyo;
    };

    _proto.seek = function seek(position, suppressEvents) {
      return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };

    _proto.restart = function restart(includeDelay, suppressEvents) {
      return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };

    _proto.play = function play(from, suppressEvents) {
      from != null && this.seek(from, suppressEvents);
      return this.reversed(false).paused(false);
    };

    _proto.reverse = function reverse(from, suppressEvents) {
      from != null && this.seek(from || this.totalDuration(), suppressEvents);
      return this.reversed(true).paused(false);
    };

    _proto.pause = function pause(atTime, suppressEvents) {
      atTime != null && this.seek(atTime, suppressEvents);
      return this.paused(true);
    };

    _proto.resume = function resume() {
      return this.paused(false);
    };

    _proto.reversed = function reversed(value) {
      if (arguments.length) {
        !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0));
        return this;
      }

      return this._rts < 0;
    };

    _proto.invalidate = function invalidate() {
      this._initted = this._act = 0;
      this._zTime = -_tinyNum;
      return this;
    };

    _proto.isActive = function isActive() {
      var parent = this.parent || this._dp,
          start = this._start,
          rawTime;
      return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };

    _proto.eventCallback = function eventCallback(type, callback, params) {
      var vars = this.vars;

      if (arguments.length > 1) {
        if (!callback) {
          delete vars[type];
        } else {
          vars[type] = callback;
          params && (vars[type + "Params"] = params);
          type === "onUpdate" && (this._onUpdate = callback);
        }

        return this;
      }

      return vars[type];
    };

    _proto.then = function then(onFulfilled) {
      var self = this;
      return new Promise(function (resolve) {
        var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
            _resolve = function _resolve() {
          var _then = self.then;
          self.then = null;
          _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
          resolve(f);
          self.then = _then;
        };

        if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {
          _resolve();
        } else {
          self._prom = _resolve;
        }
      });
    };

    _proto.kill = function kill() {
      _interrupt(this);
    };

    return Animation;
  }();

  _setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
  });

  var Timeline = function (_Animation) {
    _inheritsLoose(Timeline, _Animation);

    function Timeline(vars, position) {
      var _this;

      if (vars === void 0) {
        vars = {};
      }

      _this = _Animation.call(this, vars) || this;
      _this.labels = {};
      _this.smoothChildTiming = !!vars.smoothChildTiming;
      _this.autoRemoveChildren = !!vars.autoRemoveChildren;
      _this._sort = _isNotFalse(vars.sortChildren);
      _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
      vars.reversed && _this.reverse();
      vars.paused && _this.paused(true);
      vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
      return _this;
    }

    var _proto2 = Timeline.prototype;

    _proto2.to = function to(targets, vars, position) {
      _createTweenType(0, arguments, this);

      return this;
    };

    _proto2.from = function from(targets, vars, position) {
      _createTweenType(1, arguments, this);

      return this;
    };

    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
      _createTweenType(2, arguments, this);

      return this;
    };

    _proto2.set = function set(targets, vars, position) {
      vars.duration = 0;
      vars.parent = this;
      _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
      vars.immediateRender = !!vars.immediateRender;
      new Tween(targets, vars, _parsePosition(this, position), 1);
      return this;
    };

    _proto2.call = function call(callback, params, position) {
      return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
    };

    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.duration = duration;
      vars.stagger = vars.stagger || stagger;
      vars.onComplete = onCompleteAll;
      vars.onCompleteParams = onCompleteAllParams;
      vars.parent = this;
      new Tween(targets, vars, _parsePosition(this, position));
      return this;
    };

    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.runBackwards = 1;
      _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
      return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
      toVars.startAt = fromVars;
      _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
      return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._dirty ? this.totalDuration() : this._tDur,
          dur = this._dur,
          tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime),
          crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
          time,
          child,
          next,
          iteration,
          cycleDuration,
          prevPaused,
          pauseTween,
          timeScale,
          prevStart,
          prevIteration,
          yoyo,
          isYoyo;
      this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);

      if (tTime !== this._tTime || force || crossingStart) {
        if (prevTime !== this._time && dur) {
          tTime += this._time - prevTime;
          totalTime += this._time - prevTime;
        }

        time = tTime;
        prevStart = this._start;
        timeScale = this._ts;
        prevPaused = !timeScale;

        if (crossingStart) {
          dur || (prevTime = this._zTime);
          (totalTime || !suppressEvents) && (this._zTime = totalTime);
        }

        if (this._repeat) {
          yoyo = this._yoyo;
          cycleDuration = dur + this._rDelay;

          if (this._repeat < -1 && totalTime < 0) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }

          time = _roundPrecise(tTime % cycleDuration);

          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);

            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }

            time > dur && (time = dur);
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);
          !prevTime && this._tTime && prevIteration !== iteration && (prevIteration = iteration);

          if (yoyo && iteration & 1) {
            time = dur - time;
            isYoyo = 1;
          }

          if (iteration !== prevIteration && !this._lock) {
            var rewinding = yoyo && prevIteration & 1,
                doesWrap = rewinding === (yoyo && iteration & 1);
            iteration < prevIteration && (rewinding = !rewinding);
            prevTime = rewinding ? 0 : dur;
            this._lock = 1;
            this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
            this._tTime = tTime;
            !suppressEvents && this.parent && _callback(this, "onRepeat");
            this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);

            if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
              return this;
            }

            dur = this._dur;
            tDur = this._tDur;

            if (doesWrap) {
              this._lock = 2;
              prevTime = rewinding ? dur : -0.0001;
              this.render(prevTime, true);
              this.vars.repeatRefresh && !isYoyo && this.invalidate();
            }

            this._lock = 0;

            if (!this._ts && !prevPaused) {
              return this;
            }

            _propagateYoyoEase(this, isYoyo);
          }
        }

        if (this._hasPause && !this._forcing && this._lock < 2) {
          pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));

          if (pauseTween) {
            tTime -= time - (time = pauseTween._start);
          }
        }

        this._tTime = tTime;
        this._time = time;
        this._act = !timeScale;

        if (!this._initted) {
          this._onUpdate = this.vars.onUpdate;
          this._initted = 1;
          this._zTime = totalTime;
          prevTime = 0;
        }

        if (!prevTime && time && !suppressEvents) {
          _callback(this, "onStart");

          if (this._tTime !== tTime) {
            return this;
          }
        }

        if (time >= prevTime && totalTime >= 0) {
          child = this._first;

          while (child) {
            next = child._next;

            if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = -_tinyNum);
                break;
              }
            }

            child = next;
          }
        } else {
          child = this._last;
          var adjustedTime = totalTime < 0 ? totalTime : time;

          while (child) {
            next = child._prev;

            if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt));

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                break;
              }
            }

            child = next;
          }
        }

        if (pauseTween && !suppressEvents) {
          this.pause();
          pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;

          if (this._ts) {
            this._start = prevStart;

            _setEnd(this);

            return this.render(totalTime, suppressEvents, force);
          }
        }

        this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
        if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) if (!this._lock) {
          (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
            _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);

            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }

      return this;
    };

    _proto2.add = function add(child, position) {
      var _this2 = this;

      _isNumber(position) || (position = _parsePosition(this, position, child));

      if (!(child instanceof Animation)) {
        if (_isArray(child)) {
          child.forEach(function (obj) {
            return _this2.add(obj, position);
          });
          return this;
        }

        if (_isString(child)) {
          return this.addLabel(child, position);
        }

        if (_isFunction(child)) {
          child = Tween.delayedCall(0, child);
        } else {
          return this;
        }
      }

      return this !== child ? _addToTimeline(this, child, position) : this;
    };

    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
      if (nested === void 0) {
        nested = true;
      }

      if (tweens === void 0) {
        tweens = true;
      }

      if (timelines === void 0) {
        timelines = true;
      }

      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = -_bigNum;
      }

      var a = [],
          child = this._first;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          if (child instanceof Tween) {
            tweens && a.push(child);
          } else {
            timelines && a.push(child);
            nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
          }
        }

        child = child._next;
      }

      return a;
    };

    _proto2.getById = function getById(id) {
      var animations = this.getChildren(1, 1, 1),
          i = animations.length;

      while (i--) {
        if (animations[i].vars.id === id) {
          return animations[i];
        }
      }
    };

    _proto2.remove = function remove(child) {
      if (_isString(child)) {
        return this.removeLabel(child);
      }

      if (_isFunction(child)) {
        return this.killTweensOf(child);
      }

      _removeLinkedListItem(this, child);

      if (child === this._recent) {
        this._recent = this._last;
      }

      return _uncache(this);
    };

    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
      if (!arguments.length) {
        return this._tTime;
      }

      this._forcing = 1;

      if (!this._dp && this._ts) {
        this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
      }

      _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);

      this._forcing = 0;
      return this;
    };

    _proto2.addLabel = function addLabel(label, position) {
      this.labels[label] = _parsePosition(this, position);
      return this;
    };

    _proto2.removeLabel = function removeLabel(label) {
      delete this.labels[label];
      return this;
    };

    _proto2.addPause = function addPause(position, callback, params) {
      var t = Tween.delayedCall(0, callback || _emptyFunc, params);
      t.data = "isPause";
      this._hasPause = 1;
      return _addToTimeline(this, t, _parsePosition(this, position));
    };

    _proto2.removePause = function removePause(position) {
      var child = this._first;
      position = _parsePosition(this, position);

      while (child) {
        if (child._start === position && child.data === "isPause") {
          _removeFromParent(child);
        }

        child = child._next;
      }
    };

    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      var tweens = this.getTweensOf(targets, onlyActive),
          i = tweens.length;

      while (i--) {
        _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
      }

      return this;
    };

    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
      var a = [],
          parsedTargets = toArray(targets),
          child = this._first,
          isGlobalTime = _isNumber(onlyActive),
          children;

      while (child) {
        if (child instanceof Tween) {
          if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
            a.push(child);
          }
        } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
          a.push.apply(a, children);
        }

        child = child._next;
      }

      return a;
    };

    _proto2.tweenTo = function tweenTo(position, vars) {
      vars = vars || {};

      var tl = this,
          endTime = _parsePosition(tl, position),
          _vars = vars,
          startAt = _vars.startAt,
          _onStart = _vars.onStart,
          onStartParams = _vars.onStartParams,
          immediateRender = _vars.immediateRender,
          initted,
          tween = Tween.to(tl, _setDefaults({
        ease: vars.ease || "none",
        lazy: false,
        immediateRender: false,
        time: endTime,
        overwrite: "auto",
        duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
        onStart: function onStart() {
          tl.pause();

          if (!initted) {
            var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
            tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
            initted = 1;
          }

          _onStart && _onStart.apply(tween, onStartParams || []);
        }
      }, vars));

      return immediateRender ? tween.render(0) : tween;
    };

    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
      return this.tweenTo(toPosition, _setDefaults({
        startAt: {
          time: _parsePosition(this, fromPosition)
        }
      }, vars));
    };

    _proto2.recent = function recent() {
      return this._recent;
    };

    _proto2.nextLabel = function nextLabel(afterTime) {
      if (afterTime === void 0) {
        afterTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };

    _proto2.previousLabel = function previousLabel(beforeTime) {
      if (beforeTime === void 0) {
        beforeTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };

    _proto2.currentLabel = function currentLabel(value) {
      return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
    };

    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = 0;
      }

      var child = this._first,
          labels = this.labels,
          p;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          child._start += amount;
          child._end += amount;
        }

        child = child._next;
      }

      if (adjustLabels) {
        for (p in labels) {
          if (labels[p] >= ignoreBeforeTime) {
            labels[p] += amount;
          }
        }
      }

      return _uncache(this);
    };

    _proto2.invalidate = function invalidate(soft) {
      var child = this._first;
      this._lock = 0;

      while (child) {
        child.invalidate(soft);
        child = child._next;
      }

      return _Animation.prototype.invalidate.call(this, soft);
    };

    _proto2.clear = function clear(includeLabels) {
      if (includeLabels === void 0) {
        includeLabels = true;
      }

      var child = this._first,
          next;

      while (child) {
        next = child._next;
        this.remove(child);
        child = next;
      }

      this._dp && (this._time = this._tTime = this._pTime = 0);
      includeLabels && (this.labels = {});
      return _uncache(this);
    };

    _proto2.totalDuration = function totalDuration(value) {
      var max = 0,
          self = this,
          child = self._last,
          prevStart = _bigNum,
          prev,
          start,
          parent;

      if (arguments.length) {
        return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
      }

      if (self._dirty) {
        parent = self.parent;

        while (child) {
          prev = child._prev;
          child._dirty && child.totalDuration();
          start = child._start;

          if (start > prevStart && self._sort && child._ts && !self._lock) {
            self._lock = 1;
            _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
          } else {
            prevStart = start;
          }

          if (start < 0 && child._ts) {
            max -= start;

            if (!parent && !self._dp || parent && parent.smoothChildTiming) {
              self._start += start / self._ts;
              self._time -= start;
              self._tTime -= start;
            }

            self.shiftChildren(-start, false, -1e999);
            prevStart = 0;
          }

          child._end > max && child._ts && (max = child._end);
          child = prev;
        }

        _setDuration(self, self === _globalTimeline && self._time > max ? self._time : max, 1, 1);

        self._dirty = 0;
      }

      return self._tDur;
    };

    Timeline.updateRoot = function updateRoot(time) {
      if (_globalTimeline._ts) {
        _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));

        _lastRenderedFrame = _ticker.frame;
      }

      if (_ticker.frame >= _nextGCFrame) {
        _nextGCFrame += _config.autoSleep || 120;
        var child = _globalTimeline._first;
        if (!child || !child._ts) if (_config.autoSleep && _ticker._listeners.length < 2) {
          while (child && !child._ts) {
            child = child._next;
          }

          child || _ticker.sleep();
        }
      }
    };

    return Timeline;
  }(Animation);

  _setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
  });

  var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
        index = 0,
        matchIndex = 0,
        result,
        startNums,
        color,
        endNum,
        chunk,
        startNum,
        hasRandom,
        a;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (hasRandom = ~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }

    if (stringFilter) {
      a = [start, end];
      stringFilter(a, target, prop);
      start = a[0];
      end = a[1];
    }

    startNums = start.match(_complexStringNumExp) || [];

    while (result = _complexStringNumExp.exec(end)) {
      endNum = result[0];
      chunk = end.substring(index, result.index);

      if (color) {
        color = (color + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(") {
        color = 1;
      }

      if (endNum !== startNums[matchIndex++]) {
        startNum = parseFloat(startNums[matchIndex - 1]) || 0;
        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          s: startNum,
          c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
          m: color && color < 4 ? Math.round : 0
        };
        index = _complexStringNumExp.lastIndex;
      }
    }

    pt.c = index < end.length ? end.substring(index, end.length) : "";
    pt.fp = funcParam;

    if (_relExp.test(end) || hasRandom) {
      pt.e = 0;
    }

    this._pt = pt;
    return pt;
  },
      _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
    _isFunction(end) && (end = end(index || 0, target, targets));
    var currentValue = target[prop],
        parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
        setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
        pt;

    if (_isString(end)) {
      if (~end.indexOf("random(")) {
        end = _replaceRandom(end);
      }

      if (end.charAt(1) === "=") {
        pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);

        if (pt || pt === 0) {
          end = pt;
        }
      }
    }

    if (!optional || parsedStart !== end || _forceAllPropTweens) {
      if (!isNaN(parsedStart * end) && end !== "") {
        pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
        funcParam && (pt.fp = funcParam);
        modifier && pt.modifier(modifier, this, target);
        return this._pt = pt;
      }

      !currentValue && !(prop in target) && _missingPlugin(prop, end);
      return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
    }
  },
      _processVars = function _processVars(vars, index, target, targets, tween) {
    _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));

    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
      return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
    }

    var copy = {},
        p;

    for (p in vars) {
      copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
    }

    return copy;
  },
      _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
    var plugin, pt, ptLookup, i;

    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
      tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);

      if (tween !== _quickTween) {
        ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
        i = plugin._props.length;

        while (i--) {
          ptLookup[plugin._props[i]] = pt;
        }
      }
    }

    return plugin;
  },
      _overwritingTween,
      _forceAllPropTweens,
      _initTween = function _initTween(tween, time, tTime) {
    var vars = tween.vars,
        ease = vars.ease,
        startAt = vars.startAt,
        immediateRender = vars.immediateRender,
        lazy = vars.lazy,
        onUpdate = vars.onUpdate,
        onUpdateParams = vars.onUpdateParams,
        callbackScope = vars.callbackScope,
        runBackwards = vars.runBackwards,
        yoyoEase = vars.yoyoEase,
        keyframes = vars.keyframes,
        autoRevert = vars.autoRevert,
        dur = tween._dur,
        prevStartAt = tween._startAt,
        targets = tween._targets,
        parent = tween.parent,
        fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets,
        autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites,
        tl = tween.timeline,
        cleanVars,
        i,
        p,
        pt,
        target,
        hasPriority,
        gsData,
        harness,
        plugin,
        ptLookup,
        index,
        harnessVars,
        overwritten;
    tl && (!keyframes || !ease) && (ease = "none");
    tween._ease = _parseEase(ease, _defaults.ease);
    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;

    if (yoyoEase && tween._yoyo && !tween._repeat) {
      yoyoEase = tween._yEase;
      tween._yEase = tween._ease;
      tween._ease = yoyoEase;
    }

    tween._from = !tl && !!vars.runBackwards;

    if (!tl || keyframes && !vars.stagger) {
      harness = targets[0] ? _getCache(targets[0]).harness : 0;
      harnessVars = harness && vars[harness.prop];
      cleanVars = _copyExcluding(vars, _reservedProps);

      if (prevStartAt) {
        prevStartAt._zTime < 0 && prevStartAt.progress(1);
        time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig);
        prevStartAt._lazy = 0;
      }

      if (startAt) {
        _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
          data: "isStart",
          overwrite: false,
          parent: parent,
          immediateRender: true,
          lazy: _isNotFalse(lazy),
          startAt: null,
          delay: 0,
          onUpdate: onUpdate,
          onUpdateParams: onUpdateParams,
          callbackScope: callbackScope,
          stagger: 0
        }, startAt)));

        tween._startAt._dp = 0;
        time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill);

        if (immediateRender) {
          if (dur && time <= 0 && tTime <= 0) {
            time && (tween._zTime = time);
            return;
          }
        }
      } else if (runBackwards && dur) {
        if (!prevStartAt) {
          time && (immediateRender = false);
          p = _setDefaults({
            overwrite: false,
            data: "isFromStart",
            lazy: immediateRender && _isNotFalse(lazy),
            immediateRender: immediateRender,
            stagger: 0,
            parent: parent
          }, cleanVars);
          harnessVars && (p[harness.prop] = harnessVars);

          _removeFromParent(tween._startAt = Tween.set(targets, p));

          tween._startAt._dp = 0;
          time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
          tween._zTime = time;

          if (!immediateRender) {
            _initTween(tween._startAt, _tinyNum, _tinyNum);
          } else if (!time) {
            return;
          }
        }
      }

      tween._pt = tween._ptCache = 0;
      lazy = dur && _isNotFalse(lazy) || lazy && !dur;

      for (i = 0; i < targets.length; i++) {
        target = targets[i];
        gsData = target._gsap || _harness(targets)[i]._gsap;
        tween._ptLookup[i] = ptLookup = {};
        _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender();
        index = fullTargets === targets ? i : fullTargets.indexOf(target);

        if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
          tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);

          plugin._props.forEach(function (name) {
            ptLookup[name] = pt;
          });

          plugin.priority && (hasPriority = 1);
        }

        if (!harness || harnessVars) {
          for (p in cleanVars) {
            if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
              plugin.priority && (hasPriority = 1);
            } else {
              ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
            }
          }
        }

        tween._op && tween._op[i] && tween.kill(target, tween._op[i]);

        if (autoOverwrite && tween._pt) {
          _overwritingTween = tween;

          _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time));

          overwritten = !tween.parent;
          _overwritingTween = 0;
        }

        tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
      }

      hasPriority && _sortPropTweensByPriority(tween);
      tween._onInit && tween._onInit(tween);
    }

    tween._onUpdate = onUpdate;
    tween._initted = (!tween._op || tween._pt) && !overwritten;
    keyframes && time <= 0 && tl.render(_bigNum, true, true);
  },
      _updatePropTweens = function _updatePropTweens(tween, property, value, start, startIsRelative, ratio, time) {
    var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property],
        pt,
        rootPT,
        lookup,
        i;

    if (!ptCache) {
      ptCache = tween._ptCache[property] = [];
      lookup = tween._ptLookup;
      i = tween._targets.length;

      while (i--) {
        pt = lookup[i][property];

        if (pt && pt.d && pt.d._pt) {
          pt = pt.d._pt;

          while (pt && pt.p !== property && pt.fp !== property) {
            pt = pt._next;
          }
        }

        if (!pt) {
          _forceAllPropTweens = 1;
          tween.vars[property] = "+=0";

          _initTween(tween, time);

          _forceAllPropTweens = 0;
          return 1;
        }

        ptCache.push(pt);
      }
    }

    i = ptCache.length;

    while (i--) {
      rootPT = ptCache[i];
      pt = rootPT._pt || rootPT;
      pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
      pt.c = value - pt.s;
      rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e));
      rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b));
    }
  },
      _addAliasesToVars = function _addAliasesToVars(targets, vars) {
    var harness = targets[0] ? _getCache(targets[0]).harness : 0,
        propertyAliases = harness && harness.aliases,
        copy,
        p,
        i,
        aliases;

    if (!propertyAliases) {
      return vars;
    }

    copy = _merge({}, vars);

    for (p in propertyAliases) {
      if (p in copy) {
        aliases = propertyAliases[p].split(",");
        i = aliases.length;

        while (i--) {
          copy[aliases[i]] = copy[p];
        }
      }
    }

    return copy;
  },
      _parseKeyframe = function _parseKeyframe(prop, obj, allProps, easeEach) {
    var ease = obj.ease || easeEach || "power1.inOut",
        p,
        a;

    if (_isArray(obj)) {
      a = allProps[prop] || (allProps[prop] = []);
      obj.forEach(function (value, i) {
        return a.push({
          t: i / (obj.length - 1) * 100,
          v: value,
          e: ease
        });
      });
    } else {
      for (p in obj) {
        a = allProps[p] || (allProps[p] = []);
        p === "ease" || a.push({
          t: parseFloat(prop),
          v: obj[p],
          e: ease
        });
      }
    }
  },
      _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
    return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
  },
      _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert",
      _staggerPropsToSkip = {};

  _forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function (name) {
    return _staggerPropsToSkip[name] = 1;
  });

  var Tween = function (_Animation2) {
    _inheritsLoose(Tween, _Animation2);

    function Tween(targets, vars, position, skipInherit) {
      var _this3;

      if (typeof vars === "number") {
        position.duration = vars;
        vars = position;
        position = null;
      }

      _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
      var _this3$vars = _this3.vars,
          duration = _this3$vars.duration,
          delay = _this3$vars.delay,
          immediateRender = _this3$vars.immediateRender,
          stagger = _this3$vars.stagger,
          overwrite = _this3$vars.overwrite,
          keyframes = _this3$vars.keyframes,
          defaults = _this3$vars.defaults,
          scrollTrigger = _this3$vars.scrollTrigger,
          yoyoEase = _this3$vars.yoyoEase,
          parent = vars.parent || _globalTimeline,
          parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
          tl,
          i,
          copy,
          l,
          p,
          curTarget,
          staggerFunc,
          staggerVarsToMerge;
      _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
      _this3._ptLookup = [];
      _this3._overwrite = overwrite;

      if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        vars = _this3.vars;
        tl = _this3.timeline = new Timeline({
          data: "nested",
          defaults: defaults || {},
          targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
        });
        tl.kill();
        tl.parent = tl._dp = _assertThisInitialized(_this3);
        tl._start = 0;

        if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
          l = parsedTargets.length;
          staggerFunc = stagger && distribute(stagger);

          if (_isObject(stagger)) {
            for (p in stagger) {
              if (~_staggerTweenProps.indexOf(p)) {
                staggerVarsToMerge || (staggerVarsToMerge = {});
                staggerVarsToMerge[p] = stagger[p];
              }
            }
          }

          for (i = 0; i < l; i++) {
            copy = _copyExcluding(vars, _staggerPropsToSkip);
            copy.stagger = 0;
            yoyoEase && (copy.yoyoEase = yoyoEase);
            staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
            curTarget = parsedTargets[i];
            copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
            copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;

            if (!stagger && l === 1 && copy.delay) {
              _this3._delay = delay = copy.delay;
              _this3._start += delay;
              copy.delay = 0;
            }

            tl.to(curTarget, copy, staggerFunc ? staggerFunc(i, curTarget, parsedTargets) : 0);
            tl._ease = _easeMap.none;
          }

          tl.duration() ? duration = delay = 0 : _this3.timeline = 0;
        } else if (keyframes) {
          _inheritDefaults(_setDefaults(tl.vars.defaults, {
            ease: "none"
          }));

          tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
          var time = 0,
              a,
              kf,
              v;

          if (_isArray(keyframes)) {
            keyframes.forEach(function (frame) {
              return tl.to(parsedTargets, frame, ">");
            });
            tl.duration();
          } else {
            copy = {};

            for (p in keyframes) {
              p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
            }

            for (p in copy) {
              a = copy[p].sort(function (a, b) {
                return a.t - b.t;
              });
              time = 0;

              for (i = 0; i < a.length; i++) {
                kf = a[i];
                v = {
                  ease: kf.e,
                  duration: (kf.t - (i ? a[i - 1].t : 0)) / 100 * duration
                };
                v[p] = kf.v;
                tl.to(parsedTargets, v, time);
                time += v.duration;
              }
            }

            tl.duration() < duration && tl.to({}, {
              duration: duration - tl.duration()
            });
          }
        }

        duration || _this3.duration(duration = tl.duration());
      } else {
        _this3.timeline = 0;
      }

      if (overwrite === true && !_suppressOverwrites) {
        _overwritingTween = _assertThisInitialized(_this3);

        _globalTimeline.killTweensOf(parsedTargets);

        _overwritingTween = 0;
      }

      _addToTimeline(parent, _assertThisInitialized(_this3), position);

      vars.reversed && _this3.reverse();
      vars.paused && _this3.paused(true);

      if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
        _this3._tTime = -_tinyNum;

        _this3.render(Math.max(0, -delay) || 0);
      }

      scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
      return _this3;
    }

    var _proto3 = Tween.prototype;

    _proto3.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._tDur,
          dur = this._dur,
          isNegative = totalTime < 0,
          tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime,
          time,
          pt,
          iteration,
          cycleDuration,
          prevIteration,
          isYoyo,
          ratio,
          timeline,
          yoyoEase;

      if (!dur) {
        _renderZeroDurationTween(this, totalTime, suppressEvents, force);
      } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {
        time = tTime;
        timeline = this.timeline;

        if (this._repeat) {
          cycleDuration = dur + this._rDelay;

          if (this._repeat < -1 && isNegative) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }

          time = _roundPrecise(tTime % cycleDuration);

          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);

            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }

            time > dur && (time = dur);
          }

          isYoyo = this._yoyo && iteration & 1;

          if (isYoyo) {
            yoyoEase = this._yEase;
            time = dur - time;
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);

          if (time === prevTime && !force && this._initted) {
            this._tTime = tTime;
            return this;
          }

          if (iteration !== prevIteration) {
            timeline && this._yEase && _propagateYoyoEase(timeline, isYoyo);

            if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
              this._lock = force = 1;
              this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
            }
          }
        }

        if (!this._initted) {
          if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
            this._tTime = 0;
            return this;
          }

          if (prevTime !== this._time) {
            return this;
          }

          if (dur !== this._dur) {
            return this.render(totalTime, suppressEvents, force);
          }
        }

        this._tTime = tTime;
        this._time = time;

        if (!this._act && this._ts) {
          this._act = 1;
          this._lazy = 0;
        }

        this.ratio = ratio = (yoyoEase || this._ease)(time / dur);

        if (this._from) {
          this.ratio = ratio = 1 - ratio;
        }

        if (time && !prevTime && !suppressEvents) {
          _callback(this, "onStart");

          if (this._tTime !== tTime) {
            return this;
          }
        }

        pt = this._pt;

        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }

        timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * timeline._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);

        if (this._onUpdate && !suppressEvents) {
          isNegative && _rewindStartAt(this, totalTime, suppressEvents, force);

          _callback(this, "onUpdate");
        }

        this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");

        if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
          isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
          (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }

      return this;
    };

    _proto3.targets = function targets() {
      return this._targets;
    };

    _proto3.invalidate = function invalidate(soft) {
      (!soft || !this.vars.runBackwards) && (this._startAt = 0);
      this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
      this._ptLookup = [];
      this.timeline && this.timeline.invalidate(soft);
      return _Animation2.prototype.invalidate.call(this, soft);
    };

    _proto3.resetTo = function resetTo(property, value, start, startIsRelative) {
      _tickerActive || _ticker.wake();
      this._ts || this.play();
      var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts),
          ratio;
      this._initted || _initTween(this, time);
      ratio = this._ease(time / this._dur);

      if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time)) {
        return this.resetTo(property, value, start, startIsRelative);
      }

      _alignPlayhead(this, 0);

      this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
      return this.render(0);
    };

    _proto3.kill = function kill(targets, vars) {
      if (vars === void 0) {
        vars = "all";
      }

      if (!targets && (!vars || vars === "all")) {
        this._lazy = this._pt = 0;
        return this.parent ? _interrupt(this) : this;
      }

      if (this.timeline) {
        var tDur = this.timeline.totalDuration();
        this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this);
        this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1);
        return this;
      }

      var parsedTargets = this._targets,
          killingTargets = targets ? toArray(targets) : parsedTargets,
          propTweenLookup = this._ptLookup,
          firstPT = this._pt,
          overwrittenProps,
          curLookup,
          curOverwriteProps,
          props,
          p,
          pt,
          i;

      if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
        vars === "all" && (this._pt = 0);
        return _interrupt(this);
      }

      overwrittenProps = this._op = this._op || [];

      if (vars !== "all") {
        if (_isString(vars)) {
          p = {};

          _forEachName(vars, function (name) {
            return p[name] = 1;
          });

          vars = p;
        }

        vars = _addAliasesToVars(parsedTargets, vars);
      }

      i = parsedTargets.length;

      while (i--) {
        if (~killingTargets.indexOf(parsedTargets[i])) {
          curLookup = propTweenLookup[i];

          if (vars === "all") {
            overwrittenProps[i] = vars;
            props = curLookup;
            curOverwriteProps = {};
          } else {
            curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
            props = vars;
          }

          for (p in props) {
            pt = curLookup && curLookup[p];

            if (pt) {
              if (!("kill" in pt.d) || pt.d.kill(p) === true) {
                _removeLinkedListItem(this, pt, "_pt");
              }

              delete curLookup[p];
            }

            if (curOverwriteProps !== "all") {
              curOverwriteProps[p] = 1;
            }
          }
        }
      }

      this._initted && !this._pt && firstPT && _interrupt(this);
      return this;
    };

    Tween.to = function to(targets, vars) {
      return new Tween(targets, vars, arguments[2]);
    };

    Tween.from = function from(targets, vars) {
      return _createTweenType(1, arguments);
    };

    Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
      return new Tween(callback, 0, {
        immediateRender: false,
        lazy: false,
        overwrite: false,
        delay: delay,
        onComplete: callback,
        onReverseComplete: callback,
        onCompleteParams: params,
        onReverseCompleteParams: params,
        callbackScope: scope
      });
    };

    Tween.fromTo = function fromTo(targets, fromVars, toVars) {
      return _createTweenType(2, arguments);
    };

    Tween.set = function set(targets, vars) {
      vars.duration = 0;
      vars.repeatDelay || (vars.repeat = 0);
      return new Tween(targets, vars);
    };

    Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };

    return Tween;
  }(Animation);

  _setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
  });

  _forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
    Tween[name] = function () {
      var tl = new Timeline(),
          params = _slice.call(arguments, 0);

      params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
      return tl[name].apply(tl, params);
    };
  });

  var _setterPlain = function _setterPlain(target, property, value) {
    return target[property] = value;
  },
      _setterFunc = function _setterFunc(target, property, value) {
    return target[property](value);
  },
      _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
    return target[property](data.fp, value);
  },
      _setterAttribute = function _setterAttribute(target, property, value) {
    return target.setAttribute(property, value);
  },
      _getSetter = function _getSetter(target, property) {
    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
  },
      _renderPlain = function _renderPlain(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1000000) / 1000000, data);
  },
      _renderBoolean = function _renderBoolean(ratio, data) {
    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
  },
      _renderComplexString = function _renderComplexString(ratio, data) {
    var pt = data._pt,
        s = "";

    if (!ratio && data.b) {
      s = data.b;
    } else if (ratio === 1 && data.e) {
      s = data.e;
    } else {
      while (pt) {
        s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s;
        pt = pt._next;
      }

      s += data.c;
    }

    data.set(data.t, data.p, s, data);
  },
      _renderPropTweens = function _renderPropTweens(ratio, data) {
    var pt = data._pt;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }
  },
      _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
    var pt = this._pt,
        next;

    while (pt) {
      next = pt._next;
      pt.p === property && pt.modifier(modifier, tween, target);
      pt = next;
    }
  },
      _killPropTweensOf = function _killPropTweensOf(property) {
    var pt = this._pt,
        hasNonDependentRemaining,
        next;

    while (pt) {
      next = pt._next;

      if (pt.p === property && !pt.op || pt.op === property) {
        _removeLinkedListItem(this, pt, "_pt");
      } else if (!pt.dep) {
        hasNonDependentRemaining = 1;
      }

      pt = next;
    }

    return !hasNonDependentRemaining;
  },
      _setterWithModifier = function _setterWithModifier(target, property, value, data) {
    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
  },
      _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
    var pt = parent._pt,
        next,
        pt2,
        first,
        last;

    while (pt) {
      next = pt._next;
      pt2 = first;

      while (pt2 && pt2.pr > pt.pr) {
        pt2 = pt2._next;
      }

      if (pt._prev = pt2 ? pt2._prev : last) {
        pt._prev._next = pt;
      } else {
        first = pt;
      }

      if (pt._next = pt2) {
        pt2._prev = pt;
      } else {
        last = pt;
      }

      pt = next;
    }

    parent._pt = first;
  };

  var PropTween = function () {
    function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
      this.t = target;
      this.s = start;
      this.c = change;
      this.p = prop;
      this.r = renderer || _renderPlain;
      this.d = data || this;
      this.set = setter || _setterPlain;
      this.pr = priority || 0;
      this._next = next;

      if (next) {
        next._prev = this;
      }
    }

    var _proto4 = PropTween.prototype;

    _proto4.modifier = function modifier(func, tween, target) {
      this.mSet = this.mSet || this.set;
      this.set = _setterWithModifier;
      this.m = func;
      this.mt = target;
      this.tween = tween;
    };

    return PropTween;
  }();

  _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function (name) {
    return _reservedProps[name] = 1;
  });

  _globals.TweenMax = _globals.TweenLite = Tween;
  _globals.TimelineLite = _globals.TimelineMax = Timeline;
  _globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
  });
  _config.stringFilter = _colorStringFilter;

  var _media = [],
      _listeners = {},
      _emptyArray = [],
      _lastMediaTime = 0,
      _dispatch = function _dispatch(type) {
    return (_listeners[type] || _emptyArray).map(function (f) {
      return f();
    });
  },
      _onMediaChange = function _onMediaChange() {
    var time = Date.now(),
        matches = [];

    if (time - _lastMediaTime > 2) {
      _dispatch("matchMediaInit");

      _media.forEach(function (c) {
        var queries = c.queries,
            conditions = c.conditions,
            match,
            p,
            anyMatch,
            toggled;

        for (p in queries) {
          match = _win.matchMedia(queries[p]).matches;
          match && (anyMatch = 1);

          if (match !== conditions[p]) {
            conditions[p] = match;
            toggled = 1;
          }
        }

        if (toggled) {
          c.revert();
          anyMatch && matches.push(c);
        }
      });

      _dispatch("matchMediaRevert");

      matches.forEach(function (c) {
        return c.onMatch(c);
      });
      _lastMediaTime = time;

      _dispatch("matchMedia");
    }
  };

  var Context = function () {
    function Context(func, scope) {
      this.selector = scope && selector(scope);
      this.data = [];
      this._r = [];
      this.isReverted = false;
      func && this.add(func);
    }

    var _proto5 = Context.prototype;

    _proto5.add = function add(name, func, scope) {
      if (_isFunction(name)) {
        scope = func;
        func = name;
        name = _isFunction;
      }

      var self = this,
          f = function f() {
        var prev = _context,
            prevSelector = self.selector,
            result;
        prev && prev !== self && prev.data.push(self);
        scope && (self.selector = selector(scope));
        _context = self;
        result = func.apply(self, arguments);
        _isFunction(result) && self._r.push(result);
        _context = prev;
        self.selector = prevSelector;
        self.isReverted = false;
        return result;
      };

      self.last = f;
      return name === _isFunction ? f(self) : name ? self[name] = f : f;
    };

    _proto5.ignore = function ignore(func) {
      var prev = _context;
      _context = null;
      func(this);
      _context = prev;
    };

    _proto5.getTweens = function getTweens() {
      var a = [];
      this.data.forEach(function (e) {
        return e instanceof Context ? a.push.apply(a, e.getTweens()) : e instanceof Tween && !(e.parent && e.parent.data === "nested") && a.push(e);
      });
      return a;
    };

    _proto5.clear = function clear() {
      this._r.length = this.data.length = 0;
    };

    _proto5.kill = function kill(revert, matchMedia) {
      var _this4 = this;

      if (revert) {
        var tweens = this.getTweens();
        this.data.forEach(function (t) {
          if (t.data === "isFlip") {
            t.revert();
            t.getChildren(true, true, false).forEach(function (tween) {
              return tweens.splice(tweens.indexOf(tween), 1);
            });
          }
        });
        tweens.map(function (t) {
          return {
            g: t.globalTime(0),
            t: t
          };
        }).sort(function (a, b) {
          return b.g - a.g || -1;
        }).forEach(function (o) {
          return o.t.revert(revert);
        });
        this.data.forEach(function (e) {
          return !(e instanceof Animation) && e.revert && e.revert(revert);
        });

        this._r.forEach(function (f) {
          return f(revert, _this4);
        });

        this.isReverted = true;
      } else {
        this.data.forEach(function (e) {
          return e.kill && e.kill();
        });
      }

      this.clear();

      if (matchMedia) {
        var i = _media.indexOf(this);

        !!~i && _media.splice(i, 1);
      }
    };

    _proto5.revert = function revert(config) {
      this.kill(config || {});
    };

    return Context;
  }();

  var MatchMedia = function () {
    function MatchMedia(scope) {
      this.contexts = [];
      this.scope = scope;
    }

    var _proto6 = MatchMedia.prototype;

    _proto6.add = function add(conditions, func, scope) {
      _isObject(conditions) || (conditions = {
        matches: conditions
      });
      var context = new Context(0, scope || this.scope),
          cond = context.conditions = {},
          mq,
          p,
          active;
      this.contexts.push(context);
      func = context.add("onMatch", func);
      context.queries = conditions;

      for (p in conditions) {
        if (p === "all") {
          active = 1;
        } else {
          mq = _win.matchMedia(conditions[p]);

          if (mq) {
            _media.indexOf(context) < 0 && _media.push(context);
            (cond[p] = mq.matches) && (active = 1);
            mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
          }
        }
      }

      active && func(context);
      return this;
    };

    _proto6.revert = function revert(config) {
      this.kill(config || {});
    };

    _proto6.kill = function kill(revert) {
      this.contexts.forEach(function (c) {
        return c.kill(revert, true);
      });
    };

    return MatchMedia;
  }();

  var _gsap = {
    registerPlugin: function registerPlugin() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      args.forEach(function (config) {
        return _createPlugin(config);
      });
    },
    timeline: function timeline(vars) {
      return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
      return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property, unit, uncache) {
      _isString(target) && (target = toArray(target)[0]);

      var getter = _getCache(target || {}).get,
          format = unit ? _passThrough : _numericIfPossible;

      unit === "native" && (unit = "");
      return !target ? target : !property ? function (property, unit, uncache) {
        return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
      } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    },
    quickSetter: function quickSetter(target, property, unit) {
      target = toArray(target);

      if (target.length > 1) {
        var setters = target.map(function (t) {
          return gsap.quickSetter(t, property, unit);
        }),
            l = setters.length;
        return function (value) {
          var i = l;

          while (i--) {
            setters[i](value);
          }
        };
      }

      target = target[0] || {};

      var Plugin = _plugins[property],
          cache = _getCache(target),
          p = cache.harness && (cache.harness.aliases || {})[property] || property,
          setter = Plugin ? function (value) {
        var p = new Plugin();
        _quickTween._pt = 0;
        p.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
        p.render(1, p);
        _quickTween._pt && _renderPropTweens(1, _quickTween);
      } : cache.set(target, p);

      return Plugin ? setter : function (value) {
        return setter(target, p, unit ? value + unit : value, cache, 1);
      };
    },
    quickTo: function quickTo(target, property, vars) {
      var _merge2;

      var tween = gsap.to(target, _merge((_merge2 = {}, _merge2[property] = "+=0.1", _merge2.paused = true, _merge2), vars || {})),
          func = function func(value, start, startIsRelative) {
        return tween.resetTo(property, value, start, startIsRelative);
      };

      func.tween = tween;
      return func;
    },
    isTweening: function isTweening(targets) {
      return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults(value) {
      value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
      return _mergeDeep(_defaults, value || {});
    },
    config: function config(value) {
      return _mergeDeep(_config, value || {});
    },
    registerEffect: function registerEffect(_ref3) {
      var name = _ref3.name,
          effect = _ref3.effect,
          plugins = _ref3.plugins,
          defaults = _ref3.defaults,
          extendTimeline = _ref3.extendTimeline;
      (plugins || "").split(",").forEach(function (pluginName) {
        return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
      });

      _effects[name] = function (targets, vars, tl) {
        return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
      };

      if (extendTimeline) {
        Timeline.prototype[name] = function (targets, vars, position) {
          return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
      }
    },
    registerEase: function registerEase(name, ease) {
      _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
      return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
      return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
      if (vars === void 0) {
        vars = {};
      }

      var tl = new Timeline(vars),
          child,
          next;
      tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);

      _globalTimeline.remove(tl);

      tl._dp = 0;
      tl._time = tl._tTime = _globalTimeline._time;
      child = _globalTimeline._first;

      while (child) {
        next = child._next;

        if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
          _addToTimeline(tl, child, child._start - child._delay);
        }

        child = next;
      }

      _addToTimeline(_globalTimeline, tl, 0);

      return tl;
    },
    context: function context(func, scope) {
      return func ? new Context(func, scope) : _context;
    },
    matchMedia: function matchMedia(scope) {
      return new MatchMedia(scope);
    },
    matchMediaRefresh: function matchMediaRefresh() {
      return _media.forEach(function (c) {
        var cond = c.conditions,
            found,
            p;

        for (p in cond) {
          if (cond[p]) {
            cond[p] = false;
            found = 1;
          }
        }

        found && c.revert();
      }) || _onMediaChange();
    },
    addEventListener: function addEventListener(type, callback) {
      var a = _listeners[type] || (_listeners[type] = []);
      ~a.indexOf(callback) || a.push(callback);
    },
    removeEventListener: function removeEventListener(type, callback) {
      var a = _listeners[type],
          i = a && a.indexOf(callback);
      i >= 0 && a.splice(i, 1);
    },
    utils: {
      wrap: wrap,
      wrapYoyo: wrapYoyo,
      distribute: distribute,
      random: random,
      snap: snap,
      normalize: normalize,
      getUnit: getUnit,
      clamp: clamp,
      splitColor: splitColor,
      toArray: toArray,
      selector: selector,
      mapRange: mapRange,
      pipe: pipe,
      unitize: unitize,
      interpolate: interpolate,
      shuffle: shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
      PropTween: PropTween,
      globals: _addGlobal,
      Tween: Tween,
      Timeline: Timeline,
      Animation: Animation,
      getCache: _getCache,
      _removeLinkedListItem: _removeLinkedListItem,
      reverting: function reverting() {
        return _reverting;
      },
      context: function context(toAdd) {
        if (toAdd && _context) {
          _context.data.push(toAdd);

          toAdd._ctx = _context;
        }

        return _context;
      },
      suppressOverwrites: function suppressOverwrites(value) {
        return _suppressOverwrites = value;
      }
    }
  };

  _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
    return _gsap[name] = Tween[name];
  });

  _ticker.add(Timeline.updateRoot);

  _quickTween = _gsap.to({}, {
    duration: 0
  });

  var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
    var pt = plugin._pt;

    while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
      pt = pt._next;
    }

    return pt;
  },
      _addModifiers = function _addModifiers(tween, modifiers) {
    var targets = tween._targets,
        p,
        i,
        pt;

    for (p in modifiers) {
      i = targets.length;

      while (i--) {
        pt = tween._ptLookup[i][p];

        if (pt && (pt = pt.d)) {
          if (pt._pt) {
            pt = _getPluginPropTween(pt, p);
          }

          pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
        }
      }
    }
  },
      _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
    return {
      name: name,
      rawVars: 1,
      init: function init(target, vars, tween) {
        tween._onInit = function (tween) {
          var temp, p;

          if (_isString(vars)) {
            temp = {};

            _forEachName(vars, function (name) {
              return temp[name] = 1;
            });

            vars = temp;
          }

          if (modifier) {
            temp = {};

            for (p in vars) {
              temp[p] = modifier(vars[p]);
            }

            vars = temp;
          }

          _addModifiers(tween, vars);
        };
      }
    };
  };

  var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index, targets) {
      var p, pt, v;
      this.tween = tween;

      for (p in vars) {
        v = target.getAttribute(p) || "";
        pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
        pt.op = p;
        pt.b = v;

        this._props.push(p);
      }
    },
    render: function render(ratio, data) {
      var pt = data._pt;

      while (pt) {
        _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d);
        pt = pt._next;
      }
    }
  }, {
    name: "endArray",
    init: function init(target, value) {
      var i = value.length;

      while (i--) {
        this.add(target, i, target[i] || 0, value[i], 0, 0, 0, 0, 0, 1);
      }
    }
  }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;
  Tween.version = Timeline.version = gsap.version = "3.11.3";
  _coreReady = 1;
  _windowExists() && _wake();
  var Power0 = _easeMap.Power0,
      Power1 = _easeMap.Power1,
      Power2 = _easeMap.Power2,
      Power3 = _easeMap.Power3,
      Power4 = _easeMap.Power4,
      Linear = _easeMap.Linear,
      Quad = _easeMap.Quad,
      Cubic = _easeMap.Cubic,
      Quart = _easeMap.Quart,
      Quint = _easeMap.Quint,
      Strong = _easeMap.Strong,
      Elastic = _easeMap.Elastic,
      Back = _easeMap.Back,
      SteppedEase = _easeMap.SteppedEase,
      Bounce = _easeMap.Bounce,
      Sine = _easeMap.Sine,
      Expo = _easeMap.Expo,
      Circ = _easeMap.Circ;

  var _win$1,
      _doc$1,
      _docElement,
      _pluginInitted,
      _tempDiv,
      _tempDivStyler,
      _recentSetterPlugin,
      _reverting$1,
      _windowExists$1 = function _windowExists() {
    return typeof window !== "undefined";
  },
      _transformProps = {},
      _RAD2DEG = 180 / Math.PI,
      _DEG2RAD = Math.PI / 180,
      _atan2 = Math.atan2,
      _bigNum$1 = 1e8,
      _capsExp = /([A-Z])/g,
      _horizontalExp = /(left|right|width|margin|padding|x)/i,
      _complexExp = /[\s,\(]\S/,
      _propertyAliases = {
    autoAlpha: "opacity,visibility",
    scale: "scaleX,scaleY",
    alpha: "opacity"
  },
      _renderCSSProp = function _renderCSSProp(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
  },
      _renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
    var value = data.s + data.c * ratio;
    data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);
  },
      _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
    return data.set(data.t, data.p, ratio ? data.e : data.b, data);
  },
      _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
  },
      _setterCSSStyle = function _setterCSSStyle(target, property, value) {
    return target.style[property] = value;
  },
      _setterCSSProp = function _setterCSSProp(target, property, value) {
    return target.style.setProperty(property, value);
  },
      _setterTransform = function _setterTransform(target, property, value) {
    return target._gsap[property] = value;
  },
      _setterScale = function _setterScale(target, property, value) {
    return target._gsap.scaleX = target._gsap.scaleY = value;
  },
      _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache.scaleX = cache.scaleY = value;
    cache.renderTransform(ratio, cache);
  },
      _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache[property] = value;
    cache.renderTransform(ratio, cache);
  },
      _transformProp = "transform",
      _transformOriginProp = _transformProp + "Origin",
      _saveStyle = function _saveStyle(property, isNotCSS) {
    var _this = this;

    var target = this.target,
        style = target.style;

    if (property in _transformProps) {
      this.tfm = this.tfm || {};

      if (property !== "transform") {
        property = _propertyAliases[property] || property;
        ~property.indexOf(",") ? property.split(",").forEach(function (a) {
          return _this.tfm[a] = _get(target, a);
        }) : this.tfm[property] = target._gsap.x ? target._gsap[property] : _get(target, property);
      }

      if (this.props.indexOf(_transformProp) >= 0) {
        return;
      }

      if (target._gsap.svg) {
        this.svgo = target.getAttribute("data-svg-origin");
        this.props.push(_transformOriginProp, isNotCSS, "");
      }

      property = _transformProp;
    }

    (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
  },
      _removeIndependentTransforms = function _removeIndependentTransforms(style) {
    if (style.translate) {
      style.removeProperty("translate");
      style.removeProperty("scale");
      style.removeProperty("rotate");
    }
  },
      _revertStyle = function _revertStyle() {
    var props = this.props,
        target = this.target,
        style = target.style,
        cache = target._gsap,
        i,
        p;

    for (i = 0; i < props.length; i += 3) {
      props[i + 1] ? target[props[i]] = props[i + 2] : props[i + 2] ? style[props[i]] = props[i + 2] : style.removeProperty(props[i].replace(_capsExp, "-$1").toLowerCase());
    }

    if (this.tfm) {
      for (p in this.tfm) {
        cache[p] = this.tfm[p];
      }

      if (cache.svg) {
        cache.renderTransform();
        target.setAttribute("data-svg-origin", this.svgo || "");
      }

      i = _reverting$1();

      if (i && !i.isStart && !style[_transformProp]) {
        _removeIndependentTransforms(style);

        cache.uncache = 1;
      }
    }
  },
      _getStyleSaver = function _getStyleSaver(target, properties) {
    var saver = {
      target: target,
      props: [],
      revert: _revertStyle,
      save: _saveStyle
    };
    properties && properties.split(",").forEach(function (p) {
      return saver.save(p);
    });
    return saver;
  },
      _supports3D,
      _createElement = function _createElement(type, ns) {
    var e = _doc$1.createElementNS ? _doc$1.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc$1.createElement(type);
    return e.style ? e : _doc$1.createElement(type);
  },
      _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
    var cs = getComputedStyle(target);
    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || "";
  },
      _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
      _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
    var e = element || _tempDiv,
        s = e.style,
        i = 5;

    if (property in s && !preferPrefix) {
      return property;
    }

    property = property.charAt(0).toUpperCase() + property.substr(1);

    while (i-- && !(_prefixes[i] + property in s)) {}

    return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
  },
      _initCore = function _initCore() {
    if (_windowExists$1() && window.document) {
      _win$1 = window;
      _doc$1 = _win$1.document;
      _docElement = _doc$1.documentElement;
      _tempDiv = _createElement("div") || {
        style: {}
      };
      _tempDivStyler = _createElement("div");
      _transformProp = _checkPropPrefix(_transformProp);
      _transformOriginProp = _transformProp + "Origin";
      _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
      _supports3D = !!_checkPropPrefix("perspective");
      _reverting$1 = gsap.core.reverting;
      _pluginInitted = 1;
    }
  },
      _getBBoxHack = function _getBBoxHack(swapIfPossible) {
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
        oldParent = this.parentNode,
        oldSibling = this.nextSibling,
        oldCSS = this.style.cssText,
        bbox;

    _docElement.appendChild(svg);

    svg.appendChild(this);
    this.style.display = "block";

    if (swapIfPossible) {
      try {
        bbox = this.getBBox();
        this._gsapBBox = this.getBBox;
        this.getBBox = _getBBoxHack;
      } catch (e) {}
    } else if (this._gsapBBox) {
      bbox = this._gsapBBox();
    }

    if (oldParent) {
      if (oldSibling) {
        oldParent.insertBefore(this, oldSibling);
      } else {
        oldParent.appendChild(this);
      }
    }

    _docElement.removeChild(svg);

    this.style.cssText = oldCSS;
    return bbox;
  },
      _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
    var i = attributesArray.length;

    while (i--) {
      if (target.hasAttribute(attributesArray[i])) {
        return target.getAttribute(attributesArray[i]);
      }
    }
  },
      _getBBox = function _getBBox(target) {
    var bounds;

    try {
      bounds = target.getBBox();
    } catch (error) {
      bounds = _getBBoxHack.call(target, true);
    }

    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
    return bounds && !bounds.width && !bounds.x && !bounds.y ? {
      x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
      y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
      width: 0,
      height: 0
    } : bounds;
  },
      _isSVG = function _isSVG(e) {
    return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
  },
      _removeProperty = function _removeProperty(target, property) {
    if (property) {
      var style = target.style;

      if (property in _transformProps && property !== _transformOriginProp) {
        property = _transformProp;
      }

      if (style.removeProperty) {
        if (property.substr(0, 2) === "ms" || property.substr(0, 6) === "webkit") {
          property = "-" + property;
        }

        style.removeProperty(property.replace(_capsExp, "-$1").toLowerCase());
      } else {
        style.removeAttribute(property);
      }
    }
  },
      _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
    var pt = new PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
    plugin._pt = pt;
    pt.b = beginning;
    pt.e = end;

    plugin._props.push(property);

    return pt;
  },
      _nonConvertibleUnits = {
    deg: 1,
    rad: 1,
    turn: 1
  },
      _nonStandardLayouts = {
    grid: 1,
    flex: 1
  },
      _convertToUnit = function _convertToUnit(target, property, value, unit) {
    var curValue = parseFloat(value) || 0,
        curUnit = (value + "").trim().substr((curValue + "").length) || "px",
        style = _tempDiv.style,
        horizontal = _horizontalExp.test(property),
        isRootSVG = target.tagName.toLowerCase() === "svg",
        measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
        amount = 100,
        toPixels = unit === "px",
        toPercent = unit === "%",
        px,
        parent,
        cache,
        isSVG;

    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
      return curValue;
    }

    curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
    isSVG = target.getCTM && _isSVG(target);

    if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
      px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
      return _round(toPercent ? curValue / px * amount : curValue / 100 * px);
    }

    style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
    parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;

    if (isSVG) {
      parent = (target.ownerSVGElement || {}).parentNode;
    }

    if (!parent || parent === _doc$1 || !parent.appendChild) {
      parent = _doc$1.body;
    }

    cache = parent._gsap;

    if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time && !cache.uncache) {
      return _round(curValue / cache.width * amount);
    } else {
      (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static");
      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";

      if (horizontal && toPercent) {
        cache = _getCache(parent);
        cache.time = _ticker.time;
        cache.width = parent[measureProperty];
      }
    }

    return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
  },
      _get = function _get(target, property, unit, uncache) {
    var value;
    _pluginInitted || _initCore();

    if (property in _propertyAliases && property !== "transform") {
      property = _propertyAliases[property];

      if (~property.indexOf(",")) {
        property = property.split(",")[0];
      }
    }

    if (_transformProps[property] && property !== "transform") {
      value = _parseTransform(target, uncache);
      value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
    } else {
      value = target.style[property];

      if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
        value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || _getProperty(target, property) || (property === "opacity" ? 1 : 0);
      }
    }

    return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
  },
      _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
    if (!start || start === "none") {
      var p = _checkPropPrefix(prop, target, 1),
          s = p && _getComputedProperty(target, p, 1);

      if (s && s !== start) {
        prop = p;
        start = s;
      } else if (prop === "borderColor") {
        start = _getComputedProperty(target, "borderTopColor");
      }
    }

    var pt = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString),
        index = 0,
        matchIndex = 0,
        a,
        result,
        startValues,
        startNum,
        color,
        startValue,
        endValue,
        endNum,
        chunk,
        endUnit,
        startUnit,
        endValues;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (end === "auto") {
      target.style[prop] = end;
      end = _getComputedProperty(target, prop) || end;
      target.style[prop] = start;
    }

    a = [start, end];

    _colorStringFilter(a);

    start = a[0];
    end = a[1];
    startValues = start.match(_numWithUnitExp) || [];
    endValues = end.match(_numWithUnitExp) || [];

    if (endValues.length) {
      while (result = _numWithUnitExp.exec(end)) {
        endValue = result[0];
        chunk = end.substring(index, result.index);

        if (color) {
          color = (color + 1) % 5;
        } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
          color = 1;
        }

        if (endValue !== (startValue = startValues[matchIndex++] || "")) {
          startNum = parseFloat(startValue) || 0;
          startUnit = startValue.substr((startNum + "").length);
          endValue.charAt(1) === "=" && (endValue = _parseRelative(startNum, endValue) + startUnit);
          endNum = parseFloat(endValue);
          endUnit = endValue.substr((endNum + "").length);
          index = _numWithUnitExp.lastIndex - endUnit.length;

          if (!endUnit) {
            endUnit = endUnit || _config.units[prop] || startUnit;

            if (index === end.length) {
              end += endUnit;
              pt.e += endUnit;
            }
          }

          if (startUnit !== endUnit) {
            startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
          }

          pt._pt = {
            _next: pt._pt,
            p: chunk || matchIndex === 1 ? chunk : ",",
            s: startNum,
            c: endNum - startNum,
            m: color && color < 4 || prop === "zIndex" ? Math.round : 0
          };
        }
      }

      pt.c = index < end.length ? end.substring(index, end.length) : "";
    } else {
      pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
    }

    _relExp.test(end) && (pt.e = 0);
    this._pt = pt;
    return pt;
  },
      _keywordToPercent = {
    top: "0%",
    bottom: "100%",
    left: "0%",
    right: "100%",
    center: "50%"
  },
      _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
    var split = value.split(" "),
        x = split[0],
        y = split[1] || "50%";

    if (x === "top" || x === "bottom" || y === "left" || y === "right") {
      value = x;
      x = y;
      y = value;
    }

    split[0] = _keywordToPercent[x] || x;
    split[1] = _keywordToPercent[y] || y;
    return split.join(" ");
  },
      _renderClearProps = function _renderClearProps(ratio, data) {
    if (data.tween && data.tween._time === data.tween._dur) {
      var target = data.t,
          style = target.style,
          props = data.u,
          cache = target._gsap,
          prop,
          clearTransforms,
          i;

      if (props === "all" || props === true) {
        style.cssText = "";
        clearTransforms = 1;
      } else {
        props = props.split(",");
        i = props.length;

        while (--i > -1) {
          prop = props[i];

          if (_transformProps[prop]) {
            clearTransforms = 1;
            prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
          }

          _removeProperty(target, prop);
        }
      }

      if (clearTransforms) {
        _removeProperty(target, _transformProp);

        if (cache) {
          cache.svg && target.removeAttribute("transform");

          _parseTransform(target, 1);

          cache.uncache = 1;

          _removeIndependentTransforms(style);
        }
      }
    }
  },
      _specialProps = {
    clearProps: function clearProps(plugin, target, property, endValue, tween) {
      if (tween.data !== "isFromStart") {
        var pt = plugin._pt = new PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
        pt.u = endValue;
        pt.pr = -10;
        pt.tween = tween;

        plugin._props.push(property);

        return 1;
      }
    }
  },
      _identity2DMatrix = [1, 0, 0, 1, 0, 0],
      _rotationalProperties = {},
      _isNullTransform = function _isNullTransform(value) {
    return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
  },
      _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
    var matrixString = _getComputedProperty(target, _transformProp);

    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
  },
      _getMatrix = function _getMatrix(target, force2D) {
    var cache = target._gsap || _getCache(target),
        style = target.style,
        matrix = _getComputedTransformMatrixAsArray(target),
        parent,
        nextSibling,
        temp,
        addedToDOM;

    if (cache.svg && target.getAttribute("transform")) {
      temp = target.transform.baseVal.consolidate().matrix;
      matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
      return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
      temp = style.display;
      style.display = "block";
      parent = target.parentNode;

      if (!parent || !target.offsetParent) {
        addedToDOM = 1;
        nextSibling = target.nextElementSibling;

        _docElement.appendChild(target);
      }

      matrix = _getComputedTransformMatrixAsArray(target);
      temp ? style.display = temp : _removeProperty(target, "display");

      if (addedToDOM) {
        nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
      }
    }

    return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
  },
      _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
    var cache = target._gsap,
        matrix = matrixArray || _getMatrix(target, true),
        xOriginOld = cache.xOrigin || 0,
        yOriginOld = cache.yOrigin || 0,
        xOffsetOld = cache.xOffset || 0,
        yOffsetOld = cache.yOffset || 0,
        a = matrix[0],
        b = matrix[1],
        c = matrix[2],
        d = matrix[3],
        tx = matrix[4],
        ty = matrix[5],
        originSplit = origin.split(" "),
        xOrigin = parseFloat(originSplit[0]) || 0,
        yOrigin = parseFloat(originSplit[1]) || 0,
        bounds,
        determinant,
        x,
        y;

    if (!originIsAbsolute) {
      bounds = _getBBox(target);
      xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
      yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
      x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
      y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
      xOrigin = x;
      yOrigin = y;
    }

    if (smooth || smooth !== false && cache.smooth) {
      tx = xOrigin - xOriginOld;
      ty = yOrigin - yOriginOld;
      cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
      cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
    } else {
      cache.xOffset = cache.yOffset = 0;
    }

    cache.xOrigin = xOrigin;
    cache.yOrigin = yOrigin;
    cache.smooth = !!smooth;
    cache.origin = origin;
    cache.originIsAbsolute = !!originIsAbsolute;
    target.style[_transformOriginProp] = "0px 0px";

    if (pluginToAddPropTweensTo) {
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
    }

    target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
  },
      _parseTransform = function _parseTransform(target, uncache) {
    var cache = target._gsap || new GSCache(target);

    if ("x" in cache && !uncache && !cache.uncache) {
      return cache;
    }

    var style = target.style,
        invertedScaleX = cache.scaleX < 0,
        px = "px",
        deg = "deg",
        cs = getComputedStyle(target),
        origin = _getComputedProperty(target, _transformOriginProp) || "0",
        x,
        y,
        z,
        scaleX,
        scaleY,
        rotation,
        rotationX,
        rotationY,
        skewX,
        skewY,
        perspective,
        xOrigin,
        yOrigin,
        matrix,
        angle,
        cos,
        sin,
        a,
        b,
        c,
        d,
        a12,
        a22,
        t1,
        t2,
        t3,
        a13,
        a23,
        a33,
        a42,
        a43,
        a32;
    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
    scaleX = scaleY = 1;
    cache.svg = !!(target.getCTM && _isSVG(target));

    if (cs.translate) {
      if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") {
        style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
      }

      style.scale = style.rotate = style.translate = "none";
    }

    matrix = _getMatrix(target, cache.svg);

    if (cache.svg) {
      if (cache.uncache) {
        t2 = target.getBBox();
        origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
        t1 = "";
      } else {
        t1 = !uncache && target.getAttribute("data-svg-origin");
      }

      _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
    }

    xOrigin = cache.xOrigin || 0;
    yOrigin = cache.yOrigin || 0;

    if (matrix !== _identity2DMatrix) {
      a = matrix[0];
      b = matrix[1];
      c = matrix[2];
      d = matrix[3];
      x = a12 = matrix[4];
      y = a22 = matrix[5];

      if (matrix.length === 6) {
        scaleX = Math.sqrt(a * a + b * b);
        scaleY = Math.sqrt(d * d + c * c);
        rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0;
        skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
        skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));

        if (cache.svg) {
          x -= xOrigin - (xOrigin * a + yOrigin * c);
          y -= yOrigin - (xOrigin * b + yOrigin * d);
        }
      } else {
        a32 = matrix[6];
        a42 = matrix[7];
        a13 = matrix[8];
        a23 = matrix[9];
        a33 = matrix[10];
        a43 = matrix[11];
        x = matrix[12];
        y = matrix[13];
        z = matrix[14];
        angle = _atan2(a32, a33);
        rotationX = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a12 * cos + a13 * sin;
          t2 = a22 * cos + a23 * sin;
          t3 = a32 * cos + a33 * sin;
          a13 = a12 * -sin + a13 * cos;
          a23 = a22 * -sin + a23 * cos;
          a33 = a32 * -sin + a33 * cos;
          a43 = a42 * -sin + a43 * cos;
          a12 = t1;
          a22 = t2;
          a32 = t3;
        }

        angle = _atan2(-c, a33);
        rotationY = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a * cos - a13 * sin;
          t2 = b * cos - a23 * sin;
          t3 = c * cos - a33 * sin;
          a43 = d * sin + a43 * cos;
          a = t1;
          b = t2;
          c = t3;
        }

        angle = _atan2(b, a);
        rotation = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(angle);
          sin = Math.sin(angle);
          t1 = a * cos + b * sin;
          t2 = a12 * cos + a22 * sin;
          b = b * cos - a * sin;
          a22 = a22 * cos - a12 * sin;
          a = t1;
          a12 = t2;
        }

        if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
          rotationX = rotation = 0;
          rotationY = 180 - rotationY;
        }

        scaleX = _round(Math.sqrt(a * a + b * b + c * c));
        scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
        angle = _atan2(a12, a22);
        skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
        perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
      }

      if (cache.svg) {
        t1 = target.getAttribute("transform");
        cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
        t1 && target.setAttribute("transform", t1);
      }
    }

    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
      if (invertedScaleX) {
        scaleX *= -1;
        skewX += rotation <= 0 ? 180 : -180;
        rotation += rotation <= 0 ? 180 : -180;
      } else {
        scaleY *= -1;
        skewX += skewX <= 0 ? 180 : -180;
      }
    }

    uncache = uncache || cache.uncache;
    cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
    cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
    cache.z = z + px;
    cache.scaleX = _round(scaleX);
    cache.scaleY = _round(scaleY);
    cache.rotation = _round(rotation) + deg;
    cache.rotationX = _round(rotationX) + deg;
    cache.rotationY = _round(rotationY) + deg;
    cache.skewX = skewX + deg;
    cache.skewY = skewY + deg;
    cache.transformPerspective = perspective + px;

    if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || 0) {
      style[_transformOriginProp] = _firstTwoOnly(origin);
    }

    cache.xOffset = cache.yOffset = 0;
    cache.force3D = _config.force3D;
    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
    cache.uncache = 0;
    return cache;
  },
      _firstTwoOnly = function _firstTwoOnly(value) {
    return (value = value.split(" "))[0] + " " + value[1];
  },
      _addPxTranslate = function _addPxTranslate(target, start, value) {
    var unit = getUnit(start);
    return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
  },
      _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
    cache.z = "0px";
    cache.rotationY = cache.rotationX = "0deg";
    cache.force3D = 0;

    _renderCSSTransforms(ratio, cache);
  },
      _zeroDeg = "0deg",
      _zeroPx = "0px",
      _endParenthesis = ") ",
      _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
    var _ref = cache || this,
        xPercent = _ref.xPercent,
        yPercent = _ref.yPercent,
        x = _ref.x,
        y = _ref.y,
        z = _ref.z,
        rotation = _ref.rotation,
        rotationY = _ref.rotationY,
        rotationX = _ref.rotationX,
        skewX = _ref.skewX,
        skewY = _ref.skewY,
        scaleX = _ref.scaleX,
        scaleY = _ref.scaleY,
        transformPerspective = _ref.transformPerspective,
        force3D = _ref.force3D,
        target = _ref.target,
        zOrigin = _ref.zOrigin,
        transforms = "",
        use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;

    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
      var angle = parseFloat(rotationY) * _DEG2RAD,
          a13 = Math.sin(angle),
          a33 = Math.cos(angle),
          cos;

      angle = parseFloat(rotationX) * _DEG2RAD;
      cos = Math.cos(angle);
      x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
      y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
      z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
    }

    if (transformPerspective !== _zeroPx) {
      transforms += "perspective(" + transformPerspective + _endParenthesis;
    }

    if (xPercent || yPercent) {
      transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
    }

    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
      transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
    }

    if (rotation !== _zeroDeg) {
      transforms += "rotate(" + rotation + _endParenthesis;
    }

    if (rotationY !== _zeroDeg) {
      transforms += "rotateY(" + rotationY + _endParenthesis;
    }

    if (rotationX !== _zeroDeg) {
      transforms += "rotateX(" + rotationX + _endParenthesis;
    }

    if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
      transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
    }

    if (scaleX !== 1 || scaleY !== 1) {
      transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
    }

    target.style[_transformProp] = transforms || "translate(0, 0)";
  },
      _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
    var _ref2 = cache || this,
        xPercent = _ref2.xPercent,
        yPercent = _ref2.yPercent,
        x = _ref2.x,
        y = _ref2.y,
        rotation = _ref2.rotation,
        skewX = _ref2.skewX,
        skewY = _ref2.skewY,
        scaleX = _ref2.scaleX,
        scaleY = _ref2.scaleY,
        target = _ref2.target,
        xOrigin = _ref2.xOrigin,
        yOrigin = _ref2.yOrigin,
        xOffset = _ref2.xOffset,
        yOffset = _ref2.yOffset,
        forceCSS = _ref2.forceCSS,
        tx = parseFloat(x),
        ty = parseFloat(y),
        a11,
        a21,
        a12,
        a22,
        temp;

    rotation = parseFloat(rotation);
    skewX = parseFloat(skewX);
    skewY = parseFloat(skewY);

    if (skewY) {
      skewY = parseFloat(skewY);
      skewX += skewY;
      rotation += skewY;
    }

    if (rotation || skewX) {
      rotation *= _DEG2RAD;
      skewX *= _DEG2RAD;
      a11 = Math.cos(rotation) * scaleX;
      a21 = Math.sin(rotation) * scaleX;
      a12 = Math.sin(rotation - skewX) * -scaleY;
      a22 = Math.cos(rotation - skewX) * scaleY;

      if (skewX) {
        skewY *= _DEG2RAD;
        temp = Math.tan(skewX - skewY);
        temp = Math.sqrt(1 + temp * temp);
        a12 *= temp;
        a22 *= temp;

        if (skewY) {
          temp = Math.tan(skewY);
          temp = Math.sqrt(1 + temp * temp);
          a11 *= temp;
          a21 *= temp;
        }
      }

      a11 = _round(a11);
      a21 = _round(a21);
      a12 = _round(a12);
      a22 = _round(a22);
    } else {
      a11 = scaleX;
      a22 = scaleY;
      a21 = a12 = 0;
    }

    if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
      tx = _convertToUnit(target, "x", x, "px");
      ty = _convertToUnit(target, "y", y, "px");
    }

    if (xOrigin || yOrigin || xOffset || yOffset) {
      tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
      ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
    }

    if (xPercent || yPercent) {
      temp = target.getBBox();
      tx = _round(tx + xPercent / 100 * temp.width);
      ty = _round(ty + yPercent / 100 * temp.height);
    }

    temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
    target.setAttribute("transform", temp);
    forceCSS && (target.style[_transformProp] = temp);
  },
      _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue) {
    var cap = 360,
        isString = _isString(endValue),
        endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
        change = endNum - startNum,
        finalValue = startNum + change + "deg",
        direction,
        pt;

    if (isString) {
      direction = endValue.split("_")[1];

      if (direction === "short") {
        change %= cap;

        if (change !== change % (cap / 2)) {
          change += change < 0 ? cap : -cap;
        }
      }

      if (direction === "cw" && change < 0) {
        change = (change + cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      } else if (direction === "ccw" && change > 0) {
        change = (change - cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      }
    }

    plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
    pt.e = finalValue;
    pt.u = "deg";

    plugin._props.push(property);

    return pt;
  },
      _assign = function _assign(target, source) {
    for (var p in source) {
      target[p] = source[p];
    }

    return target;
  },
      _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
    var startCache = _assign({}, target._gsap),
        exclude = "perspective,force3D,transformOrigin,svgOrigin",
        style = target.style,
        endCache,
        p,
        startValue,
        endValue,
        startNum,
        endNum,
        startUnit,
        endUnit;

    if (startCache.svg) {
      startValue = target.getAttribute("transform");
      target.setAttribute("transform", "");
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);

      _removeProperty(target, _transformProp);

      target.setAttribute("transform", startValue);
    } else {
      startValue = getComputedStyle(target)[_transformProp];
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);
      style[_transformProp] = startValue;
    }

    for (p in _transformProps) {
      startValue = startCache[p];
      endValue = endCache[p];

      if (startValue !== endValue && exclude.indexOf(p) < 0) {
        startUnit = getUnit(startValue);
        endUnit = getUnit(endValue);
        startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
        endNum = parseFloat(endValue);
        plugin._pt = new PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
        plugin._pt.u = endUnit || 0;

        plugin._props.push(p);
      }
    }

    _assign(endCache, startCache);
  };

  _forEachName("padding,margin,Width,Radius", function (name, index) {
    var t = "Top",
        r = "Right",
        b = "Bottom",
        l = "Left",
        props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function (side) {
      return index < 2 ? name + side : "border" + side + name;
    });

    _specialProps[index > 1 ? "border" + name : name] = function (plugin, target, property, endValue, tween) {
      var a, vars;

      if (arguments.length < 4) {
        a = props.map(function (prop) {
          return _get(plugin, prop, property);
        });
        vars = a.join(" ");
        return vars.split(a[0]).length === 5 ? a[0] : vars;
      }

      a = (endValue + "").split(" ");
      vars = {};
      props.forEach(function (prop, i) {
        return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
      });
      plugin.init(target, vars, tween);
    };
  });

  var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
      return target.style && target.nodeType;
    },
    init: function init(target, vars, tween, index, targets) {
      var props = this._props,
          style = target.style,
          startAt = tween.vars.startAt,
          startValue,
          endValue,
          endNum,
          startNum,
          type,
          specialProp,
          p,
          startUnit,
          endUnit,
          relative,
          isTransformRelated,
          transformPropTween,
          cache,
          smooth,
          hasPriority,
          inlineProps;
      _pluginInitted || _initCore();
      this.styles = this.styles || _getStyleSaver(target);
      inlineProps = this.styles.props;
      this.tween = tween;

      for (p in vars) {
        if (p === "autoRound") {
          continue;
        }

        endValue = vars[p];

        if (_plugins[p] && _checkPlugin(p, vars, tween, index, target, targets)) {
          continue;
        }

        type = typeof endValue;
        specialProp = _specialProps[p];

        if (type === "function") {
          endValue = endValue.call(tween, index, target, targets);
          type = typeof endValue;
        }

        if (type === "string" && ~endValue.indexOf("random(")) {
          endValue = _replaceRandom(endValue);
        }

        if (specialProp) {
          specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
        } else if (p.substr(0, 2) === "--") {
          startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
          endValue += "";
          _colorExp.lastIndex = 0;

          if (!_colorExp.test(startValue)) {
            startUnit = getUnit(startValue);
            endUnit = getUnit(endValue);
          }

          endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
          this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
          props.push(p);
          inlineProps.push(p, 0, style[p]);
        } else if (type !== "undefined") {
          if (startAt && p in startAt) {
            startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
            _isString(startValue) && ~startValue.indexOf("random(") && (startValue = _replaceRandom(startValue));
            getUnit(startValue + "") || (startValue += _config.units[p] || getUnit(_get(target, p)) || "");
            (startValue + "").charAt(1) === "=" && (startValue = _get(target, p));
          } else {
            startValue = _get(target, p);
          }

          startNum = parseFloat(startValue);
          relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
          relative && (endValue = endValue.substr(2));
          endNum = parseFloat(endValue);

          if (p in _propertyAliases) {
            if (p === "autoAlpha") {
              if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                startNum = 0;
              }

              inlineProps.push("visibility", 0, style.visibility);

              _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
            }

            if (p !== "scale" && p !== "transform") {
              p = _propertyAliases[p];
              ~p.indexOf(",") && (p = p.split(",")[0]);
            }
          }

          isTransformRelated = p in _transformProps;

          if (isTransformRelated) {
            this.styles.save(p);

            if (!transformPropTween) {
              cache = target._gsap;
              cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform);
              smooth = vars.smoothOrigin !== false && cache.smooth;
              transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
              transformPropTween.dep = 1;
            }

            if (p === "scale") {
              this._pt = new PropTween(this._pt, cache, "scaleY", startNum, (relative ? _parseRelative(startNum, relative + endNum) : endNum) - startNum || 0, _renderCSSProp);
              this._pt.u = 0;
              props.push("scaleY", p);
              p += "X";
            } else if (p === "transformOrigin") {
              inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
              endValue = _convertKeywordsToPercentages(endValue);

              if (cache.svg) {
                _applySVGOrigin(target, endValue, 0, smooth, 0, this);
              } else {
                endUnit = parseFloat(endValue.split(" ")[2]) || 0;
                endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);

                _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
              }

              continue;
            } else if (p === "svgOrigin") {
              _applySVGOrigin(target, endValue, 1, smooth, 0, this);

              continue;
            } else if (p in _rotationalProperties) {
              _addRotationalPropTween(this, cache, p, startNum, relative ? _parseRelative(startNum, relative + endValue) : endValue);

              continue;
            } else if (p === "smoothOrigin") {
              _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);

              continue;
            } else if (p === "force3D") {
              cache[p] = endValue;
              continue;
            } else if (p === "transform") {
              _addRawTransformPTs(this, endValue, target);

              continue;
            }
          } else if (!(p in style)) {
            p = _checkPropPrefix(p) || p;
          }

          if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
            startUnit = (startValue + "").substr((startNum + "").length);
            endNum || (endNum = 0);
            endUnit = getUnit(endValue) || (p in _config.units ? _config.units[p] : startUnit);
            startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
            this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? _parseRelative(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
            this._pt.u = endUnit || 0;

            if (startUnit !== endUnit && endUnit !== "%") {
              this._pt.b = startValue;
              this._pt.r = _renderCSSPropWithBeginning;
            }
          } else if (!(p in style)) {
            if (p in target) {
              this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
            } else {
              _missingPlugin(p, endValue);

              continue;
            }
          } else {
            _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
          }

          isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));
          props.push(p);
        }
      }

      hasPriority && _sortPropTweensByPriority(this);
    },
    render: function render(ratio, data) {
      if (data.tween._time || !_reverting$1()) {
        var pt = data._pt;

        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }
      } else {
        data.styles.revert();
      }
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property, plugin) {
      var p = _propertyAliases[property];
      p && p.indexOf(",") < 0 && (property = p);
      return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : _getSetter(target, property);
    },
    core: {
      _removeProperty: _removeProperty,
      _getMatrix: _getMatrix
    }
  };
  gsap.utils.checkPrefix = _checkPropPrefix;
  gsap.core.getStyleSaver = _getStyleSaver;

  (function (positionAndScale, rotation, others, aliases) {
    var all = _forEachName(positionAndScale + "," + rotation + "," + others, function (name) {
      _transformProps[name] = 1;
    });

    _forEachName(rotation, function (name) {
      _config.units[name] = "deg";
      _rotationalProperties[name] = 1;
    });

    _propertyAliases[all[13]] = positionAndScale + "," + rotation;

    _forEachName(aliases, function (name) {
      var split = name.split(":");
      _propertyAliases[split[1]] = all[split[0]];
    });
  })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");

  _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
    _config.units[name] = "px";
  });

  gsap.registerPlugin(CSSPlugin);

  var gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap,
      TweenMaxWithCSS = gsapWithCSS.core.Tween;

  exports.Back = Back;
  exports.Bounce = Bounce;
  exports.CSSPlugin = CSSPlugin;
  exports.Circ = Circ;
  exports.Cubic = Cubic;
  exports.Elastic = Elastic;
  exports.Expo = Expo;
  exports.Linear = Linear;
  exports.Power0 = Power0;
  exports.Power1 = Power1;
  exports.Power2 = Power2;
  exports.Power3 = Power3;
  exports.Power4 = Power4;
  exports.Quad = Quad;
  exports.Quart = Quart;
  exports.Quint = Quint;
  exports.Sine = Sine;
  exports.SteppedEase = SteppedEase;
  exports.Strong = Strong;
  exports.TimelineLite = Timeline;
  exports.TimelineMax = Timeline;
  exports.TweenLite = Tween;
  exports.TweenMax = TweenMaxWithCSS;
  exports.default = gsapWithCSS;
  exports.gsap = gsapWithCSS;

  if (typeof(window) === 'undefined' || window !== exports) {Object.defineProperty(exports, '__esModule', { value: true });} else {delete window.default;}

})));

/*!
 * imagesLoaded PACKAGED v5.0.0
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */
!function (t, e) { "object" == typeof module && module.exports ? module.exports = e() : t.EvEmitter = e() }("undefined" != typeof window ? window : this, (function () { function t() { } let e = t.prototype; return e.on = function (t, e) { if (!t || !e) return this; let i = this._events = this._events || {}, s = i[t] = i[t] || []; return s.includes(e) || s.push(e), this }, e.once = function (t, e) { if (!t || !e) return this; this.on(t, e); let i = this._onceEvents = this._onceEvents || {}; return (i[t] = i[t] || {})[e] = !0, this }, e.off = function (t, e) { let i = this._events && this._events[t]; if (!i || !i.length) return this; let s = i.indexOf(e); return -1 != s && i.splice(s, 1), this }, e.emitEvent = function (t, e) { let i = this._events && this._events[t]; if (!i || !i.length) return this; i = i.slice(0), e = e || []; let s = this._onceEvents && this._onceEvents[t]; for (let n of i) { s && s[n] && (this.off(t, n), delete s[n]), n.apply(this, e) } return this }, e.allOff = function () { return delete this._events, delete this._onceEvents, this }, t })),
  /*!
   * imagesLoaded v5.0.0
   * JavaScript is all like "You images are done yet or what?"
   * MIT License
   */
  function (t, e) { "object" == typeof module && module.exports ? module.exports = e(t, require("ev-emitter")) : t.imagesLoaded = e(t, t.EvEmitter) }("undefined" != typeof window ? window : this, (function (t, e) { let i = t.jQuery, s = t.console; function n(t, e, o) { if (!(this instanceof n)) return new n(t, e, o); let r = t; var h; ("string" == typeof t && (r = document.querySelectorAll(t)), r) ? (this.elements = (h = r, Array.isArray(h) ? h : "object" == typeof h && "number" == typeof h.length ? [...h] : [h]), this.options = {}, "function" == typeof e ? o = e : Object.assign(this.options, e), o && this.on("always", o), this.getImages(), i && (this.jqDeferred = new i.Deferred), setTimeout(this.check.bind(this))) : s.error(`Bad element for imagesLoaded ${r || t}`) } n.prototype = Object.create(e.prototype), n.prototype.getImages = function () { this.images = [], this.elements.forEach(this.addElementImages, this) }; const o = [1, 9, 11]; n.prototype.addElementImages = function (t) { "IMG" === t.nodeName && this.addImage(t), !0 === this.options.background && this.addElementBackgroundImages(t); let { nodeType: e } = t; if (!e || !o.includes(e)) return; let i = t.querySelectorAll("img"); for (let t of i) this.addImage(t); if ("string" == typeof this.options.background) { let e = t.querySelectorAll(this.options.background); for (let t of e) this.addElementBackgroundImages(t) } }; const r = /url\((['"])?(.*?)\1\)/gi; function h(t) { this.img = t } function d(t, e) { this.url = t, this.element = e, this.img = new Image } return n.prototype.addElementBackgroundImages = function (t) { let e = getComputedStyle(t); if (!e) return; let i = r.exec(e.backgroundImage); for (; null !== i;) { let s = i && i[2]; s && this.addBackground(s, t), i = r.exec(e.backgroundImage) } }, n.prototype.addImage = function (t) { let e = new h(t); this.images.push(e) }, n.prototype.addBackground = function (t, e) { let i = new d(t, e); this.images.push(i) }, n.prototype.check = function () { if (this.progressedCount = 0, this.hasAnyBroken = !1, !this.images.length) return void this.complete(); let t = (t, e, i) => { setTimeout((() => { this.progress(t, e, i) })) }; this.images.forEach((function (e) { e.once("progress", t), e.check() })) }, n.prototype.progress = function (t, e, i) { this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded, this.emitEvent("progress", [this, t, e]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t), this.progressedCount === this.images.length && this.complete(), this.options.debug && s && s.log(`progress: ${i}`, t, e) }, n.prototype.complete = function () { let t = this.hasAnyBroken ? "fail" : "done"; if (this.isComplete = !0, this.emitEvent(t, [this]), this.emitEvent("always", [this]), this.jqDeferred) { let t = this.hasAnyBroken ? "reject" : "resolve"; this.jqDeferred[t](this) } }, h.prototype = Object.create(e.prototype), h.prototype.check = function () { this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image, this.img.crossOrigin && (this.proxyImage.crossOrigin = this.img.crossOrigin), this.proxyImage.addEventListener("load", this), this.proxyImage.addEventListener("error", this), this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.proxyImage.src = this.img.currentSrc || this.img.src) }, h.prototype.getIsImageComplete = function () { return this.img.complete && this.img.naturalWidth }, h.prototype.confirm = function (t, e) { this.isLoaded = t; let { parentNode: i } = this.img, s = "PICTURE" === i.nodeName ? i : this.img; this.emitEvent("progress", [this, s, e]) }, h.prototype.handleEvent = function (t) { let e = "on" + t.type; this[e] && this[e](t) }, h.prototype.onload = function () { this.confirm(!0, "onload"), this.unbindEvents() }, h.prototype.onerror = function () { this.confirm(!1, "onerror"), this.unbindEvents() }, h.prototype.unbindEvents = function () { this.proxyImage.removeEventListener("load", this), this.proxyImage.removeEventListener("error", this), this.img.removeEventListener("load", this), this.img.removeEventListener("error", this) }, d.prototype = Object.create(h.prototype), d.prototype.check = function () { this.img.addEventListener("load", this), this.img.addEventListener("error", this), this.img.src = this.url, this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"), this.unbindEvents()) }, d.prototype.unbindEvents = function () { this.img.removeEventListener("load", this), this.img.removeEventListener("error", this) }, d.prototype.confirm = function (t, e) { this.isLoaded = t, this.emitEvent("progress", [this, this.element, e]) }, n.makeJQueryPlugin = function (e) { (e = e || t.jQuery) && (i = e, i.fn.imagesLoaded = function (t, e) { return new n(this, t, e).jqDeferred.promise(i(this)) }) }, n.makeJQueryPlugin(), n }));
/**
 * jStyling - jQuery plugin for styling HTML elements
 *
 * Copyright (c) 2010 Dmitry Avseyenko
 * Licensed under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @version 1.0
 * @author Dmitry Avseyenko <polsad@gmail.com>
 */
(function ($) {
  $.jStyling = function (a) {
    $.jStyling.main.init(a);
  };
  $.jStyling.createSelect = function (a, b) {
    $.jStyling.main.createSelect(a, b);
  };
  $.jStyling.updateSelect = function (a) {
    $.jStyling.main.updateSelect(a);
  };
  $.jStyling.destroySelect = function (a) {
    $.jStyling.main.destroySelect(a);
  };
  $.jStyling.createCheckbox = function (a, b) {
    $.jStyling.main.createCheckbox(a, b);
  };
  $.jStyling.updateCheckbox = function (a) {
    $.jStyling.main.updateCheckbox(a);
  };
  $.jStyling.destroyCheckbox = function (a) {
    $.jStyling.main.destroyCheckbox(a);
  };
  $.jStyling.createRadio = function (a, b) {
    $.jStyling.main.createRadio(a, b);
  };
  $.jStyling.updateRadio = function (a) {
    $.jStyling.main.updateRadio(a);
  };
  $.jStyling.destroyRadio = function (a) {
    $.jStyling.main.destroyRadio(a);
  };
  $.jStyling.createFileInput = function (a, b) {
    $.jStyling.main.createFileInput(a, b);
  };
  $.jStyling.destroyFileInput = function (a) {
    $.jStyling.main.destroyFileInput(a);
  };
  $.fn.jStyling = function (a) {
    return $.jStyling(a);
  };
  $.jStyling.settings = { selectClass: { w: "jstyling-select", s: "jstyling-select-s", l: "jstyling-select-l", t: "jstyling-select-t" }, checkboxClass: "jstyling-checkbox", radioClass: "jstyling-radio", fileClass: { w: "jstyling-file", f: "jstyling-file-f", b: "jstyling-file-b" }, fileButtonText: "Browse" };
  $.jStyling.customOptions = {};
  $.jStyling.main = {
    init: function (a) {
      $.extend($.jStyling.settings, a || {});
    },
    checkType: function (a, b) {
      var c = $(a).is(b) ? true : false;
      return c;
    },
    createSelect: function (m, n) {
      $.jStyling.customOptions = n ? n : {};
      return m.each(function () {
        if (!$.jStyling.main.checkType(this, "select")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.selectClass.w)
        ) {
          return false;
        }
        var d = this;
        var f = $("<div>").addClass($.jStyling.settings.selectClass.w);
        if ($(d).attr("disabled")) {
          f.addClass("disabled");
        }
        if ($.jStyling.customOptions.extraClass) {
          $(f).addClass($.jStyling.customOptions.extraClass);
        }
        var g = $("<div>").addClass($.jStyling.settings.selectClass.s);
        var h = $("<div>").addClass($.jStyling.settings.selectClass.t);
        var j = $(d).find("option");
        var k = '<div class="' + $.jStyling.settings.selectClass.l + '">';
        for (var i = 0; i < j.length; i++) {
          var l = $(j[i]).attr("disabled") ? "item-" + $(j[i]).val() + " disabled" : "item-" + $(j[i]).val();
          k = k + '<div class="' + l + '"><span>' + $(j[i]).html() + "</span></div>";
        }
        k = k + "</div>";
        h.html($(d).find("option:selected").html());
        f.append(k).append(g);
        g.append(h);
        $(d).before(f).hide();
        $(f).append(d);
        $(f)
          .find("." + $.jStyling.settings.selectClass.l + " div")
          .bind("click", function () {
            if (!$(this).is(".disabled")) {
              var a = $(this).attr("class").replace("item-", "").replace(" disabled", "");
              var b = $(d).find('option[value="' + a + '"]');
              $(d).get(0).selectedIndex = parseInt($(b).index());
              $(d).trigger("change");
              h.html($(b).html());
            }
          });
        f.bind("click", function () {
          if (!$(this).find("select").attr("disabled")) {
            var c = $(this).is(" .active");
            if (false == c) {
              $("." + $.jStyling.settings.selectClass.l + ":visible")
                .parent()
                .removeClass("active");
            }
            $(this).toggleClass("active");
            if (false == c) {
              $(document)
                .unbind("click.closeSelect")
                .bind("click.closeSelect", function (e) {
                  var a = e.target;
                  var b = $("." + $.jStyling.settings.selectClass.l + ":visible")
                    .parent()
                    .find("*")
                    .addBack();
                  if ($.inArray(a, b) < 0) {
                    $("." + $.jStyling.settings.selectClass.w).removeClass("active");
                    $(document).unbind("click.closeSelect");
                  }
                });
            }
          }
        });
      });
    },
    updateSelect: function (k) {
      return k.each(function () {
        if (!$.jStyling.main.checkType(this, "select")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.selectClass.w)
        ) {
          var c = this;
          if ($(c).attr("disabled")) {
            $(c).parent().addClass("disabled");
          } else {
            $(c).parent().removeClass("disabled");
          }
          var d = $(c)
            .parent()
            .find("." + $.jStyling.settings.selectClass.s);
          var e = $(d).find("." + $.jStyling.settings.selectClass.t);
          var f = $(c)
            .parent()
            .find("." + $.jStyling.settings.selectClass.l);
          var g = $(c).find("option");
          var h = "";
          for (var i = 0; i < g.length; i++) {
            var j = $(g[i]).attr("disabled") ? "item-" + $(g[i]).val() + " disabled" : "item-" + $(g[i]).val();
            h = h + '<div class="' + j + '"><span>' + $(g[i]).html() + "</span></div>";
          }
          $(f).html(h);
          $(f)
            .find(" div")
            .unbind("click")
            .bind("click", function () {
              if (!$(this).is(".disabled")) {
                var a = $(this).attr("class").replace("item-", "").replace(" disabled", "");
                var b = $(c).find('option[value="' + a + '"]');
                $(c).get(0).selectedIndex = parseInt($(b).index());
                $(c).trigger("change");
                $(e).html(b.html());
              }
            });
          $(e).html($(c).find("option:selected").html());
        }
      });
    },
    destroySelect: function (c) {
      return c.each(function () {
        if (!$.jStyling.main.checkType(this, "select")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.selectClass.w)
        ) {
          var a = this;
          var b = $(a).parent();
          $(document).unbind("click.closeSelect");
          $(b).before($(a));
          $(b).remove();
          $(a).show();
        }
      });
    },
    createCheckbox: function (f, g) {
      $.jStyling.customOptions = g ? g : {};
      return f.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=checkbox]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.checkboxClass)
        ) {
          return false;
        }
        var a = this;
        var b = $(a).is(":checked") ? " active" : "";
        var c = $(a).attr("disabled") ? " disabled" : "";
        var d = $("<div>").addClass($.jStyling.settings.checkboxClass + b + c);
        if ($.jStyling.customOptions.extraClass) {
          $(d).addClass($.jStyling.customOptions.extraClass);
        }
        $(a).before(d);
        $(d).append(a);
        $(a).bind("click.checkboxClick", function (e) {
          $(a).parent().toggleClass("active");
        });
        $(d).bind("click", function (e) {
          if ($(this).is(".disabled") == false && !$(e.target).is("input[type=checkbox]")) {
            $(a).trigger("click");
          }
        });
      });
    },
    updateCheckbox: function (d) {
      return d.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=checkbox]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.checkboxClass)
        ) {
          var a = this;
          var b = $(a).is(" :checked") ? " active" : "";
          var c = $(a).attr("disabled") ? " disabled" : "";
          $(a)
            .parent()
            .removeClass("active disabled")
            .addClass(b + c);
        }
      });
    },
    destroyCheckbox: function (c) {
      return c.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=checkbox]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.checkboxClass)
        ) {
          var a = this;
          var b = $(a).parent();
          $(a).unbind("click.checkboxClick");
          $(b).before($(a));
          $(b).remove();
        }
      });
    },
    createRadio: function (f, g) {
      $.jStyling.customOptions = g ? g : {};
      return f.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=radio]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.radioClass)
        ) {
          return false;
        }
        var a = this;
        var b = $(a).is(":checked") ? " active" : "";
        var c = $(a).attr("disabled") ? " disabled" : "";
        var d = $("<div>").addClass($.jStyling.settings.radioClass + b + c);
        if ($.jStyling.customOptions.extraClass) {
          $(d).addClass($.jStyling.customOptions.extraClass);
        }
        $(a).before(d);
        $(d).append(a);
        $(a).bind("click.radioClick", function (e) {
          $("input[type=radio][name=" + $(a).attr("name") + "]")
            .parent()
            .removeClass("active");
          $(a).parent().addClass("active");
        });
        $(d).bind("click", function (e) {
          if ($(this).is(".disabled") == false && !$(e.target).is("input[type=radio]")) {
            $(a).trigger("click");
          }
        });
      });
    },
    updateRadio: function (d) {
      return d.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=radio]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.radioClass)
        ) {
          var a = this;
          var b = $(a).is(":checked") ? " active" : "";
          var c = $(a).attr("disabled") ? " disabled" : "";
          $(a)
            .parent()
            .removeClass("active disabled")
            .addClass(b + c);
        }
      });
    },
    destroyRadio: function (c) {
      return c.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=radio]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .is("." + $.jStyling.settings.radioClass)
        ) {
          var a = this;
          var b = $(a).parent();
          $(a).unbind("click.radioClick");
          $(b).before($(a));
          $(b).remove();
        }
      });
    },
    createFileInput: function (e, f) {
      $.jStyling.customOptions = f ? f : {};
      return e.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=file]")) {
          return false;
        }
        if (
          !$(this)
            .parent()
            .parent()
            .is("." + $.jStyling.settings.fileClass.w)
        ) {
          var a = this;
          var b = $("<div>").addClass($.jStyling.settings.fileClass.w);
          var c = $("<div>").addClass($.jStyling.settings.fileClass.f);
          var d = $("<div>").addClass($.jStyling.settings.fileClass.b);
          if ($.jStyling.customOptions.extraClass) {
            $(b).addClass($.jStyling.customOptions.extraClass);
          }
          if ($.jStyling.customOptions.fileButtonText) {
            $(d).html($.jStyling.customOptions.fileButtonText);
          } else {
            $(d).html($.jStyling.settings.fileButtonText);
          }
          if ($(a).val() != "") {
            $(c).html($(a).val());
          }
          $(b).append(c).append(d);
          $(a).before(b);
          $(d).append($(a));
          var h = $(d).outerHeight();
          $(a)
            .css({ height: h + "px", "font-size": h + "px" })
            .bind("change", function () {
              $(this).parent().prev().html($(a).val());
            });
        }
      });
    },
    destroyFileInput: function (c) {
      return c.each(function () {
        if (!$.jStyling.main.checkType(this, "input[type=file]")) {
          return false;
        }
        if (
          $(this)
            .parent()
            .parent()
            .is("." + $.jStyling.settings.fileClass.w)
        ) {
          var a = this;
          var b = $(a).parent().parent();
          $(b).before($(a));
          $(b).remove();
          $(a).removeAttr("style");
        }
      });
    },
  };
})(jQuery);

(function (global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? (module.exports = factory()) : typeof define === "function" && define.amd ? define(factory) : ((global = global || self), (global.Lenis = factory()));
})(this, function () {
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    Object.defineProperty(Constructor, "prototype", {
      writable: false,
    });
    return Constructor;
  }
  function _toPrimitive(input, hint) {
    if (typeof input !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
      var res = prim.call(input, hint || "default");
      if (typeof res !== "object") return res;
      throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
  }
  function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return typeof key === "symbol" ? key : String(key);
  }

  let createNanoEvents = () => ({
    events: {},
    emit(event, ...args) {
      (this.events[event] || []).forEach((i) => i(...args));
    },
    on(event, cb) {
      (this.events[event] = this.events[event] || []).push(cb);
      return () => (this.events[event] = (this.events[event] || []).filter((i) => i !== cb));
    },
  });

  var version = "1.0.0";

  function clamp(min, input, max) {
    return Math.max(min, Math.min(input, max));
  }
  function lerp(start, end, amt) {
    return (1 - amt) * start + amt * end;
  }
  function clampedModulo(dividend, divisor) {
    var remainder = dividend % divisor;
    if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {
      remainder += divisor;
    }
    return remainder;
  }

  var Animate = /*#__PURE__*/ (function () {
    function Animate() {}
    var _proto = Animate.prototype;
    _proto.advance = function advance(deltaTime) {
      var _this$onUpdate;
      if (!this.isRunning) return;
      var completed = false;
      if (this.lerp) {
        this.value = lerp(this.value, this.to, this.lerp);
        if (Math.round(this.value) === this.to) {
          this.value = this.to;
          completed = true;
        }
      } else {
        this.currentTime += deltaTime;
        var linearProgress = clamp(0, this.currentTime / this.duration, 1);
        completed = linearProgress >= 1;
        var easedProgress = completed ? 1 : this.easing(linearProgress);
        this.value = this.from + (this.to - this.from) * easedProgress;
      }
      (_this$onUpdate = this.onUpdate) == null
        ? void 0
        : _this$onUpdate.call(this, this.value, {
            completed: completed,
          });
      if (completed) {
        this.stop();
      }
    };
    _proto.stop = function stop() {
      this.isRunning = false;
    };
    _proto.fromTo = function fromTo(from, to, _ref) {
      var _ref$lerp = _ref.lerp,
        lerp = _ref$lerp === void 0 ? 0.1 : _ref$lerp,
        _ref$duration = _ref.duration,
        duration = _ref$duration === void 0 ? 1 : _ref$duration,
        _ref$easing = _ref.easing,
        easing =
          _ref$easing === void 0
            ? function (t) {
                return t;
              }
            : _ref$easing,
        onUpdate = _ref.onUpdate;
      this.from = this.value = from;
      this.to = to;
      this.lerp = lerp;
      this.duration = duration;
      this.easing = easing;
      this.currentTime = 0;
      this.isRunning = true;
      this.onUpdate = onUpdate;
    };
    return Animate;
  })();

  var ObservedElement = /*#__PURE__*/ (function () {
    function ObservedElement(element) {
      var _this = this;
      this.onResize = function (_ref) {
        var entry = _ref[0];
        if (entry) {
          var _entry$contentRect = entry.contentRect,
            width = _entry$contentRect.width,
            height = _entry$contentRect.height;
          _this.width = width;
          _this.height = height;
        }
      };
      this.onWindowResize = function () {
        _this.width = window.innerWidth;
        _this.height = window.innerHeight;
      };
      this.element = element;
      if (element === window) {
        window.addEventListener("resize", this.onWindowResize);
        this.onWindowResize();
      } else {
        this.width = this.element.offsetWidth;
        this.height = this.element.offsetHeight;
        this.resizeObserver = new ResizeObserver(this.onResize);
        this.resizeObserver.observe(this.element);
      }
    }
    var _proto = ObservedElement.prototype;
    _proto.destroy = function destroy() {
      window.removeEventListener("resize", this.onWindowResize);
      this.resizeObserver.disconnect();
    };
    return ObservedElement;
  })();

  var VirtualScroll = /*#__PURE__*/ (function () {
    function VirtualScroll(element, _ref) {
      var _this = this;
      var _ref$wheelMultiplier = _ref.wheelMultiplier,
        wheelMultiplier = _ref$wheelMultiplier === void 0 ? 1 : _ref$wheelMultiplier,
        _ref$touchMultiplier = _ref.touchMultiplier,
        touchMultiplier = _ref$touchMultiplier === void 0 ? 2 : _ref$touchMultiplier,
        _ref$normalizeWheel = _ref.normalizeWheel,
        normalizeWheel = _ref$normalizeWheel === void 0 ? false : _ref$normalizeWheel;
      this.onTouchStart = function (event) {
        var _ref2 = event.targetTouches ? event.targetTouches[0] : event,
          pageX = _ref2.pageX,
          pageY = _ref2.pageY;
        _this.touchStart.x = pageX;
        _this.touchStart.y = pageY;
      };
      this.onTouchMove = function (event) {
        var _ref3 = event.targetTouches ? event.targetTouches[0] : event,
          pageX = _ref3.pageX,
          pageY = _ref3.pageY;
        var deltaX = -(pageX - _this.touchStart.x) * _this.touchMultiplier;
        var deltaY = -(pageY - _this.touchStart.y) * _this.touchMultiplier;
        _this.touchStart.x = pageX;
        _this.touchStart.y = pageY;
        _this.emitter.emit("scroll", {
          type: "touch",
          deltaX: deltaX,
          deltaY: deltaY,
          event: event,
        });
      };
      this.onWheel = function (event) {
        var deltaX = event.deltaX,
          deltaY = event.deltaY;
        if (_this.normalizeWheel) {
          deltaX = clamp(-100, deltaX, 100);
          deltaY = clamp(-100, deltaY, 100);
        }
        deltaX *= _this.wheelMultiplier;
        deltaY *= _this.wheelMultiplier;
        _this.emitter.emit("scroll", {
          type: "wheel",
          deltaX: deltaX,
          deltaY: deltaY,
          event: event,
        });
      };
      this.element = element;
      this.wheelMultiplier = wheelMultiplier;
      this.touchMultiplier = touchMultiplier;
      this.normalizeWheel = normalizeWheel;
      this.touchStart = {
        x: null,
        y: null,
      };
      this.emitter = createNanoEvents();
      this.element.addEventListener("wheel", this.onWheel, {
        passive: false,
      });
      this.element.addEventListener("touchstart", this.onTouchStart, {
        passive: false,
      });
      this.element.addEventListener("touchmove", this.onTouchMove, {
        passive: false,
      });
    }
    var _proto = VirtualScroll.prototype;
    _proto.on = function on(event, callback) {
      return this.emitter.on(event, callback);
    };
    _proto.destroy = function destroy() {
      this.emitter.events = {};
      this.element.removeEventListener("wheel", this.onWheel, {
        passive: false,
      });
      this.element.removeEventListener("touchstart", this.onTouchStart, {
        passive: false,
      });
      this.element.removeEventListener("touchmove", this.onTouchMove, {
        passive: false,
      });
    };
    return VirtualScroll;
  })();

  // Technical explaination
  // - listen to 'wheel' events
  // - prevent 'wheel' event to prevent scroll
  // - normalize wheel delta
  // - add delta to targetScroll
  // - animate scroll to targetScroll (smooth context)
  // - if animation is not running, listen to 'scroll' events (native context)
  var Lenis = /*#__PURE__*/ (function () {
    // isScrolling = true when scroll is animating
    // isStopped = true if user should not be able to scroll - enable/disable programatically
    // isSmooth = true if scroll should be animated
    // isLocked = same as isStopped but enabled/disabled when scroll reaches target

    /**
     * @typedef {(t: number) => number} EasingFunction
     * @typedef {'vertical' | 'horizontal'} Orientation
     * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation
     *
     * @typedef LenisOptions
     * @property {Orientation} [direction]
     * @property {GestureOrientation} [gestureDirection]
     * @property {number} [mouseMultiplier]
     * @property {boolean} [smooth]
     *
     * @property {Window | HTMLElement} [wrapper]
     * @property {HTMLElement} [content]
     * @property {boolean} [smoothWheel]
     * @property {boolean} [smoothTouch]
     * @property {number} [duration]
     * @property {EasingFunction} [easing]
     * @property {number} [lerp]
     * @property {boolean} [infinite]
     * @property {Orientation} [orientation]
     * @property {GestureOrientation} [gestureOrientation]
     * @property {number} [touchMultiplier]
     * @property {number} [wheelMultiplier]
     * @property {boolean} [normalizeWheel]
     *
     * @param {LenisOptions}
     */
    function Lenis(_temp) {
      var _this = this;
      var _ref = _temp === void 0 ? {} : _temp,
        direction = _ref.direction,
        gestureDirection = _ref.gestureDirection,
        mouseMultiplier = _ref.mouseMultiplier,
        smooth = _ref.smooth,
        _ref$wrapper = _ref.wrapper,
        wrapper = _ref$wrapper === void 0 ? window : _ref$wrapper,
        _ref$content = _ref.content,
        content = _ref$content === void 0 ? document.documentElement : _ref$content,
        _ref$smoothWheel = _ref.smoothWheel,
        smoothWheel = _ref$smoothWheel === void 0 ? (smooth != null ? smooth : true) : _ref$smoothWheel,
        _ref$smoothTouch = _ref.smoothTouch,
        smoothTouch = _ref$smoothTouch === void 0 ? false : _ref$smoothTouch,
        duration = _ref.duration,
        _ref$easing = _ref.easing,
        easing =
          _ref$easing === void 0
            ? function (t) {
                return Math.min(1, 1.001 - Math.pow(2, -10 * t));
              }
            : _ref$easing,
        _ref$lerp = _ref.lerp,
        lerp = _ref$lerp === void 0 ? (duration ? null : 0.1) : _ref$lerp,
        _ref$infinite = _ref.infinite,
        infinite = _ref$infinite === void 0 ? false : _ref$infinite,
        _ref$orientation = _ref.orientation,
        orientation = _ref$orientation === void 0 ? (direction != null ? direction : "vertical") : _ref$orientation,
        _ref$gestureOrientati = _ref.gestureOrientation,
        gestureOrientation = _ref$gestureOrientati === void 0 ? (gestureDirection != null ? gestureDirection : "vertical") : _ref$gestureOrientati,
        _ref$touchMultiplier = _ref.touchMultiplier,
        touchMultiplier = _ref$touchMultiplier === void 0 ? 2 : _ref$touchMultiplier,
        _ref$wheelMultiplier = _ref.wheelMultiplier,
        wheelMultiplier = _ref$wheelMultiplier === void 0 ? (mouseMultiplier != null ? mouseMultiplier : 1) : _ref$wheelMultiplier,
        _ref$normalizeWheel = _ref.normalizeWheel,
        normalizeWheel = _ref$normalizeWheel === void 0 ? true : _ref$normalizeWheel;
      this.onVirtualScroll = function (_ref2) {
        var type = _ref2.type,
          deltaX = _ref2.deltaX,
          deltaY = _ref2.deltaY,
          event = _ref2.event;
        // keep zoom feature
        if (event.ctrlKey) return;

        // keep previous/next page gesture on trackpads
        if ((_this.options.gestureOrientation === "vertical" && deltaY === 0) || (_this.options.gestureOrientation === "horizontal" && deltaX === 0)) return;

        // catch if scrolling on nested scroll elements
        if (
          !!event.composedPath().find(function (node) {
            return node == null ? void 0 : node.hasAttribute == null ? void 0 : node.hasAttribute("data-lenis-prevent");
          })
        )
          return;
        if (_this.isStopped || _this.isLocked) {
          event.preventDefault();
          return;
        }
        _this.isSmooth = (_this.options.smoothTouch && type === "touch") || (_this.options.smoothWheel && type === "wheel");
        if (!_this.isSmooth) {
          _this.isScrolling = false;
          _this.animate.stop();
          return;
        }
        event.preventDefault();
        var delta = deltaY;
        if (_this.options.gestureOrientation === "both") {
          delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX;
        } else if (_this.options.gestureOrientation === "horizontal") {
          delta = deltaX;
        }
        _this.scrollTo(_this.targetScroll + delta, {
          programmatic: false,
        });
      };
      this.onScroll = function () {
        if (!_this.isScrolling) {
          var lastScroll = _this.animatedScroll;
          _this.animatedScroll = _this.targetScroll = _this.actualScroll;
          _this.velocity = 0;
          _this.direction = Math.sign(_this.animatedScroll - lastScroll);
          _this.emit();
        }
      };
      // warn about legacy options
      if (direction) {
        console.warn("Lenis: `direction` option is deprecated, use `orientation` instead");
      }
      if (gestureDirection) {
        console.warn("Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead");
      }
      if (mouseMultiplier) {
        console.warn("Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead");
      }
      if (smooth) {
        console.warn("Lenis: `smooth` option is deprecated, use `smoothWheel` instead");
      }
      window.lenisVersion = version;

      // if wrapper is html or body, fallback to window
      if (wrapper === document.documentElement || wrapper === document.body) {
        wrapper = window;
      }
      this.options = {
        wrapper: wrapper,
        content: content,
        smoothWheel: smoothWheel,
        smoothTouch: smoothTouch,
        duration: duration,
        easing: easing,
        lerp: lerp,
        infinite: infinite,
        gestureOrientation: gestureOrientation,
        orientation: orientation,
        touchMultiplier: touchMultiplier,
        wheelMultiplier: wheelMultiplier,
        normalizeWheel: normalizeWheel,
      };
      this.wrapper = new ObservedElement(wrapper);
      this.content = new ObservedElement(content);
      this.rootElement.classList.add("lenis");
      this.velocity = 0;
      this.isStopped = false;
      this.isSmooth = smoothWheel || smoothTouch;
      this.isScrolling = false;
      this.targetScroll = this.animatedScroll = this.actualScroll;
      this.animate = new Animate();
      this.emitter = createNanoEvents();
      this.wrapper.element.addEventListener("scroll", this.onScroll, {
        passive: false,
      });
      this.virtualScroll = new VirtualScroll(wrapper, {
        touchMultiplier: touchMultiplier,
        wheelMultiplier: wheelMultiplier,
        normalizeWheel: normalizeWheel,
      });
      this.virtualScroll.on("scroll", this.onVirtualScroll);
    }
    var _proto = Lenis.prototype;
    _proto.destroy = function destroy() {
      this.emitter.events = {};
      this.wrapper.element.removeEventListener("scroll", this.onScroll, {
        passive: false,
      });
      this.virtualScroll.destroy();
    };
    _proto.on = function on(event, callback) {
      return this.emitter.on(event, callback);
    };
    _proto.off = function off(event, callback) {
      var _this$emitter$events$;
      this.emitter.events[event] =
        (_this$emitter$events$ = this.emitter.events[event]) == null
          ? void 0
          : _this$emitter$events$.filter(function (i) {
              return callback !== i;
            });
    };
    _proto.setScroll = function setScroll(scroll) {
      // apply scroll value immediately
      if (this.isHorizontal) {
        this.rootElement.scrollLeft = scroll;
      } else {
        this.rootElement.scrollTop = scroll;
      }
    };
    _proto.emit = function emit() {
      this.emitter.emit("scroll", this);
    };
    _proto.reset = function reset() {
      this.isLocked = false;
      this.isScrolling = false;
      this.velocity = 0;
    };
    _proto.start = function start() {
      this.isStopped = false;
      this.reset();
    };
    _proto.stop = function stop() {
      this.isStopped = true;
      this.animate.stop();
      this.reset();
    };
    _proto.raf = function raf(time) {
      var deltaTime = time - (this.time || time);
      this.time = time;
      this.animate.advance(deltaTime * 0.001);
    };
    _proto.scrollTo = function scrollTo(target, _temp2) {
      var _this2 = this;
      var _ref3 = _temp2 === void 0 ? {} : _temp2,
        _ref3$offset = _ref3.offset,
        offset = _ref3$offset === void 0 ? 0 : _ref3$offset,
        _ref3$immediate = _ref3.immediate,
        immediate = _ref3$immediate === void 0 ? false : _ref3$immediate,
        _ref3$lock = _ref3.lock,
        lock = _ref3$lock === void 0 ? false : _ref3$lock,
        _ref3$duration = _ref3.duration,
        duration = _ref3$duration === void 0 ? this.options.duration : _ref3$duration,
        _ref3$easing = _ref3.easing,
        easing = _ref3$easing === void 0 ? this.options.easing : _ref3$easing,
        _ref3$lerp = _ref3.lerp,
        lerp = _ref3$lerp === void 0 ? !duration && this.options.lerp : _ref3$lerp,
        onComplete = _ref3.onComplete,
        _ref3$force = _ref3.force,
        force = _ref3$force === void 0 ? false : _ref3$force,
        _ref3$programmatic = _ref3.programmatic,
        programmatic = _ref3$programmatic === void 0 ? true : _ref3$programmatic;
      if (this.isStopped && !force) return;

      // keywords
      if (["top", "left", "start"].includes(target)) {
        target = 0;
      } else if (["bottom", "right", "end"].includes(target)) {
        target = this.limit;
      } else {
        var _target;
        var node;
        if (typeof target === "string") {
          // CSS selector
          node = document.querySelector(target);
        } else if ((_target = target) != null && _target.nodeType) {
          // Node element
          node = target;
        }
        if (node) {
          if (this.wrapper.element !== window) {
            // nested scroll offset correction
            var wrapperRect = this.wrapper.element.getBoundingClientRect();
            offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top;
          }
          var rect = node.getBoundingClientRect();
          target = (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll;
        }
      }
      if (typeof target !== "number") return;
      target += offset;
      target = Math.round(target);
      if (this.options.infinite) {
        if (programmatic) {
          this.targetScroll = this.animatedScroll = this.scroll;
        }
      } else {
        target = clamp(0, target, this.limit);
      }
      if (immediate) {
        this.animatedScroll = this.targetScroll = target;
        this.setScroll(this.scroll);
        this.animate.stop();
        this.reset();
        this.emit();
        onComplete == null ? void 0 : onComplete();
        return;
      }
      if (!programmatic) {
        this.targetScroll = target;
      }
      this.animate.fromTo(this.animatedScroll, target, {
        duration: duration,
        easing: easing,
        lerp: lerp,
        onUpdate: function onUpdate(value, _ref4) {
          var completed = _ref4.completed;
          // started
          if (lock) _this2.isLocked = true;
          _this2.isScrolling = true;

          // updated
          _this2.velocity = value - _this2.animatedScroll;
          _this2.direction = Math.sign(_this2.velocity);
          _this2.animatedScroll = value;
          _this2.setScroll(_this2.scroll);
          if (programmatic) {
            // wheel during programmatic should stop it
            _this2.targetScroll = value;
          }

          // completed
          if (completed) {
            if (lock) _this2.isLocked = false;
            requestAnimationFrame(function () {
              //avoid double scroll event
              _this2.isScrolling = false;
            });
            _this2.velocity = 0;
            onComplete == null ? void 0 : onComplete();
          }
          _this2.emit();
        },
      });
    };
    _createClass(Lenis, [
      {
        key: "rootElement",
        get: function get() {
          return this.wrapper.element === window ? this.content.element : this.wrapper.element;
        },
      },
      {
        key: "limit",
        get: function get() {
          return Math.round(this.isHorizontal ? this.content.width - this.wrapper.width : this.content.height - this.wrapper.height);
        },
      },
      {
        key: "isHorizontal",
        get: function get() {
          return this.options.orientation === "horizontal";
        },
      },
      {
        key: "actualScroll",
        get: function get() {
          // value browser takes into account
          return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;
        },
      },
      {
        key: "scroll",
        get: function get() {
          return this.options.infinite ? clampedModulo(this.animatedScroll, this.limit) : this.animatedScroll;
        },
      },
      {
        key: "progress",
        get: function get() {
          return this.scroll / this.limit;
        },
      },
      {
        key: "isSmooth",
        get: function get() {
          return this.__isSmooth;
        },
        set: function set(value) {
          if (this.__isSmooth !== value) {
            this.rootElement.classList.toggle("lenis-smooth", value);
            this.__isSmooth = value;
          }
        },
      },
      {
        key: "isScrolling",
        get: function get() {
          return this.__isScrolling;
        },
        set: function set(value) {
          if (this.__isScrolling !== value) {
            this.rootElement.classList.toggle("lenis-scrolling", value);
            this.__isScrolling = value;
          }
        },
      },
      {
        key: "isStopped",
        get: function get() {
          return this.__isStopped;
        },
        set: function set(value) {
          if (this.__isStopped !== value) {
            this.rootElement.classList.toggle("lenis-stopped", value);
            this.__isStopped = value;
          }
        },
      },
    ]);
    return Lenis;
  })();

  return Lenis;
});

!(function (e, t) {
  "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t(((e = e || self).LottieInteractivity = {}));
})(this, function (e) {
  "use strict";
  function t(e) {
    return (t =
      "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
        ? function (e) {
            return typeof e;
          }
        : function (e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
          })(e);
  }
  function n(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
  }
  function i(e, t) {
    for (var n = 0; n < t.length; n++) {
      var i = t[n];
      (i.enumerable = i.enumerable || !1), (i.configurable = !0), "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i);
    }
  }
  function a(e, t, n) {
    return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (e[t] = n), e;
  }
  function r(e, t) {
    if (null == e) return {};
    var n,
      i,
      a = (function (e, t) {
        if (null == e) return {};
        var n,
          i,
          a = {},
          r = Object.keys(e);
        for (i = 0; i < r.length; i++) (n = r[i]), t.indexOf(n) >= 0 || (a[n] = e[n]);
        return a;
      })(e, t);
    if (Object.getOwnPropertySymbols) {
      var r = Object.getOwnPropertySymbols(e);
      for (i = 0; i < r.length; i++) (n = r[i]), t.indexOf(n) >= 0 || (Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n]));
    }
    return a;
  }
  function o(e, t) {
    var n = t.get(e);
    if (!n) throw new TypeError("attempted to get private field on non-instance");
    return n.get ? n.get.call(e) : n.value;
  }
  var s = { player: "lottie-player" },
    l = "[lottieInteractivity]:",
    c = (function () {
      function e() {
        var i = this,
          c = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s,
          C = c.actions,
          A = c.container,
          T = c.mode,
          H = c.player,
          O = r(c, ["actions", "container", "mode", "player"]);
        if (
          (n(this, e),
          p.set(this, {
            writable: !0,
            value: function () {
              if (i.player) {
                var e = function () {
                    i.player.addEventListener("enterFrame", o(i, g)), i.container.addEventListener("mouseenter", o(i, w)), i.container.addEventListener("mouseleave", o(i, I)), i.container.addEventListener("touchstart", o(i, w), { passive: !0 }), i.container.addEventListener("touchend", o(i, I), { passive: !0 });
                  },
                  t = function () {
                    i.container.addEventListener("mouseenter", o(i, w)), i.container.addEventListener("mouseleave", o(i, I)), i.container.addEventListener("touchstart", o(i, w), { passive: !0 }), i.container.addEventListener("touchend", o(i, I), { passive: !0 });
                  };
                i.stateHandler.set("loop", function () {
                  i.actions[i.interactionIdx].loop ? (i.player.loop = parseInt(i.actions[i.interactionIdx].loop) - 1) : (i.player.loop = !0), (i.player.autoplay = !0);
                }),
                  i.stateHandler.set("autoplay", function () {
                    (i.player.loop = !1), (i.player.autoplay = !0);
                  }),
                  i.stateHandler.set("click", function () {
                    (i.player.loop = !1), (i.player.autoplay = !1), i.container.addEventListener("click", o(i, d));
                  }),
                  i.stateHandler.set("hover", function () {
                    (i.player.loop = !1), (i.player.autoplay = !1), i.container.addEventListener("mouseenter", o(i, d)), i.container.addEventListener("touchstart", o(i, d), { passive: !0 });
                  }),
                  i.stateHandler.set("hold", t),
                  i.stateHandler.set("pauseHold", t),
                  i.transitionHandler.set("click", function () {
                    i.container.addEventListener("click", o(i, h));
                  }),
                  i.transitionHandler.set("hover", function () {
                    i.container.addEventListener("mouseenter", o(i, h)), i.container.addEventListener("touchstart", o(i, h), { passive: !0 });
                  }),
                  i.transitionHandler.set("hold", e),
                  i.transitionHandler.set("pauseHold", e),
                  i.transitionHandler.set("repeat", function () {
                    (i.player.loop = !0), (i.player.autoplay = !0);
                    i.player.addEventListener("loopComplete", function e() {
                      o(i, L).call(i, { handler: e });
                    });
                  }),
                  i.transitionHandler.set("onComplete", function () {
                    "loop" === i.actions[i.interactionIdx].state ? i.player.addEventListener("loopComplete", o(i, f)) : i.player.addEventListener("complete", o(i, f));
                  }),
                  i.transitionHandler.set("seek", function () {
                    i.player.stop(), i.player.addEventListener("enterFrame", o(i, E)), i.container.addEventListener("mousemove", o(i, u)), i.container.addEventListener("touchmove", o(i, v), { passive: !1 }), i.container.addEventListener("mouseout", o(i, m));
                  });
              }
            },
          }),
          d.set(this, {
            writable: !0,
            value: function () {
              var e = i.actions[i.interactionIdx].forceFlag;
              e || !0 !== i.player.isPaused ? e && o(i, b).call(i, !0) : o(i, b).call(i, !0);
            },
          }),
          y.set(this, {
            writable: !0,
            value: function () {
              0 === i.clickCounter ? (i.player.play(), i.clickCounter++) : (i.clickCounter++, i.player.setDirection(-1 * i.player.playDirection), i.player.play());
            },
          }),
          h.set(this, {
            writable: !0,
            value: function () {
              var e = i.actions[i.interactionIdx].forceFlag,
                t = i.actions[i.interactionIdx].state,
                n = i.actions[i.interactionIdx].transition;
              if ("chain" === i.mode) {
                if (i.actions[i.interactionIdx].count) {
                  var a = parseInt(i.actions[i.interactionIdx].count);
                  if (i.clickCounter < a - 1) return void (i.clickCounter += 1);
                }
                return (i.clickCounter = 0), (!e && "click" === n && "click" === t) || ("hover" === n && "hover" === t) ? i.transitionHandler.get("onComplete").call() : i.nextInteraction(), i.container.removeEventListener("click", o(i, h)), void i.container.removeEventListener("mouseenter", o(i, h));
              }
              e || !0 !== i.player.isPaused ? e && i.player.goToAndPlay(0, !0) : i.player.goToAndPlay(0, !0);
            },
          }),
          u.set(this, {
            writable: !0,
            value: function (e) {
              o(i, P).call(i, e.clientX, e.clientY);
            },
          }),
          v.set(this, {
            writable: !0,
            value: function (e) {
              e.cancelable && e.preventDefault(), o(i, P).call(i, e.touches[0].clientX, e.touches[0].clientY);
            },
          }),
          m.set(this, {
            writable: !0,
            value: function () {
              o(i, P).call(i, -1, -1);
            },
          }),
          f.set(this, {
            writable: !0,
            value: function () {
              "loop" === i.actions[i.interactionIdx].state ? i.player.removeEventListener("loopComplete", o(i, f)) : i.player.removeEventListener("complete", o(i, f)), i.nextInteraction();
            },
          }),
          L.set(this, {
            writable: !0,
            value: function (e) {
              var t = e.handler,
                n = 1;
              i.actions[i.interactionIdx].repeat && (n = i.actions[i.interactionIdx].repeat), i.playCounter >= n - 1 ? ((i.playCounter = 0), i.player.removeEventListener("loopComplete", t), (i.player.loop = !1), (i.player.autoplay = !1), i.nextInteraction()) : (i.playCounter += 1);
            },
          }),
          E.set(this, {
            writable: !0,
            value: function () {
              var e = i.actions[i.interactionIdx].frames;
              e && i.player.currentFrame >= parseInt(e[1]) - 1 && (i.player.removeEventListener("enterFrame", o(i, E)), i.container.removeEventListener("mousemove", o(i, u)), i.container.removeEventListener("mouseout", o(i, m)), setTimeout(i.nextInteraction, 0));
            },
          }),
          g.set(this, {
            writable: !0,
            value: function () {
              var e = i.actions[i.interactionIdx].frames;
              ((e && i.player.currentFrame >= e[1]) || i.player.currentFrame >= i.player.totalFrames - 1) && (i.player.removeEventListener("enterFrame", o(i, g)), i.container.removeEventListener("mouseenter", o(i, w)), i.container.removeEventListener("mouseleave", o(i, I)), i.container.removeEventListener("touchstart", o(i, w), { passive: !0 }), i.container.removeEventListener("touchend", o(i, I), { passive: !0 }), i.player.pause(), (i.holdStatus = !1), i.nextInteraction()), -1 === i.player.playDirection && e && i.player.currentFrame < e[0] && i.player.pause();
            },
          }),
          w.set(this, {
            writable: !0,
            value: function () {
              (-1 !== i.player.playDirection && null !== i.holdStatus && i.holdStatus) || (i.player.setDirection(1), i.player.play(), (i.holdStatus = !0));
            },
          }),
          I.set(this, {
            writable: !0,
            value: function () {
              "hold" === i.actions[i.interactionIdx].transition || "hold" === i.actions[i.interactionIdx].state || "hold" === i.actions[0].type ? (i.player.setDirection(-1), i.player.play()) : ("pauseHold" !== i.actions[i.interactionIdx].transition && "pauseHold" !== i.actions[i.interactionIdx].state && "pauseHold" !== i.actions[0].type) || i.player.pause(), (i.holdStatus = !1);
            },
          }),
          x.set(this, {
            writable: !0,
            value: function () {
              if ((i.container.removeEventListener("click", o(i, h)), i.container.removeEventListener("click", o(i, d)), i.container.removeEventListener("mouseenter", o(i, h)), i.container.removeEventListener("touchstart", o(i, h)), i.container.removeEventListener("touchmove", o(i, v)), i.container.removeEventListener("mouseenter", o(i, d)), i.container.removeEventListener("touchstart", o(i, d)), i.container.removeEventListener("mouseenter", o(i, w)), i.container.removeEventListener("touchstart", o(i, w)), i.container.removeEventListener("mouseleave", o(i, I)), i.container.removeEventListener("mousemove", o(i, u)), i.container.removeEventListener("mouseout", o(i, m)), i.container.removeEventListener("touchend", o(i, I)), i.player))
                try {
                  i.player.removeEventListener("loopComplete", o(i, f)), i.player.removeEventListener("complete", o(i, f)), i.player.removeEventListener("enterFrame", o(i, E)), i.player.removeEventListener("enterFrame", o(i, g));
                } catch (e) {}
            },
          }),
          a(this, "jumpToInteraction", function (e) {
            o(i, x).call(i), (i.interactionIdx = e), i.interactionIdx < 0 ? (i.interactionIdx = 0) : i.interactionIdx, i.nextInteraction(!1);
          }),
          a(this, "nextInteraction", function () {
            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
            (i.oldInterctionIdx = i.interactionIdx), o(i, x).call(i), (i.player.loop = !1);
            var t = i.actions[i.interactionIdx].jumpTo;
            t ? (t >= 0 && t < i.actions.length ? ((i.interactionIdx = t), o(i, S).call(i, { ignorePath: !1 })) : ((i.interactionIdx = 0), i.player.goToAndStop(0, !0), o(i, S).call(i, { ignorePath: !1 }))) : (e && i.interactionIdx++, i.interactionIdx >= i.actions.length ? (i.actions[i.actions.length - 1].reset ? ((i.interactionIdx = 0), i.player.resetSegments(!0), i.actions[i.interactionIdx].frames ? i.player.goToAndStop(i.actions[i.interactionIdx].frames, !0) : i.player.goToAndStop(0, !0), o(i, S).call(i, { ignorePath: !1 })) : ((i.interactionIdx = i.actions.length - 1), o(i, S).call(i, { ignorePath: !1 }))) : o(i, S).call(i, { ignorePath: !1 })), i.container.dispatchEvent(new CustomEvent("transition", { bubbles: !0, composed: !0, detail: { oldIndex: i.oldInterctionIdx, newIndex: i.interactionIdx } }));
          }),
          b.set(this, {
            writable: !0,
            value: function (e) {
              var t = i.actions[i.interactionIdx].frames;
              if (!t) return i.player.resetSegments(!0), void i.player.goToAndPlay(0, !0);
              "string" == typeof t ? i.player.goToAndPlay(t, e) : i.player.playSegments(t, e);
            },
          }),
          k.set(this, {
            writable: !0,
            value: function () {
              var e = i.actions[i.interactionIdx].path;
              if (!e)
                if ("object" === t(i.enteredPlayer) && "AnimationItem" === i.enteredPlayer.constructor.name) {
                  if (((e = i.enteredPlayer), i.player === e)) return void o(i, S).call(i, { ignorePath: !0 });
                } else {
                  var n = (e = i.loadedAnimation).substr(e.lastIndexOf("/") + 1);
                  if (((n = n.substr(0, n.lastIndexOf(".json"))), i.player.fileName === n)) return void o(i, S).call(i, { ignorePath: !0 });
                }
              var a = i.container.getBoundingClientRect(),
                r = "width: " + a.width + "px !important; height: " + a.height + "px !important; background: " + i.container.style.background;
              if ((i.container.setAttribute("style", r), "object" !== t(i.enteredPlayer) || "AnimationItem" !== i.enteredPlayer.constructor.name)) {
                if ("string" == typeof i.enteredPlayer) {
                  var s = document.querySelector(i.enteredPlayer);
                  s &&
                    "LOTTIE-PLAYER" === s.nodeName &&
                    (i.attachedListeners ||
                      (s.addEventListener("ready", function () {
                        (i.container.style.width = ""), (i.container.style.height = "");
                      }),
                      s.addEventListener("load", function () {
                        (i.player = s.getLottie()), o(i, S).call(i, { ignorePath: !0 });
                      }),
                      (i.attachedListeners = !0)),
                    s.load(e));
                } else
                  i.enteredPlayer instanceof HTMLElement &&
                    "LOTTIE-PLAYER" === i.enteredPlayer.nodeName &&
                    (i.attachedListeners ||
                      (i.enteredPlayer.addEventListener("ready", function () {
                        (i.container.style.width = ""), (i.container.style.height = "");
                      }),
                      i.enteredPlayer.addEventListener("load", function () {
                        (i.player = i.enteredPlayer.getLottie()), o(i, S).call(i, { ignorePath: !0 });
                      }),
                      (i.attachedListeners = !0)),
                    i.enteredPlayer.load(e));
                if (!i.player) throw new Error("".concat(l, " Specified player is invalid."), i.enteredPlayer);
              } else {
                if (!window.lottie) throw new Error("".concat(l, " A Lottie player is required."));
                i.stop(),
                  (i.container.innerHTML = ""),
                  "object" === t(e) && "AnimationItem" === e.constructor.name ? (i.player = window.lottie.loadAnimation({ loop: !1, autoplay: !1, animationData: e.animationData, container: i.container })) : (i.player = window.lottie.loadAnimation({ loop: !1, autoplay: !1, path: e, container: i.container })),
                  i.player.addEventListener("DOMLoaded", function () {
                    (i.container.style.width = ""), (i.container.style.height = ""), o(i, S).call(i, { ignorePath: !0 });
                  });
              }
              (i.clickCounter = 0), (i.playCounter = 0);
            },
          }),
          S.set(this, {
            writable: !0,
            value: function (e) {
              var t = e.ignorePath,
                n = i.actions[i.interactionIdx].frames,
                a = i.actions[i.interactionIdx].state,
                r = i.actions[i.interactionIdx].transition,
                s = i.actions[i.interactionIdx].path,
                l = i.stateHandler.get(a),
                c = i.transitionHandler.get(r),
                p = i.actions[i.interactionIdx].speed ? i.actions[i.interactionIdx].speed : 1,
                d = i.actions[i.interactionIdx].delay ? i.actions[i.interactionIdx].delay : 0;
              t || !(s || (i.actions[i.actions.length - 1].reset && 0 === i.interactionIdx))
                ? setTimeout(function () {
                    n && ((i.player.autoplay = !1), i.player.resetSegments(!0), i.player.goToAndStop(n[0], !0)), l ? l.call() : "none" === a && ((i.player.loop = !1), (i.player.autoplay = !1)), c && c.call(), i.player.autoplay && (i.player.resetSegments(!0), o(i, b).call(i, !0)), i.player.setSpeed(p);
                  }, d)
                : o(i, k).call(i);
            },
          }),
          P.set(this, {
            writable: !0,
            value: function (e, t) {
              if (-1 !== e && -1 !== t) {
                var n = i.getContainerCursorPosition(e, t);
                (e = n.x), (t = n.y);
              }
              var a = i.actions.find(function (n) {
                var i = n.position;
                if (i) {
                  if (Array.isArray(i.x) && Array.isArray(i.y)) return e >= i.x[0] && e <= i.x[1] && t >= i.y[0] && t <= i.y[1];
                  if (!Number.isNaN(i.x) && !Number.isNaN(i.y)) return e === i.x && t === i.y;
                }
                return !1;
              });
              if (a)
                if ("seek" === a.type || "seek" === a.transition) {
                  var r = (e - a.position.x[0]) / (a.position.x[1] - a.position.x[0]),
                    o = (t - a.position.y[0]) / (a.position.y[1] - a.position.y[0]);
                  i.player.playSegments(a.frames, !0), a.position.y[0] < 0 && a.position.y[1] > 1 ? i.player.goToAndStop(Math.floor(r * i.player.totalFrames), !0) : i.player.goToAndStop(Math.ceil(((r + o) / 2) * i.player.totalFrames), !0);
                } else "loop" === a.type ? i.player.playSegments(a.frames, !0) : "play" === a.type ? (!0 === i.player.isPaused && i.player.resetSegments(), i.player.playSegments(a.frames)) : "stop" === a.type && (i.player.resetSegments(!0), i.player.goToAndStop(a.frames[0], !0));
            },
          }),
          M.set(this, {
            writable: !0,
            value: function () {
              var e = i.getContainerVisibility(),
                t = i.actions.find(function (t) {
                  var n = t.visibility;
                  return e >= n[0] && e <= n[1];
                });
              if (t)
                if ("seek" === t.type) {
                  var n = t.frames[0],
                    a = 2 == t.frames.length ? t.frames[1] : i.player.totalFrames - 1;
                  null !== i.assignedSegment && (i.player.resetSegments(!0), (i.assignedSegment = null)), i.player.goToAndStop(n + Math.round(((e - t.visibility[0]) / (t.visibility[1] - t.visibility[0])) * (a - n)), !0);
                } else if ("loop" === t.type) (i.player.loop = !0), (null === i.assignedSegment || i.assignedSegment !== t.frames || !0 === i.player.isPaused) && (i.player.playSegments(t.frames, !0), (i.assignedSegment = t.frames));
                else if ("play" === t.type || "playOnce" === t.type) {
                  if ("playOnce" === t.type && !i.scrolledAndPlayed) return (i.scrolledAndPlayed = !0), i.player.resetSegments(!0), void (t.frames ? i.player.playSegments(t.frames, !0) : i.player.play());
                  "play" === t.type && i.player.isPaused && (i.player.resetSegments(!0), t.frames ? i.player.playSegments(t.frames, !0) : i.player.play());
                } else "stop" === t.type && i.player.goToAndStop(t.frames[0], !0);
            },
          }),
          (this.enteredPlayer = H),
          "object" !== t(H) || "AnimationItem" !== H.constructor.name)
        ) {
          if ("string" == typeof H) {
            var W = document.querySelector(H);
            W && "LOTTIE-PLAYER" === W.nodeName && (H = W.getLottie());
          } else H instanceof HTMLElement && "LOTTIE-PLAYER" === H.nodeName && (H = H.getLottie());
          if (!H) {
            var j = l + "Specified player:" + H + " is invalid.";
            throw new Error(j);
          }
        }
        "string" == typeof A && (A = document.querySelector(A)), A || (A = H.wrapper), (this.player = H), (this.loadedAnimation = this.player.path + this.player.fileName + ".json"), (this.attachedListeners = !1), (this.container = A), (this.mode = T), (this.actions = C), (this.options = O), (this.assignedSegment = null), (this.scrolledAndPlayed = !1), (this.interactionIdx = 0), (this.oldInterctionIdx = 0), (this.clickCounter = 0), (this.playCounter = 0), (this.stateHandler = new Map()), (this.transitionHandler = new Map());
      }
      var c, C, A;
      return (
        (c = e),
        (C = [
          {
            key: "getContainerVisibility",
            value: function () {
              var e = this.container.getBoundingClientRect(),
                t = e.top,
                n = e.height;
              return (window.innerHeight - t) / (window.innerHeight + n);
            },
          },
          {
            key: "getContainerCursorPosition",
            value: function (e, t) {
              var n = this.container.getBoundingClientRect(),
                i = n.top;
              return { x: (e - n.left) / n.width, y: (t - i) / n.height };
            },
          },
          {
            key: "initScrollMode",
            value: function () {
              this.player.stop(), window.addEventListener("scroll", o(this, M), !0);
            },
          },
          {
            key: "initCursorMode",
            value: function () {
              this.actions && 1 === this.actions.length
                ? "click" === this.actions[0].type
                  ? ((this.player.loop = !1), this.player.stop(), this.container.addEventListener("click", o(this, h)))
                  : "hover" === this.actions[0].type
                  ? ((this.player.loop = !1), this.player.stop(), this.container.addEventListener("mouseenter", o(this, h)), this.container.addEventListener("touchstart", o(this, h), { passive: !0 }))
                  : "toggle" === this.actions[0].type
                  ? ((this.player.loop = !1), this.player.stop(), this.container.addEventListener("click", o(this, y)))
                  : "hold" === this.actions[0].type || "pauseHold" === this.actions[0].type
                  ? (this.container.addEventListener("mouseenter", o(this, w)), this.container.addEventListener("mouseleave", o(this, I)), this.container.addEventListener("touchstart", o(this, w), { passive: !0 }), this.container.addEventListener("touchend", o(this, I), { passive: !0 }))
                  : "seek" === this.actions[0].type && ((this.player.loop = !0), this.player.stop(), this.container.addEventListener("mousemove", o(this, u)), this.container.addEventListener("touchmove", o(this, v), { passive: !1 }), this.container.addEventListener("mouseout", o(this, m)))
                : ((this.player.loop = !0), this.player.stop(), this.container.addEventListener("mousemove", o(this, u)), this.container.addEventListener("mouseleave", o(this, m)), o(this, P).call(this, -1, -1));
            },
          },
          {
            key: "initChainMode",
            value: function () {
              o(this, p).call(this), (this.player.loop = !1), this.player.stop(), o(this, S).call(this, { ignorePath: !1 });
            },
          },
          {
            key: "start",
            value: function () {
              var e = this;
              "scroll" === this.mode
                ? this.player.isLoaded
                  ? this.initScrollMode()
                  : this.player.addEventListener("DOMLoaded", function () {
                      e.initScrollMode();
                    })
                : "cursor" === this.mode
                ? this.player.isLoaded
                  ? this.initCursorMode()
                  : this.player.addEventListener("DOMLoaded", function () {
                      e.initCursorMode();
                    })
                : "chain" === this.mode &&
                  (this.player.isLoaded
                    ? this.initChainMode()
                    : this.player.addEventListener("DOMLoaded", function () {
                        e.initChainMode();
                      }));
            },
          },
          {
            key: "redefineOptions",
            value: function (e) {
              var n = e.actions,
                i = e.container,
                a = e.mode,
                o = e.player,
                s = r(e, ["actions", "container", "mode", "player"]);
              if ((this.stop(), (this.enteredPlayer = o), "object" !== t(o) || "AnimationItem" !== o.constructor.name)) {
                if ("string" == typeof o) {
                  var c = document.querySelector(o);
                  c && "LOTTIE-PLAYER" === c.nodeName && (o = c.getLottie());
                } else o instanceof HTMLElement && "LOTTIE-PLAYER" === o.nodeName && (o = o.getLottie());
                if (!o) throw new Error(l + "Specified player:" + o + " is invalid.", o);
              }
              "string" == typeof i && (i = document.querySelector(i)), i || (i = o.wrapper), (this.player = o), (this.loadedAnimation = this.player.path + this.player.fileName + ".json"), (this.attachedListeners = !1), (this.container = i), (this.mode = a), (this.actions = n), (this.options = s), (this.assignedSegment = null), (this.scrolledAndPlayed = !1), (this.interactionIdx = 0), (this.clickCounter = 0), (this.playCounter = 0), (this.holdStatus = null), (this.stateHandler = new Map()), (this.transitionHandler = new Map()), this.start();
            },
          },
          {
            key: "stop",
            value: function () {
              if (
                ("scroll" === this.mode && window.removeEventListener("scroll", o(this, M), !0),
                "cursor" === this.mode && (this.container.removeEventListener("click", o(this, h)), this.container.removeEventListener("click", o(this, y)), this.container.removeEventListener("mouseenter", o(this, h)), this.container.removeEventListener("touchstart", o(this, h)), this.container.removeEventListener("touchmove", o(this, v)), this.container.removeEventListener("mousemove", o(this, u)), this.container.removeEventListener("mouseleave", o(this, m)), this.container.removeEventListener("touchstart", o(this, w)), this.container.removeEventListener("touchend", o(this, I))),
                "chain" === this.mode && (this.container.removeEventListener("click", o(this, h)), this.container.removeEventListener("click", o(this, d)), this.container.removeEventListener("mouseenter", o(this, h)), this.container.removeEventListener("touchstart", o(this, h)), this.container.removeEventListener("touchmove", o(this, v)), this.container.removeEventListener("mouseenter", o(this, d)), this.container.removeEventListener("touchstart", o(this, d)), this.container.removeEventListener("mouseenter", o(this, w)), this.container.removeEventListener("touchstart", o(this, w)), this.container.removeEventListener("mouseleave", o(this, I)), this.container.removeEventListener("mousemove", o(this, u)), this.container.removeEventListener("mouseout", o(this, m)), this.container.removeEventListener("touchend", o(this, I)), this.player))
              )
                try {
                  this.player.removeEventListener("loopComplete", o(this, f)), this.player.removeEventListener("complete", o(this, f)), this.player.removeEventListener("enterFrame", o(this, E)), this.player.removeEventListener("enterFrame", o(this, g));
                } catch (e) {}
              this.player && (this.player.destroy(), (this.player = null));
            },
          },
        ]) && i(c.prototype, C),
        A && i(c, A),
        e
      );
    })(),
    p = new WeakMap(),
    d = new WeakMap(),
    y = new WeakMap(),
    h = new WeakMap(),
    u = new WeakMap(),
    v = new WeakMap(),
    m = new WeakMap(),
    f = new WeakMap(),
    L = new WeakMap(),
    E = new WeakMap(),
    g = new WeakMap(),
    w = new WeakMap(),
    I = new WeakMap(),
    x = new WeakMap(),
    b = new WeakMap(),
    k = new WeakMap(),
    S = new WeakMap(),
    P = new WeakMap(),
    M = new WeakMap(),
    C = function (e) {
      var t = new c(e);
      return t.start(), t;
    };
  (e.LottieInteractivity = c), (e.create = C), (e.default = C), Object.defineProperty(e, "__esModule", { value: !0 });
});
//# sourceMappingURL=lottie-interactivity.min.js.map

parcelRequire = (function (e, r, t, n) {
  var i,
    o = "function" == typeof parcelRequire && parcelRequire,
    u = "function" == typeof require && require;
  function f(t, n) {
    if (!r[t]) {
      if (!e[t]) {
        var i = "function" == typeof parcelRequire && parcelRequire;
        if (!n && i) return i(t, !0);
        if (o) return o(t, !0);
        if (u && "string" == typeof t) return u(t);
        var c = new Error("Cannot find module '" + t + "'");
        throw ((c.code = "MODULE_NOT_FOUND"), c);
      }
      (p.resolve = function (r) {
        return e[t][1][r] || r;
      }),
        (p.cache = {});
      var l = (r[t] = new f.Module(t));
      e[t][0].call(l.exports, p, l, l.exports, this);
    }
    return r[t].exports;
    function p(e) {
      return f(p.resolve(e));
    }
  }
  (f.isParcelRequire = !0),
    (f.Module = function (e) {
      (this.id = e), (this.bundle = f), (this.exports = {});
    }),
    (f.modules = e),
    (f.cache = r),
    (f.parent = o),
    (f.register = function (r, t) {
      e[r] = [
        function (e, r) {
          r.exports = t;
        },
        {},
      ];
    });
  for (var c = 0; c < t.length; c++)
    try {
      f(t[c]);
    } catch (e) {
      i || (i = e);
    }
  if (t.length) {
    var l = f(t[t.length - 1]);
    "object" == typeof exports && "undefined" != typeof module
      ? (module.exports = l)
      : "function" == typeof define && define.amd
      ? define(function () {
          return l;
        })
      : n && (this[n] = l);
  }
  if (((parcelRequire = f), i)) throw i;
  return f;
})(
  {
    ytxR: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.removeNodes = exports.reparentNodes = exports.isCEPolyfill = void 0);
        const e = "undefined" != typeof window && null != window.customElements && void 0 !== window.customElements.polyfillWrapFlushCallback;
        exports.isCEPolyfill = e;
        const o = (e, o, l = null, s = null) => {
          for (; o !== l; ) {
            const l = o.nextSibling;
            e.insertBefore(o, s), (o = l);
          }
        };
        exports.reparentNodes = o;
        const l = (e, o, l = null) => {
          for (; o !== l; ) {
            const l = o.nextSibling;
            e.removeChild(o), (o = l);
          }
        };
        exports.removeNodes = l;
      },
      {},
    ],
    Av0K: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.lastAttributeNameRegex = exports.createMarker = exports.isTemplatePartActive = exports.Template = exports.boundAttributeSuffix = exports.markerRegex = exports.nodeMarker = exports.marker = void 0);
        const e = `{{lit-${String(Math.random()).slice(2)}}}`;
        exports.marker = e;
        const t = `\x3c!--${e}--\x3e`;
        exports.nodeMarker = t;
        const r = new RegExp(`${e}|${t}`);
        exports.markerRegex = r;
        const s = "$lit$";
        exports.boundAttributeSuffix = s;
        class o {
          constructor(t, o) {
            (this.parts = []), (this.element = o);
            const i = [],
              l = [],
              p = document.createTreeWalker(o.content, 133, null, !1);
            let c = 0,
              d = -1,
              u = 0;
            const {
              strings: f,
              values: { length: h },
            } = t;
            for (; u < h; ) {
              const t = p.nextNode();
              if (null !== t) {
                if ((d++, 1 === t.nodeType)) {
                  if (t.hasAttributes()) {
                    const e = t.attributes,
                      { length: o } = e;
                    let i = 0;
                    for (let t = 0; t < o; t++) n(e[t].name, s) && i++;
                    for (; i-- > 0; ) {
                      const e = f[u],
                        o = x.exec(e)[2],
                        n = o.toLowerCase() + s,
                        i = t.getAttribute(n);
                      t.removeAttribute(n);
                      const a = i.split(r);
                      this.parts.push({ type: "attribute", index: d, name: o, strings: a }), (u += a.length - 1);
                    }
                  }
                  "TEMPLATE" === t.tagName && (l.push(t), (p.currentNode = t.content));
                } else if (3 === t.nodeType) {
                  const o = t.data;
                  if (o.indexOf(e) >= 0) {
                    const e = t.parentNode,
                      l = o.split(r),
                      p = l.length - 1;
                    for (let r = 0; r < p; r++) {
                      let o,
                        i = l[r];
                      if ("" === i) o = a();
                      else {
                        const e = x.exec(i);
                        null !== e && n(e[2], s) && (i = i.slice(0, e.index) + e[1] + e[2].slice(0, -s.length) + e[3]), (o = document.createTextNode(i));
                      }
                      e.insertBefore(o, t), this.parts.push({ type: "node", index: ++d });
                    }
                    "" === l[p] ? (e.insertBefore(a(), t), i.push(t)) : (t.data = l[p]), (u += p);
                  }
                } else if (8 === t.nodeType)
                  if (t.data === e) {
                    const e = t.parentNode;
                    (null !== t.previousSibling && d !== c) || (d++, e.insertBefore(a(), t)), (c = d), this.parts.push({ type: "node", index: d }), null === t.nextSibling ? (t.data = "") : (i.push(t), d--), u++;
                  } else {
                    let r = -1;
                    for (; -1 !== (r = t.data.indexOf(e, r + 1)); ) this.parts.push({ type: "node", index: -1 }), u++;
                  }
              } else p.currentNode = l.pop();
            }
            for (const e of i) e.parentNode.removeChild(e);
          }
        }
        exports.Template = o;
        const n = (e, t) => {
            const r = e.length - t.length;
            return r >= 0 && e.slice(r) === t;
          },
          i = (e) => -1 !== e.index;
        exports.isTemplatePartActive = i;
        const a = () => document.createComment("");
        exports.createMarker = a;
        const x = /([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=\/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;
        exports.lastAttributeNameRegex = x;
      },
      {},
    ],
    NXoq: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.removeNodesFromTemplate = n), (exports.insertNodeIntoTemplate = l);
        var e = require("./template.js");
        const t = 133;
        function n(e, n) {
          const {
              element: { content: r },
              parts: l,
            } = e,
            u = document.createTreeWalker(r, t, null, !1);
          let c = o(l),
            d = l[c],
            s = -1,
            i = 0;
          const a = [];
          let p = null;
          for (; u.nextNode(); ) {
            s++;
            const e = u.currentNode;
            for (e.previousSibling === p && (p = null), n.has(e) && (a.push(e), null === p && (p = e)), null !== p && i++; void 0 !== d && d.index === s; ) (d.index = null !== p ? -1 : d.index - i), (d = l[(c = o(l, c))]);
          }
          a.forEach((e) => e.parentNode.removeChild(e));
        }
        const r = (e) => {
            let n = 11 === e.nodeType ? 0 : 1;
            const r = document.createTreeWalker(e, t, null, !1);
            for (; r.nextNode(); ) n++;
            return n;
          },
          o = (t, n = -1) => {
            for (let r = n + 1; r < t.length; r++) {
              const n = t[r];
              if ((0, e.isTemplatePartActive)(n)) return r;
            }
            return -1;
          };
        function l(e, n, l = null) {
          const {
            element: { content: u },
            parts: c,
          } = e;
          if (null == l) return void u.appendChild(n);
          const d = document.createTreeWalker(u, t, null, !1);
          let s = o(c),
            i = 0,
            a = -1;
          for (; d.nextNode(); ) {
            for (a++, d.currentNode === l && ((i = r(n)), l.parentNode.insertBefore(n, l)); -1 !== s && c[s].index === a; ) {
              if (i > 0) {
                for (; -1 !== s; ) (c[s].index += i), (s = o(c, s));
                return;
              }
              s = o(c, s);
            }
          }
        }
      },
      { "./template.js": "Av0K" },
    ],
    uWh2: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.isDirective = exports.directive = void 0);
        const e = new WeakMap(),
          t =
            (t) =>
            (...s) => {
              const i = t(...s);
              return e.set(i, !0), i;
            };
        exports.directive = t;
        const s = (t) => "function" == typeof t && e.has(t);
        exports.isDirective = s;
      },
      {},
    ],
    pnLb: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.nothing = exports.noChange = void 0);
        const e = {};
        exports.noChange = e;
        const o = {};
        exports.nothing = o;
      },
      {},
    ],
    bn5t: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.TemplateInstance = void 0);
        var e = require("./dom.js"),
          t = require("./template.js");
        class s {
          constructor(e, t, s) {
            (this.__parts = []), (this.template = e), (this.processor = t), (this.options = s);
          }
          update(e) {
            let t = 0;
            for (const s of this.__parts) void 0 !== s && s.setValue(e[t]), t++;
            for (const s of this.__parts) void 0 !== s && s.commit();
          }
          _clone() {
            const s = e.isCEPolyfill ? this.template.element.content.cloneNode(!0) : document.importNode(this.template.element.content, !0),
              o = [],
              r = this.template.parts,
              n = document.createTreeWalker(s, 133, null, !1);
            let i,
              p = 0,
              l = 0,
              a = n.nextNode();
            for (; p < r.length; )
              if (((i = r[p]), (0, t.isTemplatePartActive)(i))) {
                for (; l < i.index; ) l++, "TEMPLATE" === a.nodeName && (o.push(a), (n.currentNode = a.content)), null === (a = n.nextNode()) && ((n.currentNode = o.pop()), (a = n.nextNode()));
                if ("node" === i.type) {
                  const e = this.processor.handleTextExpression(this.options);
                  e.insertAfterNode(a.previousSibling), this.__parts.push(e);
                } else this.__parts.push(...this.processor.handleAttributeExpressions(a, i.name, i.strings, this.options));
                p++;
              } else this.__parts.push(void 0), p++;
            return e.isCEPolyfill && (document.adoptNode(s), customElements.upgrade(s)), s;
          }
        }
        exports.TemplateInstance = s;
      },
      { "./dom.js": "ytxR", "./template.js": "Av0K" },
    ],
    cVNN: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.SVGTemplateResult = exports.TemplateResult = void 0);
        var e = require("./dom.js"),
          t = require("./template.js");
        const s = ` ${t.marker} `;
        class r {
          constructor(e, t, s, r) {
            (this.strings = e), (this.values = t), (this.type = s), (this.processor = r);
          }
          getHTML() {
            const e = this.strings.length - 1;
            let r = "",
              n = !1;
            for (let l = 0; l < e; l++) {
              const e = this.strings[l],
                i = e.lastIndexOf("\x3c!--");
              n = (i > -1 || n) && -1 === e.indexOf("--\x3e", i + 1);
              const o = t.lastAttributeNameRegex.exec(e);
              r += null === o ? e + (n ? s : t.nodeMarker) : e.substr(0, o.index) + o[1] + o[2] + t.boundAttributeSuffix + o[3] + t.marker;
            }
            return (r += this.strings[e]);
          }
          getTemplateElement() {
            const e = document.createElement("template");
            return (e.innerHTML = this.getHTML()), e;
          }
        }
        exports.TemplateResult = r;
        class n extends r {
          getHTML() {
            return `<svg>${super.getHTML()}</svg>`;
          }
          getTemplateElement() {
            const t = super.getTemplateElement(),
              s = t.content,
              r = s.firstChild;
            return s.removeChild(r), (0, e.reparentNodes)(s, r.firstChild), t;
          }
        }
        exports.SVGTemplateResult = n;
      },
      { "./dom.js": "ytxR", "./template.js": "Av0K" },
    ],
    atl2: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.EventPart = exports.PropertyPart = exports.PropertyCommitter = exports.BooleanAttributePart = exports.NodePart = exports.AttributePart = exports.AttributeCommitter = exports.isIterable = exports.isPrimitive = void 0);
        var t = require("./directive.js"),
          e = require("./dom.js"),
          i = require("./part.js"),
          s = require("./template-instance.js"),
          n = require("./template-result.js"),
          r = require("./template.js");
        const o = (t) => null === t || !("object" == typeof t || "function" == typeof t);
        exports.isPrimitive = o;
        const a = (t) => Array.isArray(t) || !(!t || !t[Symbol.iterator]);
        exports.isIterable = a;
        class h {
          constructor(t, e, i) {
            (this.dirty = !0), (this.element = t), (this.name = e), (this.strings = i), (this.parts = []);
            for (let s = 0; s < i.length - 1; s++) this.parts[s] = this._createPart();
          }
          _createPart() {
            return new l(this);
          }
          _getValue() {
            const t = this.strings,
              e = t.length - 1;
            let i = "";
            for (let s = 0; s < e; s++) {
              i += t[s];
              const e = this.parts[s];
              if (void 0 !== e) {
                const t = e.value;
                if (o(t) || !a(t)) i += "string" == typeof t ? t : String(t);
                else for (const e of t) i += "string" == typeof e ? e : String(e);
              }
            }
            return (i += t[e]);
          }
          commit() {
            this.dirty && ((this.dirty = !1), this.element.setAttribute(this.name, this._getValue()));
          }
        }
        exports.AttributeCommitter = h;
        class l {
          constructor(t) {
            (this.value = void 0), (this.committer = t);
          }
          setValue(e) {
            e === i.noChange || (o(e) && e === this.value) || ((this.value = e), (0, t.isDirective)(e) || (this.committer.dirty = !0));
          }
          commit() {
            for (; (0, t.isDirective)(this.value); ) {
              const t = this.value;
              (this.value = i.noChange), t(this);
            }
            this.value !== i.noChange && this.committer.commit();
          }
        }
        exports.AttributePart = l;
        class u {
          constructor(t) {
            (this.value = void 0), (this.__pendingValue = void 0), (this.options = t);
          }
          appendInto(t) {
            (this.startNode = t.appendChild((0, r.createMarker)())), (this.endNode = t.appendChild((0, r.createMarker)()));
          }
          insertAfterNode(t) {
            (this.startNode = t), (this.endNode = t.nextSibling);
          }
          appendIntoPart(t) {
            t.__insert((this.startNode = (0, r.createMarker)())), t.__insert((this.endNode = (0, r.createMarker)()));
          }
          insertAfterPart(t) {
            t.__insert((this.startNode = (0, r.createMarker)())), (this.endNode = t.endNode), (t.endNode = this.startNode);
          }
          setValue(t) {
            this.__pendingValue = t;
          }
          commit() {
            if (null === this.startNode.parentNode) return;
            for (; (0, t.isDirective)(this.__pendingValue); ) {
              const t = this.__pendingValue;
              (this.__pendingValue = i.noChange), t(this);
            }
            const e = this.__pendingValue;
            e !== i.noChange && (o(e) ? e !== this.value && this.__commitText(e) : e instanceof n.TemplateResult ? this.__commitTemplateResult(e) : e instanceof Node ? this.__commitNode(e) : a(e) ? this.__commitIterable(e) : e === i.nothing ? ((this.value = i.nothing), this.clear()) : this.__commitText(e));
          }
          __insert(t) {
            this.endNode.parentNode.insertBefore(t, this.endNode);
          }
          __commitNode(t) {
            this.value !== t && (this.clear(), this.__insert(t), (this.value = t));
          }
          __commitText(t) {
            const e = this.startNode.nextSibling,
              i = "string" == typeof (t = null == t ? "" : t) ? t : String(t);
            e === this.endNode.previousSibling && 3 === e.nodeType ? (e.data = i) : this.__commitNode(document.createTextNode(i)), (this.value = t);
          }
          __commitTemplateResult(t) {
            const e = this.options.templateFactory(t);
            if (this.value instanceof s.TemplateInstance && this.value.template === e) this.value.update(t.values);
            else {
              const i = new s.TemplateInstance(e, t.processor, this.options),
                n = i._clone();
              i.update(t.values), this.__commitNode(n), (this.value = i);
            }
          }
          __commitIterable(t) {
            Array.isArray(this.value) || ((this.value = []), this.clear());
            const e = this.value;
            let i,
              s = 0;
            for (const n of t) void 0 === (i = e[s]) && ((i = new u(this.options)), e.push(i), 0 === s ? i.appendIntoPart(this) : i.insertAfterPart(e[s - 1])), i.setValue(n), i.commit(), s++;
            s < e.length && ((e.length = s), this.clear(i && i.endNode));
          }
          clear(t = this.startNode) {
            (0, e.removeNodes)(this.startNode.parentNode, t.nextSibling, this.endNode);
          }
        }
        exports.NodePart = u;
        class d {
          constructor(t, e, i) {
            if (((this.value = void 0), (this.__pendingValue = void 0), 2 !== i.length || "" !== i[0] || "" !== i[1])) throw new Error("Boolean attributes can only contain a single expression");
            (this.element = t), (this.name = e), (this.strings = i);
          }
          setValue(t) {
            this.__pendingValue = t;
          }
          commit() {
            for (; (0, t.isDirective)(this.__pendingValue); ) {
              const t = this.__pendingValue;
              (this.__pendingValue = i.noChange), t(this);
            }
            if (this.__pendingValue === i.noChange) return;
            const e = !!this.__pendingValue;
            this.value !== e && (e ? this.element.setAttribute(this.name, "") : this.element.removeAttribute(this.name), (this.value = e)), (this.__pendingValue = i.noChange);
          }
        }
        exports.BooleanAttributePart = d;
        class c extends h {
          constructor(t, e, i) {
            super(t, e, i), (this.single = 2 === i.length && "" === i[0] && "" === i[1]);
          }
          _createPart() {
            return new p(this);
          }
          _getValue() {
            return this.single ? this.parts[0].value : super._getValue();
          }
          commit() {
            this.dirty && ((this.dirty = !1), (this.element[this.name] = this._getValue()));
          }
        }
        exports.PropertyCommitter = c;
        class p extends l {}
        exports.PropertyPart = p;
        let _ = !1;
        (() => {
          try {
            const e = {
              get capture() {
                return (_ = !0), !1;
              },
            };
            window.addEventListener("test", e, e), window.removeEventListener("test", e, e);
          } catch (t) {}
        })();
        class m {
          constructor(t, e, i) {
            (this.value = void 0), (this.__pendingValue = void 0), (this.element = t), (this.eventName = e), (this.eventContext = i), (this.__boundHandleEvent = (t) => this.handleEvent(t));
          }
          setValue(t) {
            this.__pendingValue = t;
          }
          commit() {
            for (; (0, t.isDirective)(this.__pendingValue); ) {
              const t = this.__pendingValue;
              (this.__pendingValue = i.noChange), t(this);
            }
            if (this.__pendingValue === i.noChange) return;
            const e = this.__pendingValue,
              s = this.value,
              n = null == e || (null != s && (e.capture !== s.capture || e.once !== s.once || e.passive !== s.passive)),
              r = null != e && (null == s || n);
            n && this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options), r && ((this.__options = v(e)), this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options)), (this.value = e), (this.__pendingValue = i.noChange);
          }
          handleEvent(t) {
            "function" == typeof this.value ? this.value.call(this.eventContext || this.element, t) : this.value.handleEvent(t);
          }
        }
        exports.EventPart = m;
        const v = (t) => t && (_ ? { capture: t.capture, passive: t.passive, once: t.once } : t.capture);
      },
      { "./directive.js": "uWh2", "./dom.js": "ytxR", "./part.js": "pnLb", "./template-instance.js": "bn5t", "./template-result.js": "cVNN", "./template.js": "Av0K" },
    ],
    gbKZ: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.templateFactory = t), (exports.templateCaches = void 0);
        var e = require("./template.js");
        function t(t) {
          let s = r.get(t.type);
          void 0 === s && ((s = { stringsArray: new WeakMap(), keyString: new Map() }), r.set(t.type, s));
          let n = s.stringsArray.get(t.strings);
          if (void 0 !== n) return n;
          const a = t.strings.join(e.marker);
          return void 0 === (n = s.keyString.get(a)) && ((n = new e.Template(t, t.getTemplateElement())), s.keyString.set(a, n)), s.stringsArray.set(t.strings, n), n;
        }
        const r = new Map();
        exports.templateCaches = r;
      },
      { "./template.js": "Av0K" },
    ],
    Fhpq: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.render = exports.parts = void 0);
        var e = require("./dom.js"),
          t = require("./parts.js"),
          r = require("./template-factory.js");
        const s = new WeakMap();
        exports.parts = s;
        const o = (o, a, p) => {
          let d = s.get(a);
          void 0 === d && ((0, e.removeNodes)(a, a.firstChild), s.set(a, (d = new t.NodePart(Object.assign({ templateFactory: r.templateFactory }, p)))), d.appendInto(a)), d.setValue(o), d.commit();
        };
        exports.render = o;
      },
      { "./dom.js": "ytxR", "./parts.js": "atl2", "./template-factory.js": "gbKZ" },
    ],
    LBiL: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.defaultTemplateProcessor = exports.DefaultTemplateProcessor = void 0);
        var e = require("./parts.js");
        class t {
          handleAttributeExpressions(t, r, s, o) {
            const a = r[0];
            if ("." === a) {
              return new e.PropertyCommitter(t, r.slice(1), s).parts;
            }
            return "@" === a ? [new e.EventPart(t, r.slice(1), o.eventContext)] : "?" === a ? [new e.BooleanAttributePart(t, r.slice(1), s)] : new e.AttributeCommitter(t, r, s).parts;
          }
          handleTextExpression(t) {
            return new e.NodePart(t);
          }
        }
        exports.DefaultTemplateProcessor = t;
        const r = new t();
        exports.defaultTemplateProcessor = r;
      },
      { "./parts.js": "atl2" },
    ],
    SPDu: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          Object.defineProperty(exports, "DefaultTemplateProcessor", {
            enumerable: !0,
            get: function () {
              return e.DefaultTemplateProcessor;
            },
          }),
          Object.defineProperty(exports, "defaultTemplateProcessor", {
            enumerable: !0,
            get: function () {
              return e.defaultTemplateProcessor;
            },
          }),
          Object.defineProperty(exports, "SVGTemplateResult", {
            enumerable: !0,
            get: function () {
              return t.SVGTemplateResult;
            },
          }),
          Object.defineProperty(exports, "TemplateResult", {
            enumerable: !0,
            get: function () {
              return t.TemplateResult;
            },
          }),
          Object.defineProperty(exports, "directive", {
            enumerable: !0,
            get: function () {
              return r.directive;
            },
          }),
          Object.defineProperty(exports, "isDirective", {
            enumerable: !0,
            get: function () {
              return r.isDirective;
            },
          }),
          Object.defineProperty(exports, "removeNodes", {
            enumerable: !0,
            get: function () {
              return n.removeNodes;
            },
          }),
          Object.defineProperty(exports, "reparentNodes", {
            enumerable: !0,
            get: function () {
              return n.reparentNodes;
            },
          }),
          Object.defineProperty(exports, "noChange", {
            enumerable: !0,
            get: function () {
              return o.noChange;
            },
          }),
          Object.defineProperty(exports, "nothing", {
            enumerable: !0,
            get: function () {
              return o.nothing;
            },
          }),
          Object.defineProperty(exports, "AttributeCommitter", {
            enumerable: !0,
            get: function () {
              return i.AttributeCommitter;
            },
          }),
          Object.defineProperty(exports, "AttributePart", {
            enumerable: !0,
            get: function () {
              return i.AttributePart;
            },
          }),
          Object.defineProperty(exports, "BooleanAttributePart", {
            enumerable: !0,
            get: function () {
              return i.BooleanAttributePart;
            },
          }),
          Object.defineProperty(exports, "EventPart", {
            enumerable: !0,
            get: function () {
              return i.EventPart;
            },
          }),
          Object.defineProperty(exports, "isIterable", {
            enumerable: !0,
            get: function () {
              return i.isIterable;
            },
          }),
          Object.defineProperty(exports, "isPrimitive", {
            enumerable: !0,
            get: function () {
              return i.isPrimitive;
            },
          }),
          Object.defineProperty(exports, "NodePart", {
            enumerable: !0,
            get: function () {
              return i.NodePart;
            },
          }),
          Object.defineProperty(exports, "PropertyCommitter", {
            enumerable: !0,
            get: function () {
              return i.PropertyCommitter;
            },
          }),
          Object.defineProperty(exports, "PropertyPart", {
            enumerable: !0,
            get: function () {
              return i.PropertyPart;
            },
          }),
          Object.defineProperty(exports, "parts", {
            enumerable: !0,
            get: function () {
              return u.parts;
            },
          }),
          Object.defineProperty(exports, "render", {
            enumerable: !0,
            get: function () {
              return u.render;
            },
          }),
          Object.defineProperty(exports, "templateCaches", {
            enumerable: !0,
            get: function () {
              return p.templateCaches;
            },
          }),
          Object.defineProperty(exports, "templateFactory", {
            enumerable: !0,
            get: function () {
              return p.templateFactory;
            },
          }),
          Object.defineProperty(exports, "TemplateInstance", {
            enumerable: !0,
            get: function () {
              return a.TemplateInstance;
            },
          }),
          Object.defineProperty(exports, "createMarker", {
            enumerable: !0,
            get: function () {
              return s.createMarker;
            },
          }),
          Object.defineProperty(exports, "isTemplatePartActive", {
            enumerable: !0,
            get: function () {
              return s.isTemplatePartActive;
            },
          }),
          Object.defineProperty(exports, "Template", {
            enumerable: !0,
            get: function () {
              return s.Template;
            },
          }),
          (exports.svg = exports.html = void 0);
        var e = require("./lib/default-template-processor.js"),
          t = require("./lib/template-result.js"),
          r = require("./lib/directive.js"),
          n = require("./lib/dom.js"),
          o = require("./lib/part.js"),
          i = require("./lib/parts.js"),
          u = require("./lib/render.js"),
          p = require("./lib/template-factory.js"),
          a = require("./lib/template-instance.js"),
          s = require("./lib/template.js");
        "undefined" != typeof window && (window.litHtmlVersions || (window.litHtmlVersions = [])).push("1.2.1");
        const l = (r, ...n) => new t.TemplateResult(r, n, "html", e.defaultTemplateProcessor);
        exports.html = l;
        const c = (r, ...n) => new t.SVGTemplateResult(r, n, "svg", e.defaultTemplateProcessor);
        exports.svg = c;
      },
      { "./lib/default-template-processor.js": "LBiL", "./lib/template-result.js": "cVNN", "./lib/directive.js": "uWh2", "./lib/dom.js": "ytxR", "./lib/part.js": "pnLb", "./lib/parts.js": "atl2", "./lib/render.js": "Fhpq", "./lib/template-factory.js": "gbKZ", "./lib/template-instance.js": "bn5t", "./lib/template.js": "Av0K" },
    ],
    eBH8: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }),
          Object.defineProperty(exports, "html", {
            enumerable: !0,
            get: function () {
              return a.html;
            },
          }),
          Object.defineProperty(exports, "svg", {
            enumerable: !0,
            get: function () {
              return a.svg;
            },
          }),
          Object.defineProperty(exports, "TemplateResult", {
            enumerable: !0,
            get: function () {
              return a.TemplateResult;
            },
          }),
          (exports.render = void 0);
        var e = require("./dom.js"),
          t = require("./modify-template.js"),
          r = require("./render.js"),
          n = require("./template-factory.js"),
          o = require("./template-instance.js"),
          s = require("./template.js"),
          a = require("../lit-html.js");
        const l = (e, t) => `${e}--${t}`;
        let i = !0;
        void 0 === window.ShadyCSS ? (i = !1) : void 0 === window.ShadyCSS.prepareTemplateDom && (console.warn("Incompatible ShadyCSS version detected. Please update to at least @webcomponents/webcomponentsjs@2.0.2 and @webcomponents/shadycss@1.3.1."), (i = !1));
        const d = (e) => (t) => {
            const r = l(t.type, e);
            let o = n.templateCaches.get(r);
            void 0 === o && ((o = { stringsArray: new WeakMap(), keyString: new Map() }), n.templateCaches.set(r, o));
            let a = o.stringsArray.get(t.strings);
            if (void 0 !== a) return a;
            const d = t.strings.join(s.marker);
            if (void 0 === (a = o.keyString.get(d))) {
              const r = t.getTemplateElement();
              i && window.ShadyCSS.prepareTemplateDom(r, e), (a = new s.Template(t, r)), o.keyString.set(d, a);
            }
            return o.stringsArray.set(t.strings, a), a;
          },
          p = ["html", "svg"],
          c = (e) => {
            p.forEach((r) => {
              const o = n.templateCaches.get(l(r, e));
              void 0 !== o &&
                o.keyString.forEach((e) => {
                  const {
                      element: { content: r },
                    } = e,
                    n = new Set();
                  Array.from(r.querySelectorAll("style")).forEach((e) => {
                    n.add(e);
                  }),
                    (0, t.removeNodesFromTemplate)(e, n);
                });
            });
          },
          m = new Set(),
          y = (e, r, n) => {
            m.add(e);
            const o = n ? n.element : document.createElement("template"),
              s = r.querySelectorAll("style"),
              { length: a } = s;
            if (0 === a) return void window.ShadyCSS.prepareTemplateStyles(o, e);
            const l = document.createElement("style");
            for (let t = 0; t < a; t++) {
              const e = s[t];
              e.parentNode.removeChild(e), (l.textContent += e.textContent);
            }
            c(e);
            const i = o.content;
            n ? (0, t.insertNodeIntoTemplate)(n, l, i.firstChild) : i.insertBefore(l, i.firstChild), window.ShadyCSS.prepareTemplateStyles(o, e);
            const d = i.querySelector("style");
            if (window.ShadyCSS.nativeShadow && null !== d) r.insertBefore(d.cloneNode(!0), r.firstChild);
            else if (n) {
              i.insertBefore(l, i.firstChild);
              const e = new Set();
              e.add(l), (0, t.removeNodesFromTemplate)(n, e);
            }
          },
          S = (t, n, s) => {
            if (!s || "object" != typeof s || !s.scopeName) throw new Error("The `scopeName` option is required.");
            const a = s.scopeName,
              l = r.parts.has(n),
              p = i && 11 === n.nodeType && !!n.host,
              c = p && !m.has(a),
              S = c ? document.createDocumentFragment() : n;
            if (((0, r.render)(t, S, Object.assign({ templateFactory: d(a) }, s)), c)) {
              const t = r.parts.get(S);
              r.parts.delete(S);
              const s = t.value instanceof o.TemplateInstance ? t.value.template : void 0;
              y(a, S, s), (0, e.removeNodes)(n, n.firstChild), n.appendChild(S), r.parts.set(n, t);
            }
            !l && p && window.ShadyCSS.styleElement(n.host);
          };
        exports.render = S;
      },
      { "./dom.js": "ytxR", "./modify-template.js": "NXoq", "./render.js": "Fhpq", "./template-factory.js": "gbKZ", "./template-instance.js": "bn5t", "./template.js": "Av0K", "../lit-html.js": "SPDu" },
    ],
    fKvB: [
      function (require, module, exports) {
        "use strict";
        var t;
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.UpdatingElement = exports.notEqual = exports.defaultConverter = void 0), (window.JSCompiler_renameProperty = (t, e) => t);
        const e = {
          toAttribute(t, e) {
            switch (e) {
              case Boolean:
                return t ? "" : null;
              case Object:
              case Array:
                return null == t ? t : JSON.stringify(t);
            }
            return t;
          },
          fromAttribute(t, e) {
            switch (e) {
              case Boolean:
                return null !== t;
              case Number:
                return null === t ? null : Number(t);
              case Object:
              case Array:
                return JSON.parse(t);
            }
            return t;
          },
        };
        exports.defaultConverter = e;
        const r = (t, e) => e !== t && (e == e || t == t);
        exports.notEqual = r;
        const s = { attribute: !0, type: String, converter: e, reflect: !1, hasChanged: r },
          i = 1,
          a = 4,
          o = 8,
          p = 16,
          n = "finalized";
        class h extends HTMLElement {
          constructor() {
            super(), (this._updateState = 0), (this._instanceProperties = void 0), (this._updatePromise = new Promise((t) => (this._enableUpdatingResolver = t))), (this._changedProperties = new Map()), (this._reflectingProperties = void 0), this.initialize();
          }
          static get observedAttributes() {
            this.finalize();
            const t = [];
            return (
              this._classProperties.forEach((e, r) => {
                const s = this._attributeNameForProperty(r, e);
                void 0 !== s && (this._attributeToPropertyMap.set(s, r), t.push(s));
              }),
              t
            );
          }
          static _ensureClassProperties() {
            if (!this.hasOwnProperty(JSCompiler_renameProperty("_classProperties", this))) {
              this._classProperties = new Map();
              const t = Object.getPrototypeOf(this)._classProperties;
              void 0 !== t && t.forEach((t, e) => this._classProperties.set(e, t));
            }
          }
          static createProperty(t, e = s) {
            if ((this._ensureClassProperties(), this._classProperties.set(t, e), e.noAccessor || this.prototype.hasOwnProperty(t))) return;
            const r = "symbol" == typeof t ? Symbol() : `__${t}`,
              i = this.getPropertyDescriptor(t, r, e);
            void 0 !== i && Object.defineProperty(this.prototype, t, i);
          }
          static getPropertyDescriptor(t, e, r) {
            return {
              get() {
                return this[e];
              },
              set(r) {
                const s = this[t];
                (this[e] = r), this._requestUpdate(t, s);
              },
              configurable: !0,
              enumerable: !0,
            };
          }
          static getPropertyOptions(t) {
            return (this._classProperties && this._classProperties.get(t)) || s;
          }
          static finalize() {
            const t = Object.getPrototypeOf(this);
            if ((t.hasOwnProperty(n) || t.finalize(), (this[n] = !0), this._ensureClassProperties(), (this._attributeToPropertyMap = new Map()), this.hasOwnProperty(JSCompiler_renameProperty("properties", this)))) {
              const t = this.properties,
                e = [...Object.getOwnPropertyNames(t), ...("function" == typeof Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t) : [])];
              for (const r of e) this.createProperty(r, t[r]);
            }
          }
          static _attributeNameForProperty(t, e) {
            const r = e.attribute;
            return !1 === r ? void 0 : "string" == typeof r ? r : "string" == typeof t ? t.toLowerCase() : void 0;
          }
          static _valueHasChanged(t, e, s = r) {
            return s(t, e);
          }
          static _propertyValueFromAttribute(t, r) {
            const s = r.type,
              i = r.converter || e,
              a = "function" == typeof i ? i : i.fromAttribute;
            return a ? a(t, s) : t;
          }
          static _propertyValueToAttribute(t, r) {
            if (void 0 === r.reflect) return;
            const s = r.type,
              i = r.converter;
            return ((i && i.toAttribute) || e.toAttribute)(t, s);
          }
          initialize() {
            this._saveInstanceProperties(), this._requestUpdate();
          }
          _saveInstanceProperties() {
            this.constructor._classProperties.forEach((t, e) => {
              if (this.hasOwnProperty(e)) {
                const t = this[e];
                delete this[e], this._instanceProperties || (this._instanceProperties = new Map()), this._instanceProperties.set(e, t);
              }
            });
          }
          _applyInstanceProperties() {
            this._instanceProperties.forEach((t, e) => (this[e] = t)), (this._instanceProperties = void 0);
          }
          connectedCallback() {
            this.enableUpdating();
          }
          enableUpdating() {
            void 0 !== this._enableUpdatingResolver && (this._enableUpdatingResolver(), (this._enableUpdatingResolver = void 0));
          }
          disconnectedCallback() {}
          attributeChangedCallback(t, e, r) {
            e !== r && this._attributeToProperty(t, r);
          }
          _propertyToAttribute(t, e, r = s) {
            const i = this.constructor,
              a = i._attributeNameForProperty(t, r);
            if (void 0 !== a) {
              const t = i._propertyValueToAttribute(e, r);
              if (void 0 === t) return;
              (this._updateState = this._updateState | o), null == t ? this.removeAttribute(a) : this.setAttribute(a, t), (this._updateState = this._updateState & ~o);
            }
          }
          _attributeToProperty(t, e) {
            if (this._updateState & o) return;
            const r = this.constructor,
              s = r._attributeToPropertyMap.get(t);
            if (void 0 !== s) {
              const t = r.getPropertyOptions(s);
              (this._updateState = this._updateState | p), (this[s] = r._propertyValueFromAttribute(e, t)), (this._updateState = this._updateState & ~p);
            }
          }
          _requestUpdate(t, e) {
            let r = !0;
            if (void 0 !== t) {
              const s = this.constructor,
                i = s.getPropertyOptions(t);
              s._valueHasChanged(this[t], e, i.hasChanged) ? (this._changedProperties.has(t) || this._changedProperties.set(t, e), !0 !== i.reflect || this._updateState & p || (void 0 === this._reflectingProperties && (this._reflectingProperties = new Map()), this._reflectingProperties.set(t, i))) : (r = !1);
            }
            !this._hasRequestedUpdate && r && (this._updatePromise = this._enqueueUpdate());
          }
          requestUpdate(t, e) {
            return this._requestUpdate(t, e), this.updateComplete;
          }
          async _enqueueUpdate() {
            this._updateState = this._updateState | a;
            try {
              await this._updatePromise;
            } catch (e) {}
            const t = this.performUpdate();
            return null != t && (await t), !this._hasRequestedUpdate;
          }
          get _hasRequestedUpdate() {
            return this._updateState & a;
          }
          get hasUpdated() {
            return this._updateState & i;
          }
          performUpdate() {
            this._instanceProperties && this._applyInstanceProperties();
            let t = !1;
            const e = this._changedProperties;
            try {
              (t = this.shouldUpdate(e)) ? this.update(e) : this._markUpdated();
            } catch (r) {
              throw ((t = !1), this._markUpdated(), r);
            }
            t && (this._updateState & i || ((this._updateState = this._updateState | i), this.firstUpdated(e)), this.updated(e));
          }
          _markUpdated() {
            (this._changedProperties = new Map()), (this._updateState = this._updateState & ~a);
          }
          get updateComplete() {
            return this._getUpdateComplete();
          }
          _getUpdateComplete() {
            return this._updatePromise;
          }
          shouldUpdate(t) {
            return !0;
          }
          update(t) {
            void 0 !== this._reflectingProperties && this._reflectingProperties.size > 0 && (this._reflectingProperties.forEach((t, e) => this._propertyToAttribute(e, this[e], t)), (this._reflectingProperties = void 0)), this._markUpdated();
          }
          updated(t) {}
          firstUpdated(t) {}
        }
        (exports.UpdatingElement = h), (h[(t = n)] = !0);
      },
      {},
    ],
    FzpZ: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.property = i), (exports.internalProperty = s), (exports.query = c), (exports.queryAsync = u), (exports.queryAll = l), (exports.eventOptions = f), (exports.queryAssignedNodes = m), (exports.customElement = void 0);
        const e = (e, t) => (window.customElements.define(e, t), t),
          t = (e, t) => {
            const { kind: r, elements: n } = t;
            return {
              kind: r,
              elements: n,
              finisher(t) {
                window.customElements.define(e, t);
              },
            };
          },
          r = (r) => (n) => "function" == typeof n ? e(r, n) : t(r, n);
        exports.customElement = r;
        const n = (e, t) =>
            "method" !== t.kind || !t.descriptor || "value" in t.descriptor
              ? {
                  kind: "field",
                  key: Symbol(),
                  placement: "own",
                  descriptor: {},
                  initializer() {
                    "function" == typeof t.initializer && (this[t.key] = t.initializer.call(this));
                  },
                  finisher(r) {
                    r.createProperty(t.key, e);
                  },
                }
              : Object.assign(Object.assign({}, t), {
                  finisher(r) {
                    r.createProperty(t.key, e);
                  },
                }),
          o = (e, t, r) => {
            t.constructor.createProperty(r, e);
          };
        function i(e) {
          return (t, r) => (void 0 !== r ? o(e, t, r) : n(e, t));
        }
        function s(e) {
          return i({ attribute: !1, hasChanged: null == e ? void 0 : e.hasChanged });
        }
        function c(e) {
          return (t, r) => {
            const n = {
              get() {
                return this.renderRoot.querySelector(e);
              },
              enumerable: !0,
              configurable: !0,
            };
            return void 0 !== r ? a(n, t, r) : d(n, t);
          };
        }
        function u(e) {
          return (t, r) => {
            const n = {
              async get() {
                return await this.updateComplete, this.renderRoot.querySelector(e);
              },
              enumerable: !0,
              configurable: !0,
            };
            return void 0 !== r ? a(n, t, r) : d(n, t);
          };
        }
        function l(e) {
          return (t, r) => {
            const n = {
              get() {
                return this.renderRoot.querySelectorAll(e);
              },
              enumerable: !0,
              configurable: !0,
            };
            return void 0 !== r ? a(n, t, r) : d(n, t);
          };
        }
        const a = (e, t, r) => {
            Object.defineProperty(t, r, e);
          },
          d = (e, t) => ({ kind: "method", placement: "prototype", key: t.key, descriptor: e }),
          p = (e, t) =>
            Object.assign(Object.assign({}, t), {
              finisher(r) {
                Object.assign(r.prototype[t.key], e);
              },
            }),
          y = (e, t, r) => {
            Object.assign(t[r], e);
          };
        function f(e) {
          return (t, r) => (void 0 !== r ? y(e, t, r) : p(e, t));
        }
        function m(e = "", t = !1) {
          return (r, n) => {
            const o = {
              get() {
                const r = `slot${e ? `[name=${e}]` : ""}`,
                  n = this.renderRoot.querySelector(r);
                return n && n.assignedNodes({ flatten: t });
              },
              enumerable: !0,
              configurable: !0,
            };
            return void 0 !== n ? a(o, r, n) : d(o, r);
          };
        }
      },
      {},
    ],
    ZFCR: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.css = exports.unsafeCSS = exports.CSSResult = exports.supportsAdoptingStyleSheets = void 0);
        const e = "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype;
        exports.supportsAdoptingStyleSheets = e;
        const t = Symbol();
        class s {
          constructor(e, s) {
            if (s !== t) throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
            this.cssText = e;
          }
          get styleSheet() {
            return void 0 === this._styleSheet && (e ? ((this._styleSheet = new CSSStyleSheet()), this._styleSheet.replaceSync(this.cssText)) : (this._styleSheet = null)), this._styleSheet;
          }
          toString() {
            return this.cssText;
          }
        }
        exports.CSSResult = s;
        const r = (e) => new s(String(e), t);
        exports.unsafeCSS = r;
        const o = (e) => {
            if (e instanceof s) return e.cssText;
            if ("number" == typeof e) return e;
            throw new Error(`Value passed to 'css' function must be a 'css' function result: ${e}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);
          },
          n = (e, ...r) => {
            const n = r.reduce((t, s, r) => t + o(s) + e[r + 1], e[0]);
            return new s(n, t);
          };
        exports.css = n;
      },
      {},
    ],
    bhxD: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 });
        var e = { LitElement: !0, html: !0, svg: !0, TemplateResult: !0, SVGTemplateResult: !0 };
        Object.defineProperty(exports, "html", {
          enumerable: !0,
          get: function () {
            return n.html;
          },
        }),
          Object.defineProperty(exports, "svg", {
            enumerable: !0,
            get: function () {
              return n.svg;
            },
          }),
          Object.defineProperty(exports, "TemplateResult", {
            enumerable: !0,
            get: function () {
              return n.TemplateResult;
            },
          }),
          Object.defineProperty(exports, "SVGTemplateResult", {
            enumerable: !0,
            get: function () {
              return n.SVGTemplateResult;
            },
          }),
          (exports.LitElement = void 0);
        var t = require("lit-html/lib/shady-render.js"),
          r = require("./lib/updating-element.js");
        Object.keys(r).forEach(function (t) {
          "default" !== t &&
            "__esModule" !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return r[t];
                },
              }));
        });
        var s = require("./lib/decorators.js");
        Object.keys(s).forEach(function (t) {
          "default" !== t &&
            "__esModule" !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return s[t];
                },
              }));
        });
        var n = require("lit-html/lit-html.js"),
          o = require("./lib/css-tag.js");
        Object.keys(o).forEach(function (t) {
          "default" !== t &&
            "__esModule" !== t &&
            (Object.prototype.hasOwnProperty.call(e, t) ||
              Object.defineProperty(exports, t, {
                enumerable: !0,
                get: function () {
                  return o[t];
                },
              }));
        }),
          (window.litElementVersions || (window.litElementVersions = [])).push("2.3.1");
        const i = {};
        class l extends r.UpdatingElement {
          static getStyles() {
            return this.styles;
          }
          static _getUniqueStyles() {
            if (this.hasOwnProperty(JSCompiler_renameProperty("_styles", this))) return;
            const e = this.getStyles();
            if (void 0 === e) this._styles = [];
            else if (Array.isArray(e)) {
              const t = (e, r) => e.reduceRight((e, r) => (Array.isArray(r) ? t(r, e) : (e.add(r), e)), r),
                r = t(e, new Set()),
                s = [];
              r.forEach((e) => s.unshift(e)), (this._styles = s);
            } else this._styles = [e];
          }
          initialize() {
            super.initialize(), this.constructor._getUniqueStyles(), (this.renderRoot = this.createRenderRoot()), window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot && this.adoptStyles();
          }
          createRenderRoot() {
            return this.attachShadow({ mode: "open" });
          }
          adoptStyles() {
            const e = this.constructor._styles;
            0 !== e.length &&
              (void 0 === window.ShadyCSS || window.ShadyCSS.nativeShadow
                ? o.supportsAdoptingStyleSheets
                  ? (this.renderRoot.adoptedStyleSheets = e.map((e) => e.styleSheet))
                  : (this._needsShimAdoptedStyleSheets = !0)
                : window.ShadyCSS.ScopingShim.prepareAdoptedCssText(
                    e.map((e) => e.cssText),
                    this.localName
                  ));
          }
          connectedCallback() {
            super.connectedCallback(), this.hasUpdated && void 0 !== window.ShadyCSS && window.ShadyCSS.styleElement(this);
          }
          update(e) {
            const t = this.render();
            super.update(e),
              t !== i && this.constructor.render(t, this.renderRoot, { scopeName: this.localName, eventContext: this }),
              this._needsShimAdoptedStyleSheets &&
                ((this._needsShimAdoptedStyleSheets = !1),
                this.constructor._styles.forEach((e) => {
                  const t = document.createElement("style");
                  (t.textContent = e.cssText), this.renderRoot.appendChild(t);
                }));
          }
          render() {
            return i;
          }
        }
        (exports.LitElement = l), (l.finalized = !0), (l.render = t.render);
      },
      { "lit-html/lib/shady-render.js": "eBH8", "./lib/updating-element.js": "fKvB", "./lib/decorators.js": "FzpZ", "lit-html/lit-html.js": "SPDu", "./lib/css-tag.js": "ZFCR" },
    ],
    xaRr: [
      function (require, module, exports) {
        var define;
        var global = arguments[3];
        var define,
          global = arguments[3];
        "undefined" != typeof navigator &&
          (function (t, e) {
            "function" == typeof define && define.amd
              ? define(function () {
                  return e(t);
                })
              : "object" == typeof module && module.exports
              ? (module.exports = e(t))
              : ((t.lottie = e(t)), (t.bodymovin = t.lottie));
          })(window || {}, function (window) {
            "use strict";
            var svgNS = "http://www.w3.org/2000/svg",
              locationHref = "",
              initialDefaultFrame = -999999,
              subframeEnabled = !0,
              expressionsPlugin,
              isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent),
              cachedColors = {},
              bm_rounder = Math.round,
              bm_rnd,
              bm_pow = Math.pow,
              bm_sqrt = Math.sqrt,
              bm_abs = Math.abs,
              bm_floor = Math.floor,
              bm_max = Math.max,
              bm_min = Math.min,
              blitter = 10,
              BMMath = {};
            function ProjectInterface() {
              return {};
            }
            !(function () {
              var t,
                e = ["abs", "acos", "acosh", "asin", "asinh", "atan", "atanh", "atan2", "ceil", "cbrt", "expm1", "clz32", "cos", "cosh", "exp", "floor", "fround", "hypot", "imul", "log", "log1p", "log2", "log10", "max", "min", "pow", "random", "round", "sign", "sin", "sinh", "sqrt", "tan", "tanh", "trunc", "E", "LN10", "LN2", "LOG10E", "LOG2E", "PI", "SQRT1_2", "SQRT2"],
                r = e.length;
              for (t = 0; t < r; t += 1) BMMath[e[t]] = Math[e[t]];
            })(),
              (BMMath.random = Math.random),
              (BMMath.abs = function (t) {
                if ("object" === typeof t && t.length) {
                  var e,
                    r = createSizedArray(t.length),
                    i = t.length;
                  for (e = 0; e < i; e += 1) r[e] = Math.abs(t[e]);
                  return r;
                }
                return Math.abs(t);
              });
            var defaultCurveSegments = 150,
              degToRads = Math.PI / 180,
              roundCorner = 0.5519;
            function roundValues(t) {
              bm_rnd = t
                ? Math.round
                : function (t) {
                    return t;
                  };
            }
            function styleDiv(t) {
              (t.style.position = "absolute"), (t.style.top = 0), (t.style.left = 0), (t.style.display = "block"), (t.style.transformOrigin = t.style.webkitTransformOrigin = "0 0"), (t.style.backfaceVisibility = t.style.webkitBackfaceVisibility = "visible"), (t.style.transformStyle = t.style.webkitTransformStyle = t.style.mozTransformStyle = "preserve-3d");
            }
            function BMEnterFrameEvent(t, e, r, i) {
              (this.type = t), (this.currentTime = e), (this.totalTime = r), (this.direction = i < 0 ? -1 : 1);
            }
            function BMCompleteEvent(t, e) {
              (this.type = t), (this.direction = e < 0 ? -1 : 1);
            }
            function BMCompleteLoopEvent(t, e, r, i) {
              (this.type = t), (this.currentLoop = r), (this.totalLoops = e), (this.direction = i < 0 ? -1 : 1);
            }
            function BMSegmentStartEvent(t, e, r) {
              (this.type = t), (this.firstFrame = e), (this.totalFrames = r);
            }
            function BMDestroyEvent(t, e) {
              (this.type = t), (this.target = e);
            }
            function BMRenderFrameErrorEvent(t, e) {
              (this.type = "renderFrameError"), (this.nativeError = t), (this.currentTime = e);
            }
            function BMConfigErrorEvent(t) {
              (this.type = "configError"), (this.nativeError = t);
            }
            function BMAnimationConfigErrorEvent(t, e) {
              (this.type = t), (this.nativeError = e), (this.currentTime = currentTime);
            }
            roundValues(!1);
            var createElementID =
                ((_count = 0),
                function () {
                  return "__lottie_element_" + ++_count;
                }),
              _count;
            function HSVtoRGB(t, e, r) {
              var i, s, a, n, o, h, l, p;
              switch (((h = r * (1 - e)), (l = r * (1 - (o = 6 * t - (n = Math.floor(6 * t))) * e)), (p = r * (1 - (1 - o) * e)), n % 6)) {
                case 0:
                  (i = r), (s = p), (a = h);
                  break;
                case 1:
                  (i = l), (s = r), (a = h);
                  break;
                case 2:
                  (i = h), (s = r), (a = p);
                  break;
                case 3:
                  (i = h), (s = l), (a = r);
                  break;
                case 4:
                  (i = p), (s = h), (a = r);
                  break;
                case 5:
                  (i = r), (s = h), (a = l);
              }
              return [i, s, a];
            }
            function RGBtoHSV(t, e, r) {
              var i,
                s = Math.max(t, e, r),
                a = Math.min(t, e, r),
                n = s - a,
                o = 0 === s ? 0 : n / s,
                h = s / 255;
              switch (s) {
                case a:
                  i = 0;
                  break;
                case t:
                  (i = e - r + n * (e < r ? 6 : 0)), (i /= 6 * n);
                  break;
                case e:
                  (i = r - t + 2 * n), (i /= 6 * n);
                  break;
                case r:
                  (i = t - e + 4 * n), (i /= 6 * n);
              }
              return [i, o, h];
            }
            function addSaturationToRGB(t, e) {
              var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
              return (r[1] += e), r[1] > 1 ? (r[1] = 1) : r[1] <= 0 && (r[1] = 0), HSVtoRGB(r[0], r[1], r[2]);
            }
            function addBrightnessToRGB(t, e) {
              var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
              return (r[2] += e), r[2] > 1 ? (r[2] = 1) : r[2] < 0 && (r[2] = 0), HSVtoRGB(r[0], r[1], r[2]);
            }
            function addHueToRGB(t, e) {
              var r = RGBtoHSV(255 * t[0], 255 * t[1], 255 * t[2]);
              return (r[0] += e / 360), r[0] > 1 ? (r[0] -= 1) : r[0] < 0 && (r[0] += 1), HSVtoRGB(r[0], r[1], r[2]);
            }
            var rgbToHex = (function () {
              var t,
                e,
                r = [];
              for (t = 0; t < 256; t += 1) (e = t.toString(16)), (r[t] = 1 == e.length ? "0" + e : e);
              return function (t, e, i) {
                return t < 0 && (t = 0), e < 0 && (e = 0), i < 0 && (i = 0), "#" + r[t] + r[e] + r[i];
              };
            })();
            function BaseEvent() {}
            BaseEvent.prototype = {
              triggerEvent: function (t, e) {
                if (this._cbs[t]) for (var r = this._cbs[t].length, i = 0; i < r; i++) this._cbs[t][i](e);
              },
              addEventListener: function (t, e) {
                return (
                  this._cbs[t] || (this._cbs[t] = []),
                  this._cbs[t].push(e),
                  function () {
                    this.removeEventListener(t, e);
                  }.bind(this)
                );
              },
              removeEventListener: function (t, e) {
                if (e) {
                  if (this._cbs[t]) {
                    for (var r = 0, i = this._cbs[t].length; r < i; ) this._cbs[t][r] === e && (this._cbs[t].splice(r, 1), (r -= 1), (i -= 1)), (r += 1);
                    this._cbs[t].length || (this._cbs[t] = null);
                  }
                } else this._cbs[t] = null;
              },
            };
            var createTypedArray = (function () {
              return "function" == typeof Uint8ClampedArray && "function" == typeof Float32Array
                ? function (t, e) {
                    return "float32" === t ? new Float32Array(e) : "int16" === t ? new Int16Array(e) : "uint8c" === t ? new Uint8ClampedArray(e) : void 0;
                  }
                : function (t, e) {
                    var r,
                      i = 0,
                      s = [];
                    switch (t) {
                      case "int16":
                      case "uint8c":
                        r = 1;
                        break;
                      default:
                        r = 1.1;
                    }
                    for (i = 0; i < e; i += 1) s.push(r);
                    return s;
                  };
            })();
            function createSizedArray(t) {
              return Array.apply(null, { length: t });
            }
            function createNS(t) {
              return document.createElementNS(svgNS, t);
            }
            function createTag(t) {
              return document.createElement(t);
            }
            function DynamicPropertyContainer() {}
            DynamicPropertyContainer.prototype = {
              addDynamicProperty: function (t) {
                -1 === this.dynamicProperties.indexOf(t) && (this.dynamicProperties.push(t), this.container.addDynamicProperty(this), (this._isAnimated = !0));
              },
              iterateDynamicProperties: function () {
                this._mdf = !1;
                var t,
                  e = this.dynamicProperties.length;
                for (t = 0; t < e; t += 1) this.dynamicProperties[t].getValue(), this.dynamicProperties[t]._mdf && (this._mdf = !0);
              },
              initDynamicPropertyContainer: function (t) {
                (this.container = t), (this.dynamicProperties = []), (this._mdf = !1), (this._isAnimated = !1);
              },
            };
            var getBlendMode =
                ((blendModeEnums = { 0: "source-over", 1: "multiply", 2: "screen", 3: "overlay", 4: "darken", 5: "lighten", 6: "color-dodge", 7: "color-burn", 8: "hard-light", 9: "soft-light", 10: "difference", 11: "exclusion", 12: "hue", 13: "saturation", 14: "color", 15: "luminosity" }),
                function (t) {
                  return blendModeEnums[t] || "";
                }),
              blendModeEnums,
              Matrix = (function () {
                var t = Math.cos,
                  e = Math.sin,
                  r = Math.tan,
                  i = Math.round;
                function s() {
                  return (this.props[0] = 1), (this.props[1] = 0), (this.props[2] = 0), (this.props[3] = 0), (this.props[4] = 0), (this.props[5] = 1), (this.props[6] = 0), (this.props[7] = 0), (this.props[8] = 0), (this.props[9] = 0), (this.props[10] = 1), (this.props[11] = 0), (this.props[12] = 0), (this.props[13] = 0), (this.props[14] = 0), (this.props[15] = 1), this;
                }
                function a(r) {
                  if (0 === r) return this;
                  var i = t(r),
                    s = e(r);
                  return this._t(i, -s, 0, 0, s, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                }
                function n(r) {
                  if (0 === r) return this;
                  var i = t(r),
                    s = e(r);
                  return this._t(1, 0, 0, 0, 0, i, -s, 0, 0, s, i, 0, 0, 0, 0, 1);
                }
                function o(r) {
                  if (0 === r) return this;
                  var i = t(r),
                    s = e(r);
                  return this._t(i, 0, s, 0, 0, 1, 0, 0, -s, 0, i, 0, 0, 0, 0, 1);
                }
                function h(r) {
                  if (0 === r) return this;
                  var i = t(r),
                    s = e(r);
                  return this._t(i, -s, 0, 0, s, i, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                }
                function l(t, e) {
                  return this._t(1, e, t, 1, 0, 0);
                }
                function p(t, e) {
                  return this.shear(r(t), r(e));
                }
                function f(i, s) {
                  var a = t(s),
                    n = e(s);
                  return this._t(a, n, 0, 0, -n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(1, 0, 0, 0, r(i), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)._t(a, -n, 0, 0, n, a, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
                }
                function m(t, e, r) {
                  return r || 0 === r || (r = 1), 1 === t && 1 === e && 1 === r ? this : this._t(t, 0, 0, 0, 0, e, 0, 0, 0, 0, r, 0, 0, 0, 0, 1);
                }
                function c(t, e, r, i, s, a, n, o, h, l, p, f, m, c, d, u) {
                  return (this.props[0] = t), (this.props[1] = e), (this.props[2] = r), (this.props[3] = i), (this.props[4] = s), (this.props[5] = a), (this.props[6] = n), (this.props[7] = o), (this.props[8] = h), (this.props[9] = l), (this.props[10] = p), (this.props[11] = f), (this.props[12] = m), (this.props[13] = c), (this.props[14] = d), (this.props[15] = u), this;
                }
                function d(t, e, r) {
                  return (r = r || 0), 0 !== t || 0 !== e || 0 !== r ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, t, e, r, 1) : this;
                }
                function u(t, e, r, i, s, a, n, o, h, l, p, f, m, c, d, u) {
                  var y = this.props;
                  if (1 === t && 0 === e && 0 === r && 0 === i && 0 === s && 1 === a && 0 === n && 0 === o && 0 === h && 0 === l && 1 === p && 0 === f) return (y[12] = y[12] * t + y[15] * m), (y[13] = y[13] * a + y[15] * c), (y[14] = y[14] * p + y[15] * d), (y[15] = y[15] * u), (this._identityCalculated = !1), this;
                  var g = y[0],
                    v = y[1],
                    b = y[2],
                    E = y[3],
                    x = y[4],
                    S = y[5],
                    P = y[6],
                    _ = y[7],
                    C = y[8],
                    A = y[9],
                    T = y[10],
                    k = y[11],
                    M = y[12],
                    D = y[13],
                    w = y[14],
                    F = y[15];
                  return (y[0] = g * t + v * s + b * h + E * m), (y[1] = g * e + v * a + b * l + E * c), (y[2] = g * r + v * n + b * p + E * d), (y[3] = g * i + v * o + b * f + E * u), (y[4] = x * t + S * s + P * h + _ * m), (y[5] = x * e + S * a + P * l + _ * c), (y[6] = x * r + S * n + P * p + _ * d), (y[7] = x * i + S * o + P * f + _ * u), (y[8] = C * t + A * s + T * h + k * m), (y[9] = C * e + A * a + T * l + k * c), (y[10] = C * r + A * n + T * p + k * d), (y[11] = C * i + A * o + T * f + k * u), (y[12] = M * t + D * s + w * h + F * m), (y[13] = M * e + D * a + w * l + F * c), (y[14] = M * r + D * n + w * p + F * d), (y[15] = M * i + D * o + w * f + F * u), (this._identityCalculated = !1), this;
                }
                function y() {
                  return this._identityCalculated || ((this._identity = !(1 !== this.props[0] || 0 !== this.props[1] || 0 !== this.props[2] || 0 !== this.props[3] || 0 !== this.props[4] || 1 !== this.props[5] || 0 !== this.props[6] || 0 !== this.props[7] || 0 !== this.props[8] || 0 !== this.props[9] || 1 !== this.props[10] || 0 !== this.props[11] || 0 !== this.props[12] || 0 !== this.props[13] || 0 !== this.props[14] || 1 !== this.props[15])), (this._identityCalculated = !0)), this._identity;
                }
                function g(t) {
                  for (var e = 0; e < 16; ) {
                    if (t.props[e] !== this.props[e]) return !1;
                    e += 1;
                  }
                  return !0;
                }
                function v(t) {
                  var e;
                  for (e = 0; e < 16; e += 1) t.props[e] = this.props[e];
                }
                function b(t) {
                  var e;
                  for (e = 0; e < 16; e += 1) this.props[e] = t[e];
                }
                function E(t, e, r) {
                  return { x: t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12], y: t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13], z: t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14] };
                }
                function x(t, e, r) {
                  return t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12];
                }
                function S(t, e, r) {
                  return t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13];
                }
                function P(t, e, r) {
                  return t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14];
                }
                function _() {
                  var t = this.props[0] * this.props[5] - this.props[1] * this.props[4],
                    e = this.props[5] / t,
                    r = -this.props[1] / t,
                    i = -this.props[4] / t,
                    s = this.props[0] / t,
                    a = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / t,
                    n = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / t,
                    o = new Matrix();
                  return (o.props[0] = e), (o.props[1] = r), (o.props[4] = i), (o.props[5] = s), (o.props[12] = a), (o.props[13] = n), o;
                }
                function C(t) {
                  return this.getInverseMatrix().applyToPointArray(t[0], t[1], t[2] || 0);
                }
                function A(t) {
                  var e,
                    r = t.length,
                    i = [];
                  for (e = 0; e < r; e += 1) i[e] = C(t[e]);
                  return i;
                }
                function T(t, e, r) {
                  var i = createTypedArray("float32", 6);
                  if (this.isIdentity()) (i[0] = t[0]), (i[1] = t[1]), (i[2] = e[0]), (i[3] = e[1]), (i[4] = r[0]), (i[5] = r[1]);
                  else {
                    var s = this.props[0],
                      a = this.props[1],
                      n = this.props[4],
                      o = this.props[5],
                      h = this.props[12],
                      l = this.props[13];
                    (i[0] = t[0] * s + t[1] * n + h), (i[1] = t[0] * a + t[1] * o + l), (i[2] = e[0] * s + e[1] * n + h), (i[3] = e[0] * a + e[1] * o + l), (i[4] = r[0] * s + r[1] * n + h), (i[5] = r[0] * a + r[1] * o + l);
                  }
                  return i;
                }
                function k(t, e, r) {
                  return this.isIdentity() ? [t, e, r] : [t * this.props[0] + e * this.props[4] + r * this.props[8] + this.props[12], t * this.props[1] + e * this.props[5] + r * this.props[9] + this.props[13], t * this.props[2] + e * this.props[6] + r * this.props[10] + this.props[14]];
                }
                function M(t, e) {
                  if (this.isIdentity()) return t + "," + e;
                  var r = this.props;
                  return Math.round(100 * (t * r[0] + e * r[4] + r[12])) / 100 + "," + Math.round(100 * (t * r[1] + e * r[5] + r[13])) / 100;
                }
                function D() {
                  for (var t = 0, e = this.props, r = "matrix3d("; t < 16; ) (r += i(1e4 * e[t]) / 1e4), (r += 15 === t ? ")" : ","), (t += 1);
                  return r;
                }
                function w(t) {
                  return (t < 1e-6 && t > 0) || (t > -1e-6 && t < 0) ? i(1e4 * t) / 1e4 : t;
                }
                function F() {
                  var t = this.props;
                  return "matrix(" + w(t[0]) + "," + w(t[1]) + "," + w(t[4]) + "," + w(t[5]) + "," + w(t[12]) + "," + w(t[13]) + ")";
                }
                return function () {
                  (this.reset = s), (this.rotate = a), (this.rotateX = n), (this.rotateY = o), (this.rotateZ = h), (this.skew = p), (this.skewFromAxis = f), (this.shear = l), (this.scale = m), (this.setTransform = c), (this.translate = d), (this.transform = u), (this.applyToPoint = E), (this.applyToX = x), (this.applyToY = S), (this.applyToZ = P), (this.applyToPointArray = k), (this.applyToTriplePoints = T), (this.applyToPointStringified = M), (this.toCSS = D), (this.to2dCSS = F), (this.clone = v), (this.cloneFromProps = b), (this.equals = g), (this.inversePoints = A), (this.inversePoint = C), (this.getInverseMatrix = _), (this._t = this.transform), (this.isIdentity = y), (this._identity = !0), (this._identityCalculated = !1), (this.props = createTypedArray("float32", 16)), this.reset();
                };
              })();
            !(function (t, e) {
              var r,
                i = this,
                s = 256,
                a = 6,
                n = "random",
                o = e.pow(s, a),
                h = e.pow(2, 52),
                l = 2 * h,
                p = s - 1;
              function f(t) {
                var e,
                  r = t.length,
                  i = this,
                  a = 0,
                  n = (i.i = i.j = 0),
                  o = (i.S = []);
                for (r || (t = [r++]); a < s; ) o[a] = a++;
                for (a = 0; a < s; a++) (o[a] = o[(n = p & (n + t[a % r] + (e = o[a])))]), (o[n] = e);
                i.g = function (t) {
                  for (var e, r = 0, a = i.i, n = i.j, o = i.S; t--; ) (e = o[(a = p & (a + 1))]), (r = r * s + o[p & ((o[a] = o[(n = p & (n + e))]) + (o[n] = e))]);
                  return (i.i = a), (i.j = n), r;
                };
              }
              function m(t, e) {
                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
              }
              function c(t, e) {
                for (var r, i = t + "", s = 0; s < i.length; ) e[p & s] = p & ((r ^= 19 * e[p & s]) + i.charCodeAt(s++));
                return d(e);
              }
              function d(t) {
                return String.fromCharCode.apply(0, t);
              }
              (e["seed" + n] = function (p, u, y) {
                var g = [],
                  v = c(
                    (function t(e, r) {
                      var i,
                        s = [],
                        a = typeof e;
                      if (r && "object" == a)
                        for (i in e)
                          try {
                            s.push(t(e[i], r - 1));
                          } catch (n) {}
                      return s.length ? s : "string" == a ? e : e + "\0";
                    })(
                      (u = !0 === u ? { entropy: !0 } : u || {}).entropy
                        ? [p, d(t)]
                        : null === p
                        ? (function () {
                            try {
                              if (r) return d(r.randomBytes(s));
                              var e = new Uint8Array(s);
                              return (i.crypto || i.msCrypto).getRandomValues(e), d(e);
                            } catch (o) {
                              var a = i.navigator,
                                n = a && a.plugins;
                              return [+new Date(), i, n, i.screen, d(t)];
                            }
                          })()
                        : p,
                      3
                    ),
                    g
                  ),
                  b = new f(g),
                  E = function () {
                    for (var t = b.g(a), e = o, r = 0; t < h; ) (t = (t + r) * s), (e *= s), (r = b.g(1));
                    for (; t >= l; ) (t /= 2), (e /= 2), (r >>>= 1);
                    return (t + r) / e;
                  };
                return (
                  (E.int32 = function () {
                    return 0 | b.g(4);
                  }),
                  (E.quick = function () {
                    return b.g(4) / 4294967296;
                  }),
                  (E.double = E),
                  c(d(b.S), t),
                  (
                    u.pass ||
                    y ||
                    function (t, r, i, s) {
                      return (
                        s &&
                          (s.S && m(s, b),
                          (t.state = function () {
                            return m(b, {});
                          })),
                        i ? ((e[n] = t), r) : t
                      );
                    }
                  )(E, v, "global" in u ? u.global : this == e, u.state)
                );
              }),
                c(e.random(), t);
            })([], BMMath);
            var BezierFactory = (function () {
              var t = {
                  getBezierEasing: function (t, r, i, s, a) {
                    var n = a || ("bez_" + t + "_" + r + "_" + i + "_" + s).replace(/\./g, "p");
                    if (e[n]) return e[n];
                    var o = new c([t, r, i, s]);
                    return (e[n] = o), o;
                  },
                },
                e = {};
              var r = 4,
                i = 1e-7,
                s = 10,
                a = 11,
                n = 1 / (a - 1),
                o = "function" == typeof Float32Array;
              function h(t, e) {
                return 1 - 3 * e + 3 * t;
              }
              function l(t, e) {
                return 3 * e - 6 * t;
              }
              function p(t) {
                return 3 * t;
              }
              function f(t, e, r) {
                return ((h(e, r) * t + l(e, r)) * t + p(e)) * t;
              }
              function m(t, e, r) {
                return 3 * h(e, r) * t * t + 2 * l(e, r) * t + p(e);
              }
              function c(t) {
                (this._p = t), (this._mSampleValues = o ? new Float32Array(a) : new Array(a)), (this._precomputed = !1), (this.get = this.get.bind(this));
              }
              return (
                (c.prototype = {
                  get: function (t) {
                    var e = this._p[0],
                      r = this._p[1],
                      i = this._p[2],
                      s = this._p[3];
                    return this._precomputed || this._precompute(), e === r && i === s ? t : 0 === t ? 0 : 1 === t ? 1 : f(this._getTForX(t), r, s);
                  },
                  _precompute: function () {
                    var t = this._p[0],
                      e = this._p[1],
                      r = this._p[2],
                      i = this._p[3];
                    (this._precomputed = !0), (t === e && r === i) || this._calcSampleValues();
                  },
                  _calcSampleValues: function () {
                    for (var t = this._p[0], e = this._p[2], r = 0; r < a; ++r) this._mSampleValues[r] = f(r * n, t, e);
                  },
                  _getTForX: function (t) {
                    for (var e = this._p[0], o = this._p[2], h = this._mSampleValues, l = 0, p = 1, c = a - 1; p !== c && h[p] <= t; ++p) l += n;
                    var d = l + ((t - h[--p]) / (h[p + 1] - h[p])) * n,
                      u = m(d, e, o);
                    return u >= 0.001
                      ? (function (t, e, i, s) {
                          for (var a = 0; a < r; ++a) {
                            var n = m(e, i, s);
                            if (0 === n) return e;
                            e -= (f(e, i, s) - t) / n;
                          }
                          return e;
                        })(t, d, e, o)
                      : 0 === u
                      ? d
                      : (function (t, e, r, a, n) {
                          var o,
                            h,
                            l = 0;
                          do {
                            (o = f((h = e + (r - e) / 2), a, n) - t) > 0 ? (r = h) : (e = h);
                          } while (Math.abs(o) > i && ++l < s);
                          return h;
                        })(t, l, l + n, e, o);
                  },
                }),
                t
              );
            })();
            function extendPrototype(t, e) {
              var r,
                i,
                s = t.length;
              for (r = 0; r < s; r += 1) for (var a in (i = t[r].prototype)) i.hasOwnProperty(a) && (e.prototype[a] = i[a]);
            }
            function getDescriptor(t, e) {
              return Object.getOwnPropertyDescriptor(t, e);
            }
            function createProxyFunction(t) {
              function e() {}
              return (e.prototype = t), e;
            }
            function bezFunction() {
              Math;
              function t(t, e, r, i, s, a) {
                var n = t * i + e * s + r * a - s * i - a * t - r * e;
                return n > -0.001 && n < 0.001;
              }
              var e = function (t, e, r, i) {
                var s,
                  a,
                  n,
                  o,
                  h,
                  l,
                  p = defaultCurveSegments,
                  f = 0,
                  m = [],
                  c = [],
                  d = bezier_length_pool.newElement();
                for (n = r.length, s = 0; s < p; s += 1) {
                  for (h = s / (p - 1), l = 0, a = 0; a < n; a += 1) (o = bm_pow(1 - h, 3) * t[a] + 3 * bm_pow(1 - h, 2) * h * r[a] + 3 * (1 - h) * bm_pow(h, 2) * i[a] + bm_pow(h, 3) * e[a]), (m[a] = o), null !== c[a] && (l += bm_pow(m[a] - c[a], 2)), (c[a] = m[a]);
                  l && (f += l = bm_sqrt(l)), (d.percents[s] = h), (d.lengths[s] = f);
                }
                return (d.addedLength = f), d;
              };
              function r(t) {
                (this.segmentLength = 0), (this.points = new Array(t));
              }
              function i(t, e) {
                (this.partialLength = t), (this.point = e);
              }
              var s,
                a =
                  ((s = {}),
                  function (e, a, n, o) {
                    var h = (e[0] + "_" + e[1] + "_" + a[0] + "_" + a[1] + "_" + n[0] + "_" + n[1] + "_" + o[0] + "_" + o[1]).replace(/\./g, "p");
                    if (!s[h]) {
                      var l,
                        p,
                        f,
                        m,
                        c,
                        d,
                        u,
                        y = defaultCurveSegments,
                        g = 0,
                        v = null;
                      2 === e.length && (e[0] != a[0] || e[1] != a[1]) && t(e[0], e[1], a[0], a[1], e[0] + n[0], e[1] + n[1]) && t(e[0], e[1], a[0], a[1], a[0] + o[0], a[1] + o[1]) && (y = 2);
                      var b = new r(y);
                      for (f = n.length, l = 0; l < y; l += 1) {
                        for (u = createSizedArray(f), c = l / (y - 1), d = 0, p = 0; p < f; p += 1) (m = bm_pow(1 - c, 3) * e[p] + 3 * bm_pow(1 - c, 2) * c * (e[p] + n[p]) + 3 * (1 - c) * bm_pow(c, 2) * (a[p] + o[p]) + bm_pow(c, 3) * a[p]), (u[p] = m), null !== v && (d += bm_pow(u[p] - v[p], 2));
                        (g += d = bm_sqrt(d)), (b.points[l] = new i(d, u)), (v = u);
                      }
                      (b.segmentLength = g), (s[h] = b);
                    }
                    return s[h];
                  });
              function n(t, e) {
                var r = e.percents,
                  i = e.lengths,
                  s = r.length,
                  a = bm_floor((s - 1) * t),
                  n = t * e.addedLength,
                  o = 0;
                if (a === s - 1 || 0 === a || n === i[a]) return r[a];
                for (var h = i[a] > n ? -1 : 1, l = !0; l; )
                  if ((i[a] <= n && i[a + 1] > n ? ((o = (n - i[a]) / (i[a + 1] - i[a])), (l = !1)) : (a += h), a < 0 || a >= s - 1)) {
                    if (a === s - 1) return r[a];
                    l = !1;
                  }
                return r[a] + (r[a + 1] - r[a]) * o;
              }
              var o = createTypedArray("float32", 8);
              return {
                getSegmentsLength: function (t) {
                  var r,
                    i = segments_length_pool.newElement(),
                    s = t.c,
                    a = t.v,
                    n = t.o,
                    o = t.i,
                    h = t._length,
                    l = i.lengths,
                    p = 0;
                  for (r = 0; r < h - 1; r += 1) (l[r] = e(a[r], a[r + 1], n[r], o[r + 1])), (p += l[r].addedLength);
                  return s && h && ((l[r] = e(a[r], a[0], n[r], o[0])), (p += l[r].addedLength)), (i.totalLength = p), i;
                },
                getNewSegment: function (t, e, r, i, s, a, h) {
                  var l,
                    p = n((s = s < 0 ? 0 : s > 1 ? 1 : s), h),
                    f = n((a = a > 1 ? 1 : a), h),
                    m = t.length,
                    c = 1 - p,
                    d = 1 - f,
                    u = c * c * c,
                    y = p * c * c * 3,
                    g = p * p * c * 3,
                    v = p * p * p,
                    b = c * c * d,
                    E = p * c * d + c * p * d + c * c * f,
                    x = p * p * d + c * p * f + p * c * f,
                    S = p * p * f,
                    P = c * d * d,
                    _ = p * d * d + c * f * d + c * d * f,
                    C = p * f * d + c * f * f + p * d * f,
                    A = p * f * f,
                    T = d * d * d,
                    k = f * d * d + d * f * d + d * d * f,
                    M = f * f * d + d * f * f + f * d * f,
                    D = f * f * f;
                  for (l = 0; l < m; l += 1) (o[4 * l] = Math.round(1e3 * (u * t[l] + y * r[l] + g * i[l] + v * e[l])) / 1e3), (o[4 * l + 1] = Math.round(1e3 * (b * t[l] + E * r[l] + x * i[l] + S * e[l])) / 1e3), (o[4 * l + 2] = Math.round(1e3 * (P * t[l] + _ * r[l] + C * i[l] + A * e[l])) / 1e3), (o[4 * l + 3] = Math.round(1e3 * (T * t[l] + k * r[l] + M * i[l] + D * e[l])) / 1e3);
                  return o;
                },
                getPointInSegment: function (t, e, r, i, s, a) {
                  var o = n(s, a),
                    h = 1 - o;
                  return [Math.round(1e3 * (h * h * h * t[0] + (o * h * h + h * o * h + h * h * o) * r[0] + (o * o * h + h * o * o + o * h * o) * i[0] + o * o * o * e[0])) / 1e3, Math.round(1e3 * (h * h * h * t[1] + (o * h * h + h * o * h + h * h * o) * r[1] + (o * o * h + h * o * o + o * h * o) * i[1] + o * o * o * e[1])) / 1e3];
                },
                buildBezierData: a,
                pointOnLine2D: t,
                pointOnLine3D: function (e, r, i, s, a, n, o, h, l) {
                  if (0 === i && 0 === n && 0 === l) return t(e, r, s, a, o, h);
                  var p,
                    f = Math.sqrt(Math.pow(s - e, 2) + Math.pow(a - r, 2) + Math.pow(n - i, 2)),
                    m = Math.sqrt(Math.pow(o - e, 2) + Math.pow(h - r, 2) + Math.pow(l - i, 2)),
                    c = Math.sqrt(Math.pow(o - s, 2) + Math.pow(h - a, 2) + Math.pow(l - n, 2));
                  return (p = f > m ? (f > c ? f - m - c : c - m - f) : c > m ? c - m - f : m - f - c) > -1e-4 && p < 1e-4;
                },
              };
            }
            !(function () {
              for (var t = 0, e = ["ms", "moz", "webkit", "o"], r = 0; r < e.length && !window.requestAnimationFrame; ++r) (window.requestAnimationFrame = window[e[r] + "RequestAnimationFrame"]), (window.cancelAnimationFrame = window[e[r] + "CancelAnimationFrame"] || window[e[r] + "CancelRequestAnimationFrame"]);
              window.requestAnimationFrame ||
                (window.requestAnimationFrame = function (e, r) {
                  var i = new Date().getTime(),
                    s = Math.max(0, 16 - (i - t)),
                    a = setTimeout(function () {
                      e(i + s);
                    }, s);
                  return (t = i + s), a;
                }),
                window.cancelAnimationFrame ||
                  (window.cancelAnimationFrame = function (t) {
                    clearTimeout(t);
                  });
            })();
            var bez = bezFunction();
            function dataFunctionManager() {
              function t(s, a, n) {
                var o,
                  h,
                  l,
                  f,
                  m,
                  c,
                  d = s.length;
                for (h = 0; h < d; h += 1)
                  if ("ks" in (o = s[h]) && !o.completed) {
                    if (((o.completed = !0), o.tt && (s[h - 1].td = o.tt), [], -1, o.hasMask)) {
                      var u = o.masksProperties;
                      for (f = u.length, l = 0; l < f; l += 1)
                        if (u[l].pt.k.i) i(u[l].pt.k);
                        else for (c = u[l].pt.k.length, m = 0; m < c; m += 1) u[l].pt.k[m].s && i(u[l].pt.k[m].s[0]), u[l].pt.k[m].e && i(u[l].pt.k[m].e[0]);
                    }
                    0 === o.ty ? ((o.layers = e(o.refId, a)), t(o.layers, a, n)) : 4 === o.ty ? r(o.shapes) : 5 == o.ty && p(o, n);
                  }
              }
              function e(t, e) {
                for (var r = 0, i = e.length; r < i; ) {
                  if (e[r].id === t) return e[r].layers.__used ? JSON.parse(JSON.stringify(e[r].layers)) : ((e[r].layers.__used = !0), e[r].layers);
                  r += 1;
                }
              }
              function r(t) {
                var e, s, a;
                for (e = t.length - 1; e >= 0; e -= 1)
                  if ("sh" == t[e].ty) {
                    if (t[e].ks.k.i) i(t[e].ks.k);
                    else for (a = t[e].ks.k.length, s = 0; s < a; s += 1) t[e].ks.k[s].s && i(t[e].ks.k[s].s[0]), t[e].ks.k[s].e && i(t[e].ks.k[s].e[0]);
                    !0;
                  } else "gr" == t[e].ty && r(t[e].it);
              }
              function i(t) {
                var e,
                  r = t.i.length;
                for (e = 0; e < r; e += 1) (t.i[e][0] += t.v[e][0]), (t.i[e][1] += t.v[e][1]), (t.o[e][0] += t.v[e][0]), (t.o[e][1] += t.v[e][1]);
              }
              function s(t, e) {
                var r = e ? e.split(".") : [100, 100, 100];
                return t[0] > r[0] || (!(r[0] > t[0]) && (t[1] > r[1] || (!(r[1] > t[1]) && (t[2] > r[2] || (!(r[2] > t[2]) && void 0)))));
              }
              var a,
                n = (function () {
                  var t = [4, 4, 14];
                  function e(t) {
                    var e,
                      r,
                      i,
                      s = t.length;
                    for (e = 0; e < s; e += 1) 5 === t[e].ty && ((r = t[e]), (i = void 0), (i = r.t.d), (r.t.d = { k: [{ s: i, t: 0 }] }));
                  }
                  return function (r) {
                    if (s(t, r.v) && (e(r.layers), r.assets)) {
                      var i,
                        a = r.assets.length;
                      for (i = 0; i < a; i += 1) r.assets[i].layers && e(r.assets[i].layers);
                    }
                  };
                })(),
                o =
                  ((a = [4, 7, 99]),
                  function (t) {
                    if (t.chars && !s(a, t.v)) {
                      var e,
                        r,
                        n,
                        o,
                        h,
                        l = t.chars.length;
                      for (e = 0; e < l; e += 1) if (t.chars[e].data && t.chars[e].data.shapes) for (n = (h = t.chars[e].data.shapes[0].it).length, r = 0; r < n; r += 1) (o = h[r].ks.k).__converted || (i(h[r].ks.k), (o.__converted = !0));
                    }
                  }),
                h = (function () {
                  var t = [4, 1, 9];
                  function e(t) {
                    var r,
                      i,
                      s,
                      a = t.length;
                    for (r = 0; r < a; r += 1)
                      if ("gr" === t[r].ty) e(t[r].it);
                      else if ("fl" === t[r].ty || "st" === t[r].ty)
                        if (t[r].c.k && t[r].c.k[0].i) for (s = t[r].c.k.length, i = 0; i < s; i += 1) t[r].c.k[i].s && ((t[r].c.k[i].s[0] /= 255), (t[r].c.k[i].s[1] /= 255), (t[r].c.k[i].s[2] /= 255), (t[r].c.k[i].s[3] /= 255)), t[r].c.k[i].e && ((t[r].c.k[i].e[0] /= 255), (t[r].c.k[i].e[1] /= 255), (t[r].c.k[i].e[2] /= 255), (t[r].c.k[i].e[3] /= 255));
                        else (t[r].c.k[0] /= 255), (t[r].c.k[1] /= 255), (t[r].c.k[2] /= 255), (t[r].c.k[3] /= 255);
                  }
                  function r(t) {
                    var r,
                      i = t.length;
                    for (r = 0; r < i; r += 1) 4 === t[r].ty && e(t[r].shapes);
                  }
                  return function (e) {
                    if (s(t, e.v) && (r(e.layers), e.assets)) {
                      var i,
                        a = e.assets.length;
                      for (i = 0; i < a; i += 1) e.assets[i].layers && r(e.assets[i].layers);
                    }
                  };
                })(),
                l = (function () {
                  var t = [4, 4, 18];
                  function e(t) {
                    var r, i, s;
                    for (r = t.length - 1; r >= 0; r -= 1)
                      if ("sh" == t[r].ty) {
                        if (t[r].ks.k.i) t[r].ks.k.c = t[r].closed;
                        else for (s = t[r].ks.k.length, i = 0; i < s; i += 1) t[r].ks.k[i].s && (t[r].ks.k[i].s[0].c = t[r].closed), t[r].ks.k[i].e && (t[r].ks.k[i].e[0].c = t[r].closed);
                        !0;
                      } else "gr" == t[r].ty && e(t[r].it);
                  }
                  function r(t) {
                    var r,
                      i,
                      s,
                      a,
                      n,
                      o,
                      h = t.length;
                    for (i = 0; i < h; i += 1) {
                      if ((r = t[i]).hasMask) {
                        var l = r.masksProperties;
                        for (a = l.length, s = 0; s < a; s += 1)
                          if (l[s].pt.k.i) l[s].pt.k.c = l[s].cl;
                          else for (o = l[s].pt.k.length, n = 0; n < o; n += 1) l[s].pt.k[n].s && (l[s].pt.k[n].s[0].c = l[s].cl), l[s].pt.k[n].e && (l[s].pt.k[n].e[0].c = l[s].cl);
                      }
                      4 === r.ty && e(r.shapes);
                    }
                  }
                  return function (e) {
                    if (s(t, e.v) && (r(e.layers), e.assets)) {
                      var i,
                        a = e.assets.length;
                      for (i = 0; i < a; i += 1) e.assets[i].layers && r(e.assets[i].layers);
                    }
                  };
                })();
              function p(t, e) {
                0 !== t.t.a.length || "m" in t.t.p || (t.singleShape = !0);
              }
              var f = {
                completeData: function (e, r) {
                  e.__complete || (h(e), n(e), o(e), l(e), t(e.layers, e.assets, r), (e.__complete = !0));
                },
              };
              return (f.checkColors = h), (f.checkChars = o), (f.checkShapes = l), (f.completeLayers = t), f;
            }
            var dataManager = dataFunctionManager(),
              FontManager = (function () {
                var t = 5e3,
                  e = { w: 0, size: 0, shapes: [] },
                  r = [];
                function i(t, e) {
                  var r = createTag("span");
                  r.style.fontFamily = e;
                  var i = createTag("span");
                  (i.innerHTML = "giItT1WQy@!-/#"), (r.style.position = "absolute"), (r.style.left = "-10000px"), (r.style.top = "-10000px"), (r.style.fontSize = "300px"), (r.style.fontVariant = "normal"), (r.style.fontStyle = "normal"), (r.style.fontWeight = "normal"), (r.style.letterSpacing = "0"), r.appendChild(i), document.body.appendChild(r);
                  var s = i.offsetWidth;
                  return (i.style.fontFamily = t + ", " + e), { node: i, w: s, parent: r };
                }
                function s(t, e) {
                  var r = createNS("text");
                  return (r.style.fontSize = "100px"), r.setAttribute("font-family", e.fFamily), r.setAttribute("font-style", e.fStyle), r.setAttribute("font-weight", e.fWeight), (r.textContent = "1"), e.fClass ? ((r.style.fontFamily = "inherit"), r.setAttribute("class", e.fClass)) : (r.style.fontFamily = e.fFamily), t.appendChild(r), (createTag("canvas").getContext("2d").font = e.fWeight + " " + e.fStyle + " 100px " + e.fFamily), r;
                }
                r = r.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);
                var a = function () {
                  (this.fonts = []), (this.chars = null), (this.typekitLoaded = 0), (this.isLoaded = !1), (this.initTime = Date.now());
                };
                return (
                  (a.getCombinedCharacterCodes = function () {
                    return r;
                  }),
                  (a.prototype.addChars = function (t) {
                    if (t) {
                      this.chars || (this.chars = []);
                      var e,
                        r,
                        i,
                        s = t.length,
                        a = this.chars.length;
                      for (e = 0; e < s; e += 1) {
                        for (r = 0, i = !1; r < a; ) this.chars[r].style === t[e].style && this.chars[r].fFamily === t[e].fFamily && this.chars[r].ch === t[e].ch && (i = !0), (r += 1);
                        i || (this.chars.push(t[e]), (a += 1));
                      }
                    }
                  }),
                  (a.prototype.addFonts = function (t, e) {
                    if (t) {
                      if (this.chars) return (this.isLoaded = !0), void (this.fonts = t.list);
                      var r,
                        a = t.list,
                        n = a.length,
                        o = n;
                      for (r = 0; r < n; r += 1) {
                        var h,
                          l,
                          p = !0;
                        if (((a[r].loaded = !1), (a[r].monoCase = i(a[r].fFamily, "monospace")), (a[r].sansCase = i(a[r].fFamily, "sans-serif")), a[r].fPath)) {
                          if ("p" === a[r].fOrigin || 3 === a[r].origin) {
                            if (((h = document.querySelectorAll('style[f-forigin="p"][f-family="' + a[r].fFamily + '"], style[f-origin="3"][f-family="' + a[r].fFamily + '"]')).length > 0 && (p = !1), p)) {
                              var f = createTag("style");
                              f.setAttribute("f-forigin", a[r].fOrigin), f.setAttribute("f-origin", a[r].origin), f.setAttribute("f-family", a[r].fFamily), (f.type = "text/css"), (f.innerHTML = "@font-face {font-family: " + a[r].fFamily + "; font-style: normal; src: url('" + a[r].fPath + "');}"), e.appendChild(f);
                            }
                          } else if ("g" === a[r].fOrigin || 1 === a[r].origin) {
                            for (h = document.querySelectorAll('link[f-forigin="g"], link[f-origin="1"]'), l = 0; l < h.length; l++) -1 !== h[l].href.indexOf(a[r].fPath) && (p = !1);
                            if (p) {
                              var m = createTag("link");
                              m.setAttribute("f-forigin", a[r].fOrigin), m.setAttribute("f-origin", a[r].origin), (m.type = "text/css"), (m.rel = "stylesheet"), (m.href = a[r].fPath), document.body.appendChild(m);
                            }
                          } else if ("t" === a[r].fOrigin || 2 === a[r].origin) {
                            for (h = document.querySelectorAll('script[f-forigin="t"], script[f-origin="2"]'), l = 0; l < h.length; l++) a[r].fPath === h[l].src && (p = !1);
                            if (p) {
                              var c = createTag("link");
                              c.setAttribute("f-forigin", a[r].fOrigin), c.setAttribute("f-origin", a[r].origin), c.setAttribute("rel", "stylesheet"), c.setAttribute("href", a[r].fPath), e.appendChild(c);
                            }
                          }
                        } else (a[r].loaded = !0), (o -= 1);
                        (a[r].helper = s(e, a[r])), (a[r].cache = {}), this.fonts.push(a[r]);
                      }
                      0 === o ? (this.isLoaded = !0) : setTimeout(this.checkLoadedFonts.bind(this), 100);
                    } else this.isLoaded = !0;
                  }),
                  (a.prototype.getCharData = function (t, r, i) {
                    for (var s = 0, a = this.chars.length; s < a; ) {
                      if (this.chars[s].ch === t && this.chars[s].style === r && this.chars[s].fFamily === i) return this.chars[s];
                      s += 1;
                    }
                    return (("string" == typeof t && 13 !== t.charCodeAt(0)) || !t) && console && console.warn && console.warn("Missing character from exported characters list: ", t, r, i), e;
                  }),
                  (a.prototype.getFontByName = function (t) {
                    for (var e = 0, r = this.fonts.length; e < r; ) {
                      if (this.fonts[e].fName === t) return this.fonts[e];
                      e += 1;
                    }
                    return this.fonts[0];
                  }),
                  (a.prototype.measureText = function (t, e, r) {
                    var i = this.getFontByName(e),
                      s = t.charCodeAt(0);
                    if (!i.cache[s + 1]) {
                      var a = i.helper;
                      if (" " === t) {
                        a.textContent = "|" + t + "|";
                        var n = a.getComputedTextLength();
                        a.textContent = "||";
                        var o = a.getComputedTextLength();
                        i.cache[s + 1] = (n - o) / 100;
                      } else (a.textContent = t), (i.cache[s + 1] = a.getComputedTextLength() / 100);
                    }
                    return i.cache[s + 1] * r;
                  }),
                  (a.prototype.checkLoadedFonts = function () {
                    var e,
                      r,
                      i,
                      s = this.fonts.length,
                      a = s;
                    for (e = 0; e < s; e += 1) this.fonts[e].loaded ? (a -= 1) : "n" === this.fonts[e].fOrigin || 0 === this.fonts[e].origin ? (this.fonts[e].loaded = !0) : ((r = this.fonts[e].monoCase.node), (i = this.fonts[e].monoCase.w), r.offsetWidth !== i ? ((a -= 1), (this.fonts[e].loaded = !0)) : ((r = this.fonts[e].sansCase.node), (i = this.fonts[e].sansCase.w), r.offsetWidth !== i && ((a -= 1), (this.fonts[e].loaded = !0))), this.fonts[e].loaded && (this.fonts[e].sansCase.parent.parentNode.removeChild(this.fonts[e].sansCase.parent), this.fonts[e].monoCase.parent.parentNode.removeChild(this.fonts[e].monoCase.parent)));
                    0 !== a && Date.now() - this.initTime < t
                      ? setTimeout(this.checkLoadedFonts.bind(this), 20)
                      : setTimeout(
                          function () {
                            this.isLoaded = !0;
                          }.bind(this),
                          0
                        );
                  }),
                  (a.prototype.loaded = function () {
                    return this.isLoaded;
                  }),
                  a
                );
              })(),
              PropertyFactory = (function () {
                var t = initialDefaultFrame,
                  e = Math.abs;
                function r(t, e) {
                  var r,
                    s = this.offsetTime;
                  "multidimensional" === this.propType && (r = createTypedArray("float32", this.pv.length));
                  for (var a, n, o, h, l, p, f, m, c = e.lastIndex, d = c, u = this.keyframes.length - 1, y = !0; y; ) {
                    if (((a = this.keyframes[d]), (n = this.keyframes[d + 1]), d === u - 1 && t >= n.t - s)) {
                      a.h && (a = n), (c = 0);
                      break;
                    }
                    if (n.t - s > t) {
                      c = d;
                      break;
                    }
                    d < u - 1 ? (d += 1) : ((c = 0), (y = !1));
                  }
                  var g,
                    v,
                    b,
                    E,
                    x,
                    S,
                    P,
                    _,
                    C,
                    A,
                    T = n.t - s,
                    k = a.t - s;
                  if (a.to) {
                    a.bezierData || (a.bezierData = bez.buildBezierData(a.s, n.s || a.e, a.to, a.ti));
                    var M = a.bezierData;
                    if (t >= T || t < k) {
                      var D = t >= T ? M.points.length - 1 : 0;
                      for (h = M.points[D].point.length, o = 0; o < h; o += 1) r[o] = M.points[D].point[o];
                    } else {
                      a.__fnct ? (m = a.__fnct) : ((m = BezierFactory.getBezierEasing(a.o.x, a.o.y, a.i.x, a.i.y, a.n).get), (a.__fnct = m)), (l = m((t - k) / (T - k)));
                      var w,
                        F = M.segmentLength * l,
                        I = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastAddedLength : 0;
                      for (f = e.lastFrame < t && e._lastKeyframeIndex === d ? e._lastPoint : 0, y = !0, p = M.points.length; y; ) {
                        if (((I += M.points[f].partialLength), 0 === F || 0 === l || f === M.points.length - 1)) {
                          for (h = M.points[f].point.length, o = 0; o < h; o += 1) r[o] = M.points[f].point[o];
                          break;
                        }
                        if (F >= I && F < I + M.points[f + 1].partialLength) {
                          for (w = (F - I) / M.points[f + 1].partialLength, h = M.points[f].point.length, o = 0; o < h; o += 1) r[o] = M.points[f].point[o] + (M.points[f + 1].point[o] - M.points[f].point[o]) * w;
                          break;
                        }
                        f < p - 1 ? (f += 1) : (y = !1);
                      }
                      (e._lastPoint = f), (e._lastAddedLength = I - M.points[f].partialLength), (e._lastKeyframeIndex = d);
                    }
                  } else {
                    var V, R, B, L, G;
                    if (((u = a.s.length), (g = n.s || a.e), this.sh && 1 !== a.h))
                      if (t >= T) (r[0] = g[0]), (r[1] = g[1]), (r[2] = g[2]);
                      else if (t <= k) (r[0] = a.s[0]), (r[1] = a.s[1]), (r[2] = a.s[2]);
                      else {
                        var z = i(a.s),
                          N = i(g);
                        (v = r),
                          (b = (function (t, e, r) {
                            var i,
                              s,
                              a,
                              n,
                              o,
                              h = [],
                              l = t[0],
                              p = t[1],
                              f = t[2],
                              m = t[3],
                              c = e[0],
                              d = e[1],
                              u = e[2],
                              y = e[3];
                            (s = l * c + p * d + f * u + m * y) < 0 && ((s = -s), (c = -c), (d = -d), (u = -u), (y = -y));
                            1 - s > 1e-6 ? ((i = Math.acos(s)), (a = Math.sin(i)), (n = Math.sin((1 - r) * i) / a), (o = Math.sin(r * i) / a)) : ((n = 1 - r), (o = r));
                            return (h[0] = n * l + o * c), (h[1] = n * p + o * d), (h[2] = n * f + o * u), (h[3] = n * m + o * y), h;
                          })(z, N, (t - k) / (T - k))),
                          (E = b[0]),
                          (x = b[1]),
                          (S = b[2]),
                          (P = b[3]),
                          (_ = Math.atan2(2 * x * P - 2 * E * S, 1 - 2 * x * x - 2 * S * S)),
                          (C = Math.asin(2 * E * x + 2 * S * P)),
                          (A = Math.atan2(2 * E * P - 2 * x * S, 1 - 2 * E * E - 2 * S * S)),
                          (v[0] = _ / degToRads),
                          (v[1] = C / degToRads),
                          (v[2] = A / degToRads);
                      }
                    else for (d = 0; d < u; d += 1) 1 !== a.h && (t >= T ? (l = 1) : t < k ? (l = 0) : (a.o.x.constructor === Array ? (a.__fnct || (a.__fnct = []), a.__fnct[d] ? (m = a.__fnct[d]) : ((V = void 0 === a.o.x[d] ? a.o.x[0] : a.o.x[d]), (R = void 0 === a.o.y[d] ? a.o.y[0] : a.o.y[d]), (B = void 0 === a.i.x[d] ? a.i.x[0] : a.i.x[d]), (L = void 0 === a.i.y[d] ? a.i.y[0] : a.i.y[d]), (m = BezierFactory.getBezierEasing(V, R, B, L).get), (a.__fnct[d] = m))) : a.__fnct ? (m = a.__fnct) : ((V = a.o.x), (R = a.o.y), (B = a.i.x), (L = a.i.y), (m = BezierFactory.getBezierEasing(V, R, B, L).get), (a.__fnct = m)), (l = m((t - k) / (T - k))))), (g = n.s || a.e), (G = 1 === a.h ? a.s[d] : a.s[d] + (g[d] - a.s[d]) * l), "multidimensional" === this.propType ? (r[d] = G) : (r = G);
                  }
                  return (e.lastIndex = c), r;
                }
                function i(t) {
                  var e = t[0] * degToRads,
                    r = t[1] * degToRads,
                    i = t[2] * degToRads,
                    s = Math.cos(e / 2),
                    a = Math.cos(r / 2),
                    n = Math.cos(i / 2),
                    o = Math.sin(e / 2),
                    h = Math.sin(r / 2),
                    l = Math.sin(i / 2);
                  return [o * h * n + s * a * l, o * a * n + s * h * l, s * h * n - o * a * l, s * a * n - o * h * l];
                }
                function s() {
                  var e = this.comp.renderedFrame - this.offsetTime,
                    r = this.keyframes[0].t - this.offsetTime,
                    i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
                  if (!(e === this._caching.lastFrame || (this._caching.lastFrame !== t && ((this._caching.lastFrame >= i && e >= i) || (this._caching.lastFrame < r && e < r))))) {
                    this._caching.lastFrame >= e && ((this._caching._lastKeyframeIndex = -1), (this._caching.lastIndex = 0));
                    var s = this.interpolateValue(e, this._caching);
                    this.pv = s;
                  }
                  return (this._caching.lastFrame = e), this.pv;
                }
                function a(t) {
                  var r;
                  if ("unidimensional" === this.propType) (r = t * this.mult), e(this.v - r) > 1e-5 && ((this.v = r), (this._mdf = !0));
                  else for (var i = 0, s = this.v.length; i < s; ) (r = t[i] * this.mult), e(this.v[i] - r) > 1e-5 && ((this.v[i] = r), (this._mdf = !0)), (i += 1);
                }
                function n() {
                  if (this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length)
                    if (this.lock) this.setVValue(this.pv);
                    else {
                      (this.lock = !0), (this._mdf = this._isFirstFrame);
                      var t,
                        e = this.effectsSequence.length,
                        r = this.kf ? this.pv : this.data.k;
                      for (t = 0; t < e; t += 1) r = this.effectsSequence[t](r);
                      this.setVValue(r), (this._isFirstFrame = !1), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                    }
                }
                function o(t) {
                  this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                }
                function h(t, e, r, i) {
                  (this.propType = "unidimensional"), (this.mult = r || 1), (this.data = e), (this.v = r ? e.k * r : e.k), (this.pv = e.k), (this._mdf = !1), (this.elem = t), (this.container = i), (this.comp = t.comp), (this.k = !1), (this.kf = !1), (this.vel = 0), (this.effectsSequence = []), (this._isFirstFrame = !0), (this.getValue = n), (this.setVValue = a), (this.addEffect = o);
                }
                function l(t, e, r, i) {
                  (this.propType = "multidimensional"), (this.mult = r || 1), (this.data = e), (this._mdf = !1), (this.elem = t), (this.container = i), (this.comp = t.comp), (this.k = !1), (this.kf = !1), (this.frameId = -1);
                  var s,
                    h = e.k.length;
                  (this.v = createTypedArray("float32", h)), (this.pv = createTypedArray("float32", h));
                  createTypedArray("float32", h);
                  for (this.vel = createTypedArray("float32", h), s = 0; s < h; s += 1) (this.v[s] = e.k[s] * this.mult), (this.pv[s] = e.k[s]);
                  (this._isFirstFrame = !0), (this.effectsSequence = []), (this.getValue = n), (this.setVValue = a), (this.addEffect = o);
                }
                function p(e, i, h, l) {
                  (this.propType = "unidimensional"), (this.keyframes = i.k), (this.offsetTime = e.data.st), (this.frameId = -1), (this._caching = { lastFrame: t, lastIndex: 0, value: 0, _lastKeyframeIndex: -1 }), (this.k = !0), (this.kf = !0), (this.data = i), (this.mult = h || 1), (this.elem = e), (this.container = l), (this.comp = e.comp), (this.v = t), (this.pv = t), (this._isFirstFrame = !0), (this.getValue = n), (this.setVValue = a), (this.interpolateValue = r), (this.effectsSequence = [s.bind(this)]), (this.addEffect = o);
                }
                function f(e, i, h, l) {
                  this.propType = "multidimensional";
                  var p,
                    f,
                    m,
                    c,
                    d,
                    u = i.k.length;
                  for (p = 0; p < u - 1; p += 1) i.k[p].to && i.k[p].s && i.k[p + 1] && i.k[p + 1].s && ((f = i.k[p].s), (m = i.k[p + 1].s), (c = i.k[p].to), (d = i.k[p].ti), ((2 === f.length && (f[0] !== m[0] || f[1] !== m[1]) && bez.pointOnLine2D(f[0], f[1], m[0], m[1], f[0] + c[0], f[1] + c[1]) && bez.pointOnLine2D(f[0], f[1], m[0], m[1], m[0] + d[0], m[1] + d[1])) || (3 === f.length && (f[0] !== m[0] || f[1] !== m[1] || f[2] !== m[2]) && bez.pointOnLine3D(f[0], f[1], f[2], m[0], m[1], m[2], f[0] + c[0], f[1] + c[1], f[2] + c[2]) && bez.pointOnLine3D(f[0], f[1], f[2], m[0], m[1], m[2], m[0] + d[0], m[1] + d[1], m[2] + d[2]))) && ((i.k[p].to = null), (i.k[p].ti = null)), f[0] === m[0] && f[1] === m[1] && 0 === c[0] && 0 === c[1] && 0 === d[0] && 0 === d[1] && (2 === f.length || (f[2] === m[2] && 0 === c[2] && 0 === d[2])) && ((i.k[p].to = null), (i.k[p].ti = null)));
                  (this.effectsSequence = [s.bind(this)]), (this.keyframes = i.k), (this.offsetTime = e.data.st), (this.k = !0), (this.kf = !0), (this._isFirstFrame = !0), (this.mult = h || 1), (this.elem = e), (this.container = l), (this.comp = e.comp), (this.getValue = n), (this.setVValue = a), (this.interpolateValue = r), (this.frameId = -1);
                  var y = i.k[0].s.length;
                  for (this.v = createTypedArray("float32", y), this.pv = createTypedArray("float32", y), p = 0; p < y; p += 1) (this.v[p] = t), (this.pv[p] = t);
                  (this._caching = { lastFrame: t, lastIndex: 0, value: createTypedArray("float32", y) }), (this.addEffect = o);
                }
                return {
                  getProp: function (t, e, r, i, s) {
                    var a;
                    if (e.k.length)
                      if ("number" == typeof e.k[0]) a = new l(t, e, i, s);
                      else
                        switch (r) {
                          case 0:
                            a = new p(t, e, i, s);
                            break;
                          case 1:
                            a = new f(t, e, i, s);
                        }
                    else a = new h(t, e, i, s);
                    return a.effectsSequence.length && s.addDynamicProperty(a), a;
                  },
                };
              })(),
              TransformPropertyFactory = (function () {
                var t = [0, 0];
                function e(t, e, r) {
                  if (((this.elem = t), (this.frameId = -1), (this.propType = "transform"), (this.data = e), (this.v = new Matrix()), (this.pre = new Matrix()), (this.appliedTransformations = 0), this.initDynamicPropertyContainer(r || t), e.p && e.p.s ? ((this.px = PropertyFactory.getProp(t, e.p.x, 0, 0, this)), (this.py = PropertyFactory.getProp(t, e.p.y, 0, 0, this)), e.p.z && (this.pz = PropertyFactory.getProp(t, e.p.z, 0, 0, this))) : (this.p = PropertyFactory.getProp(t, e.p || { k: [0, 0, 0] }, 1, 0, this)), e.rx)) {
                    if (((this.rx = PropertyFactory.getProp(t, e.rx, 0, degToRads, this)), (this.ry = PropertyFactory.getProp(t, e.ry, 0, degToRads, this)), (this.rz = PropertyFactory.getProp(t, e.rz, 0, degToRads, this)), e.or.k[0].ti)) {
                      var i,
                        s = e.or.k.length;
                      for (i = 0; i < s; i += 1) e.or.k[i].to = e.or.k[i].ti = null;
                    }
                    (this.or = PropertyFactory.getProp(t, e.or, 1, degToRads, this)), (this.or.sh = !0);
                  } else this.r = PropertyFactory.getProp(t, e.r || { k: 0 }, 0, degToRads, this);
                  e.sk && ((this.sk = PropertyFactory.getProp(t, e.sk, 0, degToRads, this)), (this.sa = PropertyFactory.getProp(t, e.sa, 0, degToRads, this))), (this.a = PropertyFactory.getProp(t, e.a || { k: [0, 0, 0] }, 1, 0, this)), (this.s = PropertyFactory.getProp(t, e.s || { k: [100, 100, 100] }, 1, 0.01, this)), e.o ? (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, t)) : (this.o = { _mdf: !1, v: 1 }), (this._isDirty = !0), this.dynamicProperties.length || this.getValue(!0);
                }
                return (
                  (e.prototype = {
                    applyToMatrix: function (t) {
                      var e = this._mdf;
                      this.iterateDynamicProperties(), (this._mdf = this._mdf || e), this.a && t.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.s && t.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && t.skewFromAxis(-this.sk.v, this.sa.v), this.r ? t.rotate(-this.r.v) : t.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.data.p.s ? (this.data.p.z ? t.translate(this.px.v, this.py.v, -this.pz.v) : t.translate(this.px.v, this.py.v, 0)) : t.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                    },
                    getValue: function (e) {
                      if (this.elem.globalData.frameId !== this.frameId) {
                        if ((this._isDirty && (this.precalculateMatrix(), (this._isDirty = !1)), this.iterateDynamicProperties(), this._mdf || e)) {
                          if ((this.v.cloneFromProps(this.pre.props), this.appliedTransformations < 1 && this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), this.appliedTransformations < 2 && this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]), this.sk && this.appliedTransformations < 3 && this.v.skewFromAxis(-this.sk.v, this.sa.v), this.r && this.appliedTransformations < 4 ? this.v.rotate(-this.r.v) : !this.r && this.appliedTransformations < 4 && this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), this.autoOriented)) {
                            var r,
                              i,
                              s = this.elem.globalData.frameRate;
                            if (this.p && this.p.keyframes && this.p.getValueAtTime) this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t ? ((r = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / s, 0)), (i = this.p.getValueAtTime(this.p.keyframes[0].t / s, 0))) : this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t ? ((r = this.p.getValueAtTime(this.p.keyframes[this.p.keyframes.length - 1].t / s, 0)), (i = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / s, 0))) : ((r = this.p.pv), (i = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / s, this.p.offsetTime)));
                            else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {
                              (r = []), (i = []);
                              var a = this.px,
                                n = this.py;
                              a._caching.lastFrame + a.offsetTime <= a.keyframes[0].t ? ((r[0] = a.getValueAtTime((a.keyframes[0].t + 0.01) / s, 0)), (r[1] = n.getValueAtTime((n.keyframes[0].t + 0.01) / s, 0)), (i[0] = a.getValueAtTime(a.keyframes[0].t / s, 0)), (i[1] = n.getValueAtTime(n.keyframes[0].t / s, 0))) : a._caching.lastFrame + a.offsetTime >= a.keyframes[a.keyframes.length - 1].t ? ((r[0] = a.getValueAtTime(a.keyframes[a.keyframes.length - 1].t / s, 0)), (r[1] = n.getValueAtTime(n.keyframes[n.keyframes.length - 1].t / s, 0)), (i[0] = a.getValueAtTime((a.keyframes[a.keyframes.length - 1].t - 0.01) / s, 0)), (i[1] = n.getValueAtTime((n.keyframes[n.keyframes.length - 1].t - 0.01) / s, 0))) : ((r = [a.pv, n.pv]), (i[0] = a.getValueAtTime((a._caching.lastFrame + a.offsetTime - 0.01) / s, a.offsetTime)), (i[1] = n.getValueAtTime((n._caching.lastFrame + n.offsetTime - 0.01) / s, n.offsetTime)));
                            } else r = i = t;
                            this.v.rotate(-Math.atan2(r[1] - i[1], r[0] - i[0]));
                          }
                          this.data.p && this.data.p.s ? (this.data.p.z ? this.v.translate(this.px.v, this.py.v, -this.pz.v) : this.v.translate(this.px.v, this.py.v, 0)) : this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
                        }
                        this.frameId = this.elem.globalData.frameId;
                      }
                    },
                    precalculateMatrix: function () {
                      if (!this.a.k && (this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]), (this.appliedTransformations = 1), !this.s.effectsSequence.length)) {
                        if ((this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]), (this.appliedTransformations = 2), this.sk)) {
                          if (this.sk.effectsSequence.length || this.sa.effectsSequence.length) return;
                          this.pre.skewFromAxis(-this.sk.v, this.sa.v), (this.appliedTransformations = 3);
                        }
                        if (this.r) {
                          if (this.r.effectsSequence.length) return;
                          this.pre.rotate(-this.r.v), (this.appliedTransformations = 4);
                        } else this.rz.effectsSequence.length || this.ry.effectsSequence.length || this.rx.effectsSequence.length || this.or.effectsSequence.length || (this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]), (this.appliedTransformations = 4));
                      }
                    },
                    autoOrient: function () {},
                  }),
                  extendPrototype([DynamicPropertyContainer], e),
                  (e.prototype.addDynamicProperty = function (t) {
                    this._addDynamicProperty(t), this.elem.addDynamicProperty(t), (this._isDirty = !0);
                  }),
                  (e.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty),
                  {
                    getTransformProperty: function (t, r, i) {
                      return new e(t, r, i);
                    },
                  }
                );
              })();
            function ShapePath() {
              (this.c = !1), (this._length = 0), (this._maxLength = 8), (this.v = createSizedArray(this._maxLength)), (this.o = createSizedArray(this._maxLength)), (this.i = createSizedArray(this._maxLength));
            }
            (ShapePath.prototype.setPathData = function (t, e) {
              (this.c = t), this.setLength(e);
              for (var r = 0; r < e; ) (this.v[r] = point_pool.newElement()), (this.o[r] = point_pool.newElement()), (this.i[r] = point_pool.newElement()), (r += 1);
            }),
              (ShapePath.prototype.setLength = function (t) {
                for (; this._maxLength < t; ) this.doubleArrayLength();
                this._length = t;
              }),
              (ShapePath.prototype.doubleArrayLength = function () {
                (this.v = this.v.concat(createSizedArray(this._maxLength))), (this.i = this.i.concat(createSizedArray(this._maxLength))), (this.o = this.o.concat(createSizedArray(this._maxLength))), (this._maxLength *= 2);
              }),
              (ShapePath.prototype.setXYAt = function (t, e, r, i, s) {
                var a;
                switch (((this._length = Math.max(this._length, i + 1)), this._length >= this._maxLength && this.doubleArrayLength(), r)) {
                  case "v":
                    a = this.v;
                    break;
                  case "i":
                    a = this.i;
                    break;
                  case "o":
                    a = this.o;
                }
                (!a[i] || (a[i] && !s)) && (a[i] = point_pool.newElement()), (a[i][0] = t), (a[i][1] = e);
              }),
              (ShapePath.prototype.setTripleAt = function (t, e, r, i, s, a, n, o) {
                this.setXYAt(t, e, "v", n, o), this.setXYAt(r, i, "o", n, o), this.setXYAt(s, a, "i", n, o);
              }),
              (ShapePath.prototype.reverse = function () {
                var t = new ShapePath();
                t.setPathData(this.c, this._length);
                var e = this.v,
                  r = this.o,
                  i = this.i,
                  s = 0;
                this.c && (t.setTripleAt(e[0][0], e[0][1], i[0][0], i[0][1], r[0][0], r[0][1], 0, !1), (s = 1));
                var a,
                  n = this._length - 1,
                  o = this._length;
                for (a = s; a < o; a += 1) t.setTripleAt(e[n][0], e[n][1], i[n][0], i[n][1], r[n][0], r[n][1], a, !1), (n -= 1);
                return t;
              });
            var ShapePropertyFactory = (function () {
                var t = -999999;
                function e(t, e, r) {
                  var i,
                    s,
                    a,
                    n,
                    o,
                    h,
                    l,
                    p,
                    f,
                    m = r.lastIndex,
                    c = this.keyframes;
                  if (t < c[0].t - this.offsetTime) (i = c[0].s[0]), (a = !0), (m = 0);
                  else if (t >= c[c.length - 1].t - this.offsetTime) (i = c[c.length - 1].s ? c[c.length - 1].s[0] : c[c.length - 2].e[0]), (a = !0);
                  else {
                    for (var d, u, y = m, g = c.length - 1, v = !0; v && ((d = c[y]), !((u = c[y + 1]).t - this.offsetTime > t)); ) y < g - 1 ? (y += 1) : (v = !1);
                    if (((m = y), !(a = 1 === d.h))) {
                      if (t >= u.t - this.offsetTime) p = 1;
                      else if (t < d.t - this.offsetTime) p = 0;
                      else {
                        var b;
                        d.__fnct ? (b = d.__fnct) : ((b = BezierFactory.getBezierEasing(d.o.x, d.o.y, d.i.x, d.i.y).get), (d.__fnct = b)), (p = b((t - (d.t - this.offsetTime)) / (u.t - this.offsetTime - (d.t - this.offsetTime))));
                      }
                      s = u.s ? u.s[0] : d.e[0];
                    }
                    i = d.s[0];
                  }
                  for (h = e._length, l = i.i[0].length, r.lastIndex = m, n = 0; n < h; n += 1) for (o = 0; o < l; o += 1) (f = a ? i.i[n][o] : i.i[n][o] + (s.i[n][o] - i.i[n][o]) * p), (e.i[n][o] = f), (f = a ? i.o[n][o] : i.o[n][o] + (s.o[n][o] - i.o[n][o]) * p), (e.o[n][o] = f), (f = a ? i.v[n][o] : i.v[n][o] + (s.v[n][o] - i.v[n][o]) * p), (e.v[n][o] = f);
                }
                function r() {
                  var e = this.comp.renderedFrame - this.offsetTime,
                    r = this.keyframes[0].t - this.offsetTime,
                    i = this.keyframes[this.keyframes.length - 1].t - this.offsetTime,
                    s = this._caching.lastFrame;
                  return (s !== t && ((s < r && e < r) || (s > i && e > i))) || ((this._caching.lastIndex = s < e ? this._caching.lastIndex : 0), this.interpolateShape(e, this.pv, this._caching)), (this._caching.lastFrame = e), this.pv;
                }
                function i() {
                  this.paths = this.localShapeCollection;
                }
                function s(t) {
                  (function (t, e) {
                    if (t._length !== e._length || t.c !== e.c) return !1;
                    var r,
                      i = t._length;
                    for (r = 0; r < i; r += 1) if (t.v[r][0] !== e.v[r][0] || t.v[r][1] !== e.v[r][1] || t.o[r][0] !== e.o[r][0] || t.o[r][1] !== e.o[r][1] || t.i[r][0] !== e.i[r][0] || t.i[r][1] !== e.i[r][1]) return !1;
                    return !0;
                  })(this.v, t) || ((this.v = shape_pool.clone(t)), this.localShapeCollection.releaseShapes(), this.localShapeCollection.addShape(this.v), (this._mdf = !0), (this.paths = this.localShapeCollection));
                }
                function a() {
                  if (this.elem.globalData.frameId !== this.frameId)
                    if (this.effectsSequence.length)
                      if (this.lock) this.setVValue(this.pv);
                      else {
                        (this.lock = !0), (this._mdf = !1);
                        var t,
                          e = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k,
                          r = this.effectsSequence.length;
                        for (t = 0; t < r; t += 1) e = this.effectsSequence[t](e);
                        this.setVValue(e), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                      }
                    else this._mdf = !1;
                }
                function n(t, e, r) {
                  (this.propType = "shape"), (this.comp = t.comp), (this.container = t), (this.elem = t), (this.data = e), (this.k = !1), (this.kf = !1), (this._mdf = !1);
                  var s = 3 === r ? e.pt.k : e.ks.k;
                  (this.v = shape_pool.clone(s)), (this.pv = shape_pool.clone(this.v)), (this.localShapeCollection = shapeCollection_pool.newShapeCollection()), (this.paths = this.localShapeCollection), this.paths.addShape(this.v), (this.reset = i), (this.effectsSequence = []);
                }
                function o(t) {
                  this.effectsSequence.push(t), this.container.addDynamicProperty(this);
                }
                function h(e, s, a) {
                  (this.propType = "shape"), (this.comp = e.comp), (this.elem = e), (this.container = e), (this.offsetTime = e.data.st), (this.keyframes = 3 === a ? s.pt.k : s.ks.k), (this.k = !0), (this.kf = !0);
                  var n = this.keyframes[0].s[0].i.length;
                  this.keyframes[0].s[0].i[0].length;
                  (this.v = shape_pool.newElement()), this.v.setPathData(this.keyframes[0].s[0].c, n), (this.pv = shape_pool.clone(this.v)), (this.localShapeCollection = shapeCollection_pool.newShapeCollection()), (this.paths = this.localShapeCollection), this.paths.addShape(this.v), (this.lastFrame = t), (this.reset = i), (this._caching = { lastFrame: t, lastIndex: 0 }), (this.effectsSequence = [r.bind(this)]);
                }
                (n.prototype.interpolateShape = e), (n.prototype.getValue = a), (n.prototype.setVValue = s), (n.prototype.addEffect = o), (h.prototype.getValue = a), (h.prototype.interpolateShape = e), (h.prototype.setVValue = s), (h.prototype.addEffect = o);
                var l = (function () {
                    var t = roundCorner;
                    function e(t, e) {
                      (this.v = shape_pool.newElement()), this.v.setPathData(!0, 4), (this.localShapeCollection = shapeCollection_pool.newShapeCollection()), (this.paths = this.localShapeCollection), this.localShapeCollection.addShape(this.v), (this.d = e.d), (this.elem = t), (this.comp = t.comp), (this.frameId = -1), this.initDynamicPropertyContainer(t), (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)), (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)), this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertEllToPath());
                    }
                    return (
                      (e.prototype = {
                        reset: i,
                        getValue: function () {
                          this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertEllToPath());
                        },
                        convertEllToPath: function () {
                          var e = this.p.v[0],
                            r = this.p.v[1],
                            i = this.s.v[0] / 2,
                            s = this.s.v[1] / 2,
                            a = 3 !== this.d,
                            n = this.v;
                          (n.v[0][0] = e), (n.v[0][1] = r - s), (n.v[1][0] = a ? e + i : e - i), (n.v[1][1] = r), (n.v[2][0] = e), (n.v[2][1] = r + s), (n.v[3][0] = a ? e - i : e + i), (n.v[3][1] = r), (n.i[0][0] = a ? e - i * t : e + i * t), (n.i[0][1] = r - s), (n.i[1][0] = a ? e + i : e - i), (n.i[1][1] = r - s * t), (n.i[2][0] = a ? e + i * t : e - i * t), (n.i[2][1] = r + s), (n.i[3][0] = a ? e - i : e + i), (n.i[3][1] = r + s * t), (n.o[0][0] = a ? e + i * t : e - i * t), (n.o[0][1] = r - s), (n.o[1][0] = a ? e + i : e - i), (n.o[1][1] = r + s * t), (n.o[2][0] = a ? e - i * t : e + i * t), (n.o[2][1] = r + s), (n.o[3][0] = a ? e - i : e + i), (n.o[3][1] = r - s * t);
                        },
                      }),
                      extendPrototype([DynamicPropertyContainer], e),
                      e
                    );
                  })(),
                  p = (function () {
                    function t(t, e) {
                      (this.v = shape_pool.newElement()), this.v.setPathData(!0, 0), (this.elem = t), (this.comp = t.comp), (this.data = e), (this.frameId = -1), (this.d = e.d), this.initDynamicPropertyContainer(t), 1 === e.sy ? ((this.ir = PropertyFactory.getProp(t, e.ir, 0, 0, this)), (this.is = PropertyFactory.getProp(t, e.is, 0, 0.01, this)), (this.convertToPath = this.convertStarToPath)) : (this.convertToPath = this.convertPolygonToPath), (this.pt = PropertyFactory.getProp(t, e.pt, 0, 0, this)), (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)), (this.r = PropertyFactory.getProp(t, e.r, 0, degToRads, this)), (this.or = PropertyFactory.getProp(t, e.or, 0, 0, this)), (this.os = PropertyFactory.getProp(t, e.os, 0, 0.01, this)), (this.localShapeCollection = shapeCollection_pool.newShapeCollection()), this.localShapeCollection.addShape(this.v), (this.paths = this.localShapeCollection), this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertToPath());
                    }
                    return (
                      (t.prototype = {
                        reset: i,
                        getValue: function () {
                          this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertToPath());
                        },
                        convertStarToPath: function () {
                          var t,
                            e,
                            r,
                            i,
                            s = 2 * Math.floor(this.pt.v),
                            a = (2 * Math.PI) / s,
                            n = !0,
                            o = this.or.v,
                            h = this.ir.v,
                            l = this.os.v,
                            p = this.is.v,
                            f = (2 * Math.PI * o) / (2 * s),
                            m = (2 * Math.PI * h) / (2 * s),
                            c = -Math.PI / 2;
                          c += this.r.v;
                          var d = 3 === this.data.d ? -1 : 1;
                          for (this.v._length = 0, t = 0; t < s; t += 1) {
                            (r = n ? l : p), (i = n ? f : m);
                            var u = (e = n ? o : h) * Math.cos(c),
                              y = e * Math.sin(c),
                              g = 0 === u && 0 === y ? 0 : y / Math.sqrt(u * u + y * y),
                              v = 0 === u && 0 === y ? 0 : -u / Math.sqrt(u * u + y * y);
                            (u += +this.p.v[0]), (y += +this.p.v[1]), this.v.setTripleAt(u, y, u - g * i * r * d, y - v * i * r * d, u + g * i * r * d, y + v * i * r * d, t, !0), (n = !n), (c += a * d);
                          }
                        },
                        convertPolygonToPath: function () {
                          var t,
                            e = Math.floor(this.pt.v),
                            r = (2 * Math.PI) / e,
                            i = this.or.v,
                            s = this.os.v,
                            a = (2 * Math.PI * i) / (4 * e),
                            n = -Math.PI / 2,
                            o = 3 === this.data.d ? -1 : 1;
                          for (n += this.r.v, this.v._length = 0, t = 0; t < e; t += 1) {
                            var h = i * Math.cos(n),
                              l = i * Math.sin(n),
                              p = 0 === h && 0 === l ? 0 : l / Math.sqrt(h * h + l * l),
                              f = 0 === h && 0 === l ? 0 : -h / Math.sqrt(h * h + l * l);
                            (h += +this.p.v[0]), (l += +this.p.v[1]), this.v.setTripleAt(h, l, h - p * a * s * o, l - f * a * s * o, h + p * a * s * o, l + f * a * s * o, t, !0), (n += r * o);
                          }
                          (this.paths.length = 0), (this.paths[0] = this.v);
                        },
                      }),
                      extendPrototype([DynamicPropertyContainer], t),
                      t
                    );
                  })(),
                  f = (function () {
                    function t(t, e) {
                      (this.v = shape_pool.newElement()), (this.v.c = !0), (this.localShapeCollection = shapeCollection_pool.newShapeCollection()), this.localShapeCollection.addShape(this.v), (this.paths = this.localShapeCollection), (this.elem = t), (this.comp = t.comp), (this.frameId = -1), (this.d = e.d), this.initDynamicPropertyContainer(t), (this.p = PropertyFactory.getProp(t, e.p, 1, 0, this)), (this.s = PropertyFactory.getProp(t, e.s, 1, 0, this)), (this.r = PropertyFactory.getProp(t, e.r, 0, 0, this)), this.dynamicProperties.length ? (this.k = !0) : ((this.k = !1), this.convertRectToPath());
                    }
                    return (
                      (t.prototype = {
                        convertRectToPath: function () {
                          var t = this.p.v[0],
                            e = this.p.v[1],
                            r = this.s.v[0] / 2,
                            i = this.s.v[1] / 2,
                            s = bm_min(r, i, this.r.v),
                            a = s * (1 - roundCorner);
                          (this.v._length = 0),
                            2 === this.d || 1 === this.d
                              ? (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + s, t + r, e - i + a, 0, !0), this.v.setTripleAt(t + r, e + i - s, t + r, e + i - a, t + r, e + i - s, 1, !0), 0 !== s ? (this.v.setTripleAt(t + r - s, e + i, t + r - s, e + i, t + r - a, e + i, 2, !0), this.v.setTripleAt(t - r + s, e + i, t - r + a, e + i, t - r + s, e + i, 3, !0), this.v.setTripleAt(t - r, e + i - s, t - r, e + i - s, t - r, e + i - a, 4, !0), this.v.setTripleAt(t - r, e - i + s, t - r, e - i + a, t - r, e - i + s, 5, !0), this.v.setTripleAt(t - r + s, e - i, t - r + s, e - i, t - r + a, e - i, 6, !0), this.v.setTripleAt(t + r - s, e - i, t + r - a, e - i, t + r - s, e - i, 7, !0)) : (this.v.setTripleAt(t - r, e + i, t - r + a, e + i, t - r, e + i, 2), this.v.setTripleAt(t - r, e - i, t - r, e - i + a, t - r, e - i, 3)))
                              : (this.v.setTripleAt(t + r, e - i + s, t + r, e - i + a, t + r, e - i + s, 0, !0), 0 !== s ? (this.v.setTripleAt(t + r - s, e - i, t + r - s, e - i, t + r - a, e - i, 1, !0), this.v.setTripleAt(t - r + s, e - i, t - r + a, e - i, t - r + s, e - i, 2, !0), this.v.setTripleAt(t - r, e - i + s, t - r, e - i + s, t - r, e - i + a, 3, !0), this.v.setTripleAt(t - r, e + i - s, t - r, e + i - a, t - r, e + i - s, 4, !0), this.v.setTripleAt(t - r + s, e + i, t - r + s, e + i, t - r + a, e + i, 5, !0), this.v.setTripleAt(t + r - s, e + i, t + r - a, e + i, t + r - s, e + i, 6, !0), this.v.setTripleAt(t + r, e + i - s, t + r, e + i - s, t + r, e + i - a, 7, !0)) : (this.v.setTripleAt(t - r, e - i, t - r + a, e - i, t - r, e - i, 1, !0), this.v.setTripleAt(t - r, e + i, t - r, e + i - a, t - r, e + i, 2, !0), this.v.setTripleAt(t + r, e + i, t + r - a, e + i, t + r, e + i, 3, !0)));
                        },
                        getValue: function (t) {
                          this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), this._mdf && this.convertRectToPath());
                        },
                        reset: i,
                      }),
                      extendPrototype([DynamicPropertyContainer], t),
                      t
                    );
                  })();
                var m = {
                  getShapeProp: function (t, e, r) {
                    var i;
                    return 3 === r || 4 === r ? (i = (3 === r ? e.pt : e.ks).k.length ? new h(t, e, r) : new n(t, e, r)) : 5 === r ? (i = new f(t, e)) : 6 === r ? (i = new l(t, e)) : 7 === r && (i = new p(t, e)), i.k && t.addDynamicProperty(i), i;
                  },
                  getConstructorFunction: function () {
                    return n;
                  },
                  getKeyframedConstructorFunction: function () {
                    return h;
                  },
                };
                return m;
              })(),
              ShapeModifiers = (function () {
                var t = {},
                  e = {};
                return (
                  (t.registerModifier = function (t, r) {
                    e[t] || (e[t] = r);
                  }),
                  (t.getModifier = function (t, r, i) {
                    return new e[t](r, i);
                  }),
                  t
                );
              })();
            function ShapeModifier() {}
            function TrimModifier() {}
            function RoundCornersModifier() {}
            function RepeaterModifier() {}
            function ShapeCollection() {
              (this._length = 0), (this._maxLength = 4), (this.shapes = createSizedArray(this._maxLength));
            }
            function DashProperty(t, e, r, i) {
              (this.elem = t), (this.frameId = -1), (this.dataProps = createSizedArray(e.length)), (this.renderer = r), (this.k = !1), (this.dashStr = ""), (this.dashArray = createTypedArray("float32", e.length ? e.length - 1 : 0)), (this.dashoffset = createTypedArray("float32", 1)), this.initDynamicPropertyContainer(i);
              var s,
                a,
                n = e.length || 0;
              for (s = 0; s < n; s += 1) (a = PropertyFactory.getProp(t, e[s].v, 0, 0, this)), (this.k = a.k || this.k), (this.dataProps[s] = { n: e[s].n, p: a });
              this.k || this.getValue(!0), (this._isAnimated = this.k);
            }
            function GradientProperty(t, e, r) {
              (this.data = e), (this.c = createTypedArray("uint8c", 4 * e.p));
              var i = e.k.k[0].s ? e.k.k[0].s.length - 4 * e.p : e.k.k.length - 4 * e.p;
              (this.o = createTypedArray("float32", i)), (this._cmdf = !1), (this._omdf = !1), (this._collapsable = this.checkCollapsable()), (this._hasOpacity = i), this.initDynamicPropertyContainer(r), (this.prop = PropertyFactory.getProp(t, e.k, 1, null, this)), (this.k = this.prop.k), this.getValue(!0);
            }
            (ShapeModifier.prototype.initModifierProperties = function () {}),
              (ShapeModifier.prototype.addShapeToModifier = function () {}),
              (ShapeModifier.prototype.addShape = function (t) {
                if (!this.closed) {
                  t.sh.container.addDynamicProperty(t.sh);
                  var e = { shape: t.sh, data: t, localShapeCollection: shapeCollection_pool.newShapeCollection() };
                  this.shapes.push(e), this.addShapeToModifier(e), this._isAnimated && t.setAsAnimated();
                }
              }),
              (ShapeModifier.prototype.init = function (t, e) {
                (this.shapes = []), (this.elem = t), this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e), (this.frameId = initialDefaultFrame), (this.closed = !1), (this.k = !1), this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
              }),
              (ShapeModifier.prototype.processKeys = function () {
                this.elem.globalData.frameId !== this.frameId && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties());
              }),
              extendPrototype([DynamicPropertyContainer], ShapeModifier),
              extendPrototype([ShapeModifier], TrimModifier),
              (TrimModifier.prototype.initModifierProperties = function (t, e) {
                (this.s = PropertyFactory.getProp(t, e.s, 0, 0.01, this)), (this.e = PropertyFactory.getProp(t, e.e, 0, 0.01, this)), (this.o = PropertyFactory.getProp(t, e.o, 0, 0, this)), (this.sValue = 0), (this.eValue = 0), (this.getValue = this.processKeys), (this.m = e.m), (this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length);
              }),
              (TrimModifier.prototype.addShapeToModifier = function (t) {
                t.pathsData = [];
              }),
              (TrimModifier.prototype.calculateShapeEdges = function (t, e, r, i, s) {
                var a = [];
                e <= 1 ? a.push({ s: t, e: e }) : t >= 1 ? a.push({ s: t - 1, e: e - 1 }) : (a.push({ s: t, e: 1 }), a.push({ s: 0, e: e - 1 }));
                var n,
                  o,
                  h = [],
                  l = a.length;
                for (n = 0; n < l; n += 1) {
                  var p, f;
                  if ((o = a[n]).e * s < i || o.s * s > i + r);
                  else (p = o.s * s <= i ? 0 : (o.s * s - i) / r), (f = o.e * s >= i + r ? 1 : (o.e * s - i) / r), h.push([p, f]);
                }
                return h.length || h.push([0, 0]), h;
              }),
              (TrimModifier.prototype.releasePathsData = function (t) {
                var e,
                  r = t.length;
                for (e = 0; e < r; e += 1) segments_length_pool.release(t[e]);
                return (t.length = 0), t;
              }),
              (TrimModifier.prototype.processShapes = function (t) {
                var e, r, i;
                if (this._mdf || t) {
                  var s = (this.o.v % 360) / 360;
                  if ((s < 0 && (s += 1), (e = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + s) > (r = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + s))) {
                    var a = e;
                    (e = r), (r = a);
                  }
                  (e = 1e-4 * Math.round(1e4 * e)), (r = 1e-4 * Math.round(1e4 * r)), (this.sValue = e), (this.eValue = r);
                } else (e = this.sValue), (r = this.eValue);
                var n,
                  o,
                  h,
                  l,
                  p,
                  f,
                  m = this.shapes.length,
                  c = 0;
                if (r === e) for (n = 0; n < m; n += 1) this.shapes[n].localShapeCollection.releaseShapes(), (this.shapes[n].shape._mdf = !0), (this.shapes[n].shape.paths = this.shapes[n].localShapeCollection);
                else if ((1 === r && 0 === e) || (0 === r && 1 === e)) {
                  if (this._mdf) for (n = 0; n < m; n += 1) (this.shapes[n].pathsData.length = 0), (this.shapes[n].shape._mdf = !0);
                } else {
                  var d,
                    u,
                    y = [];
                  for (n = 0; n < m; n += 1)
                    if ((d = this.shapes[n]).shape._mdf || this._mdf || t || 2 === this.m) {
                      if (((h = (i = d.shape.paths)._length), (f = 0), !d.shape._mdf && d.pathsData.length)) f = d.totalShapeLength;
                      else {
                        for (l = this.releasePathsData(d.pathsData), o = 0; o < h; o += 1) (p = bez.getSegmentsLength(i.shapes[o])), l.push(p), (f += p.totalLength);
                        (d.totalShapeLength = f), (d.pathsData = l);
                      }
                      (c += f), (d.shape._mdf = !0);
                    } else d.shape.paths = d.localShapeCollection;
                  var g,
                    v = e,
                    b = r,
                    E = 0;
                  for (n = m - 1; n >= 0; n -= 1)
                    if ((d = this.shapes[n]).shape._mdf) {
                      for ((u = d.localShapeCollection).releaseShapes(), 2 === this.m && m > 1 ? ((g = this.calculateShapeEdges(e, r, d.totalShapeLength, E, c)), (E += d.totalShapeLength)) : (g = [[v, b]]), h = g.length, o = 0; o < h; o += 1) {
                        (v = g[o][0]), (b = g[o][1]), (y.length = 0), b <= 1 ? y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength * b }) : v >= 1 ? y.push({ s: d.totalShapeLength * (v - 1), e: d.totalShapeLength * (b - 1) }) : (y.push({ s: d.totalShapeLength * v, e: d.totalShapeLength }), y.push({ s: 0, e: d.totalShapeLength * (b - 1) }));
                        var x = this.addShapes(d, y[0]);
                        if (y[0].s !== y[0].e) {
                          if (y.length > 1)
                            if (d.shape.paths.shapes[d.shape.paths._length - 1].c) {
                              var S = x.pop();
                              this.addPaths(x, u), (x = this.addShapes(d, y[1], S));
                            } else this.addPaths(x, u), (x = this.addShapes(d, y[1]));
                          this.addPaths(x, u);
                        }
                      }
                      d.shape.paths = u;
                    }
                }
              }),
              (TrimModifier.prototype.addPaths = function (t, e) {
                var r,
                  i = t.length;
                for (r = 0; r < i; r += 1) e.addShape(t[r]);
              }),
              (TrimModifier.prototype.addSegment = function (t, e, r, i, s, a, n) {
                s.setXYAt(e[0], e[1], "o", a), s.setXYAt(r[0], r[1], "i", a + 1), n && s.setXYAt(t[0], t[1], "v", a), s.setXYAt(i[0], i[1], "v", a + 1);
              }),
              (TrimModifier.prototype.addSegmentFromArray = function (t, e, r, i) {
                e.setXYAt(t[1], t[5], "o", r), e.setXYAt(t[2], t[6], "i", r + 1), i && e.setXYAt(t[0], t[4], "v", r), e.setXYAt(t[3], t[7], "v", r + 1);
              }),
              (TrimModifier.prototype.addShapes = function (t, e, r) {
                var i,
                  s,
                  a,
                  n,
                  o,
                  h,
                  l,
                  p,
                  f = t.pathsData,
                  m = t.shape.paths.shapes,
                  c = t.shape.paths._length,
                  d = 0,
                  u = [],
                  y = !0;
                for (r ? ((o = r._length), (p = r._length)) : ((r = shape_pool.newElement()), (o = 0), (p = 0)), u.push(r), i = 0; i < c; i += 1) {
                  for (h = f[i].lengths, r.c = m[i].c, a = m[i].c ? h.length : h.length + 1, s = 1; s < a; s += 1)
                    if (d + (n = h[s - 1]).addedLength < e.s) (d += n.addedLength), (r.c = !1);
                    else {
                      if (d > e.e) {
                        r.c = !1;
                        break;
                      }
                      e.s <= d && e.e >= d + n.addedLength ? (this.addSegment(m[i].v[s - 1], m[i].o[s - 1], m[i].i[s], m[i].v[s], r, o, y), (y = !1)) : ((l = bez.getNewSegment(m[i].v[s - 1], m[i].v[s], m[i].o[s - 1], m[i].i[s], (e.s - d) / n.addedLength, (e.e - d) / n.addedLength, h[s - 1])), this.addSegmentFromArray(l, r, o, y), (y = !1), (r.c = !1)), (d += n.addedLength), (o += 1);
                    }
                  if (m[i].c && h.length) {
                    if (((n = h[s - 1]), d <= e.e)) {
                      var g = h[s - 1].addedLength;
                      e.s <= d && e.e >= d + g ? (this.addSegment(m[i].v[s - 1], m[i].o[s - 1], m[i].i[0], m[i].v[0], r, o, y), (y = !1)) : ((l = bez.getNewSegment(m[i].v[s - 1], m[i].v[0], m[i].o[s - 1], m[i].i[0], (e.s - d) / g, (e.e - d) / g, h[s - 1])), this.addSegmentFromArray(l, r, o, y), (y = !1), (r.c = !1));
                    } else r.c = !1;
                    (d += n.addedLength), (o += 1);
                  }
                  if ((r._length && (r.setXYAt(r.v[p][0], r.v[p][1], "i", p), r.setXYAt(r.v[r._length - 1][0], r.v[r._length - 1][1], "o", r._length - 1)), d > e.e)) break;
                  i < c - 1 && ((r = shape_pool.newElement()), (y = !0), u.push(r), (o = 0));
                }
                return u;
              }),
              ShapeModifiers.registerModifier("tm", TrimModifier),
              extendPrototype([ShapeModifier], RoundCornersModifier),
              (RoundCornersModifier.prototype.initModifierProperties = function (t, e) {
                (this.getValue = this.processKeys), (this.rd = PropertyFactory.getProp(t, e.r, 0, null, this)), (this._isAnimated = !!this.rd.effectsSequence.length);
              }),
              (RoundCornersModifier.prototype.processPath = function (t, e) {
                var r = shape_pool.newElement();
                r.c = t.c;
                var i,
                  s,
                  a,
                  n,
                  o,
                  h,
                  l,
                  p,
                  f,
                  m,
                  c,
                  d,
                  u,
                  y = t._length,
                  g = 0;
                for (i = 0; i < y; i += 1)
                  (s = t.v[i]), (n = t.o[i]), (a = t.i[i]), s[0] === n[0] && s[1] === n[1] && s[0] === a[0] && s[1] === a[1] ? ((0 !== i && i !== y - 1) || t.c ? ((o = 0 === i ? t.v[y - 1] : t.v[i - 1]), (l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0), (p = d = s[0] + (o[0] - s[0]) * l), (f = u = s[1] - (s[1] - o[1]) * l), (m = p - (p - s[0]) * roundCorner), (c = f - (f - s[1]) * roundCorner), r.setTripleAt(p, f, m, c, d, u, g), (g += 1), (o = i === y - 1 ? t.v[0] : t.v[i + 1]), (l = (h = Math.sqrt(Math.pow(s[0] - o[0], 2) + Math.pow(s[1] - o[1], 2))) ? Math.min(h / 2, e) / h : 0), (p = m = s[0] + (o[0] - s[0]) * l), (f = c = s[1] + (o[1] - s[1]) * l), (d = p - (p - s[0]) * roundCorner), (u = f - (f - s[1]) * roundCorner), r.setTripleAt(p, f, m, c, d, u, g), (g += 1)) : (r.setTripleAt(s[0], s[1], n[0], n[1], a[0], a[1], g), (g += 1))) : (r.setTripleAt(t.v[i][0], t.v[i][1], t.o[i][0], t.o[i][1], t.i[i][0], t.i[i][1], g), (g += 1));
                return r;
              }),
              (RoundCornersModifier.prototype.processShapes = function (t) {
                var e,
                  r,
                  i,
                  s,
                  a,
                  n,
                  o = this.shapes.length,
                  h = this.rd.v;
                if (0 !== h)
                  for (r = 0; r < o; r += 1) {
                    if (((a = this.shapes[r]).shape.paths, (n = a.localShapeCollection), a.shape._mdf || this._mdf || t)) for (n.releaseShapes(), a.shape._mdf = !0, e = a.shape.paths.shapes, s = a.shape.paths._length, i = 0; i < s; i += 1) n.addShape(this.processPath(e[i], h));
                    a.shape.paths = a.localShapeCollection;
                  }
                this.dynamicProperties.length || (this._mdf = !1);
              }),
              ShapeModifiers.registerModifier("rd", RoundCornersModifier),
              extendPrototype([ShapeModifier], RepeaterModifier),
              (RepeaterModifier.prototype.initModifierProperties = function (t, e) {
                (this.getValue = this.processKeys), (this.c = PropertyFactory.getProp(t, e.c, 0, null, this)), (this.o = PropertyFactory.getProp(t, e.o, 0, null, this)), (this.tr = TransformPropertyFactory.getTransformProperty(t, e.tr, this)), (this.so = PropertyFactory.getProp(t, e.tr.so, 0, 0.01, this)), (this.eo = PropertyFactory.getProp(t, e.tr.eo, 0, 0.01, this)), (this.data = e), this.dynamicProperties.length || this.getValue(!0), (this._isAnimated = !!this.dynamicProperties.length), (this.pMatrix = new Matrix()), (this.rMatrix = new Matrix()), (this.sMatrix = new Matrix()), (this.tMatrix = new Matrix()), (this.matrix = new Matrix());
              }),
              (RepeaterModifier.prototype.applyTransforms = function (t, e, r, i, s, a) {
                var n = a ? -1 : 1,
                  o = i.s.v[0] + (1 - i.s.v[0]) * (1 - s),
                  h = i.s.v[1] + (1 - i.s.v[1]) * (1 - s);
                t.translate(i.p.v[0] * n * s, i.p.v[1] * n * s, i.p.v[2]), e.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), e.rotate(-i.r.v * n * s), e.translate(i.a.v[0], i.a.v[1], i.a.v[2]), r.translate(-i.a.v[0], -i.a.v[1], i.a.v[2]), r.scale(a ? 1 / o : o, a ? 1 / h : h), r.translate(i.a.v[0], i.a.v[1], i.a.v[2]);
              }),
              (RepeaterModifier.prototype.init = function (t, e, r, i) {
                (this.elem = t), (this.arr = e), (this.pos = r), (this.elemsData = i), (this._currentCopies = 0), (this._elements = []), (this._groups = []), (this.frameId = -1), this.initDynamicPropertyContainer(t), this.initModifierProperties(t, e[r]);
                for (; r > 0; ) (r -= 1), this._elements.unshift(e[r]), 1;
                this.dynamicProperties.length ? (this.k = !0) : this.getValue(!0);
              }),
              (RepeaterModifier.prototype.resetElements = function (t) {
                var e,
                  r = t.length;
                for (e = 0; e < r; e += 1) (t[e]._processed = !1), "gr" === t[e].ty && this.resetElements(t[e].it);
              }),
              (RepeaterModifier.prototype.cloneElements = function (t) {
                t.length;
                var e = JSON.parse(JSON.stringify(t));
                return this.resetElements(e), e;
              }),
              (RepeaterModifier.prototype.changeGroupRender = function (t, e) {
                var r,
                  i = t.length;
                for (r = 0; r < i; r += 1) (t[r]._render = e), "gr" === t[r].ty && this.changeGroupRender(t[r].it, e);
              }),
              (RepeaterModifier.prototype.processShapes = function (t) {
                var e, r, i, s, a;
                if (this._mdf || t) {
                  var n,
                    o = Math.ceil(this.c.v);
                  if (this._groups.length < o) {
                    for (; this._groups.length < o; ) {
                      var h = { it: this.cloneElements(this._elements), ty: "gr" };
                      h.it.push({
                        a: { a: 0, ix: 1, k: [0, 0] },
                        nm: "Transform",
                        o: { a: 0, ix: 7, k: 100 },
                        p: { a: 0, ix: 2, k: [0, 0] },
                        r: {
                          a: 1,
                          ix: 6,
                          k: [
                            { s: 0, e: 0, t: 0 },
                            { s: 0, e: 0, t: 1 },
                          ],
                        },
                        s: { a: 0, ix: 3, k: [100, 100] },
                        sa: { a: 0, ix: 5, k: 0 },
                        sk: { a: 0, ix: 4, k: 0 },
                        ty: "tr",
                      }),
                        this.arr.splice(0, 0, h),
                        this._groups.splice(0, 0, h),
                        (this._currentCopies += 1);
                    }
                    this.elem.reloadShapes();
                  }
                  for (a = 0, i = 0; i <= this._groups.length - 1; i += 1) (n = a < o), (this._groups[i]._render = n), this.changeGroupRender(this._groups[i].it, n), (a += 1);
                  this._currentCopies = o;
                  var l = this.o.v,
                    p = l % 1,
                    f = l > 0 ? Math.floor(l) : Math.ceil(l),
                    m = (this.tr.v.props, this.pMatrix.props),
                    c = this.rMatrix.props,
                    d = this.sMatrix.props;
                  this.pMatrix.reset(), this.rMatrix.reset(), this.sMatrix.reset(), this.tMatrix.reset(), this.matrix.reset();
                  var u,
                    y,
                    g = 0;
                  if (l > 0) {
                    for (; g < f; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), (g += 1);
                    p && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, p, !1), (g += p));
                  } else if (l < 0) {
                    for (; g > f; ) this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !0), (g -= 1);
                    p && (this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -p, !0), (g -= p));
                  }
                  for (i = 1 === this.data.m ? 0 : this._currentCopies - 1, s = 1 === this.data.m ? 1 : -1, a = this._currentCopies; a; ) {
                    if (((y = (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props).length), (e[e.length - 1].transform.mProps._mdf = !0), (e[e.length - 1].transform.op._mdf = !0), (e[e.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1))), 0 !== g)) {
                      for (((0 !== i && 1 === s) || (i !== this._currentCopies - 1 && -1 === s)) && this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, !1), this.matrix.transform(c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7], c[8], c[9], c[10], c[11], c[12], c[13], c[14], c[15]), this.matrix.transform(d[0], d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8], d[9], d[10], d[11], d[12], d[13], d[14], d[15]), this.matrix.transform(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8], m[9], m[10], m[11], m[12], m[13], m[14], m[15]), u = 0; u < y; u += 1) r[u] = this.matrix.props[u];
                      this.matrix.reset();
                    } else for (this.matrix.reset(), u = 0; u < y; u += 1) r[u] = this.matrix.props[u];
                    (g += 1), (a -= 1), (i += s);
                  }
                } else for (a = this._currentCopies, i = 0, s = 1; a; ) (r = (e = this.elemsData[i].it)[e.length - 1].transform.mProps.v.props), (e[e.length - 1].transform.mProps._mdf = !1), (e[e.length - 1].transform.op._mdf = !1), (a -= 1), (i += s);
              }),
              (RepeaterModifier.prototype.addShape = function () {}),
              ShapeModifiers.registerModifier("rp", RepeaterModifier),
              (ShapeCollection.prototype.addShape = function (t) {
                this._length === this._maxLength && ((this.shapes = this.shapes.concat(createSizedArray(this._maxLength))), (this._maxLength *= 2)), (this.shapes[this._length] = t), (this._length += 1);
              }),
              (ShapeCollection.prototype.releaseShapes = function () {
                var t;
                for (t = 0; t < this._length; t += 1) shape_pool.release(this.shapes[t]);
                this._length = 0;
              }),
              (DashProperty.prototype.getValue = function (t) {
                if ((this.elem.globalData.frameId !== this.frameId || t) && ((this.frameId = this.elem.globalData.frameId), this.iterateDynamicProperties(), (this._mdf = this._mdf || t), this._mdf)) {
                  var e = 0,
                    r = this.dataProps.length;
                  for ("svg" === this.renderer && (this.dashStr = ""), e = 0; e < r; e += 1) "o" != this.dataProps[e].n ? ("svg" === this.renderer ? (this.dashStr += " " + this.dataProps[e].p.v) : (this.dashArray[e] = this.dataProps[e].p.v)) : (this.dashoffset[0] = this.dataProps[e].p.v);
                }
              }),
              extendPrototype([DynamicPropertyContainer], DashProperty),
              (GradientProperty.prototype.comparePoints = function (t, e) {
                for (var r = 0, i = this.o.length / 2; r < i; ) {
                  if (Math.abs(t[4 * r] - t[4 * e + 2 * r]) > 0.01) return !1;
                  r += 1;
                }
                return !0;
              }),
              (GradientProperty.prototype.checkCollapsable = function () {
                if (this.o.length / 2 != this.c.length / 4) return !1;
                if (this.data.k.k[0].s)
                  for (var t = 0, e = this.data.k.k.length; t < e; ) {
                    if (!this.comparePoints(this.data.k.k[t].s, this.data.p)) return !1;
                    t += 1;
                  }
                else if (!this.comparePoints(this.data.k.k, this.data.p)) return !1;
                return !0;
              }),
              (GradientProperty.prototype.getValue = function (t) {
                if ((this.prop.getValue(), (this._mdf = !1), (this._cmdf = !1), (this._omdf = !1), this.prop._mdf || t)) {
                  var e,
                    r,
                    i,
                    s = 4 * this.data.p;
                  for (e = 0; e < s; e += 1) (r = e % 4 == 0 ? 100 : 255), (i = Math.round(this.prop.v[e] * r)), this.c[e] !== i && ((this.c[e] = i), (this._cmdf = !t));
                  if (this.o.length) for (s = this.prop.v.length, e = 4 * this.data.p; e < s; e += 1) (r = e % 2 == 0 ? 100 : 1), (i = e % 2 == 0 ? Math.round(100 * this.prop.v[e]) : this.prop.v[e]), this.o[e - 4 * this.data.p] !== i && ((this.o[e - 4 * this.data.p] = i), (this._omdf = !t));
                  this._mdf = !t;
                }
              }),
              extendPrototype([DynamicPropertyContainer], GradientProperty);
            var buildShapeString = function (t, e, r, i) {
                if (0 === e) return "";
                var s,
                  a = t.o,
                  n = t.i,
                  o = t.v,
                  h = " M" + i.applyToPointStringified(o[0][0], o[0][1]);
                for (s = 1; s < e; s += 1) h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[s][0], n[s][1]) + " " + i.applyToPointStringified(o[s][0], o[s][1]);
                return r && e && ((h += " C" + i.applyToPointStringified(a[s - 1][0], a[s - 1][1]) + " " + i.applyToPointStringified(n[0][0], n[0][1]) + " " + i.applyToPointStringified(o[0][0], o[0][1])), (h += "z")), h;
              },
              ImagePreloader = (function () {
                var t = (function () {
                  var t = createTag("canvas");
                  (t.width = 1), (t.height = 1);
                  var e = t.getContext("2d");
                  return (e.fillStyle = "rgba(0,0,0,0)"), e.fillRect(0, 0, 1, 1), t;
                })();
                function e() {
                  (this.loadedAssets += 1), this.loadedAssets === this.totalImages && this.imagesLoadedCb && this.imagesLoadedCb(null);
                }
                function r(e) {
                  var r = (function (t, e, r) {
                      var i = "";
                      if (t.e) i = t.p;
                      else if (e) {
                        var s = t.p;
                        -1 !== s.indexOf("images/") && (s = s.split("/")[1]), (i = e + s);
                      } else (i = r), (i += t.u ? t.u : ""), (i += t.p);
                      return i;
                    })(e, this.assetsPath, this.path),
                    i = createTag("img");
                  (i.crossOrigin = "anonymous"),
                    i.addEventListener("load", this._imageLoaded.bind(this), !1),
                    i.addEventListener(
                      "error",
                      function () {
                        (s.img = t), this._imageLoaded();
                      }.bind(this),
                      !1
                    ),
                    (i.src = r);
                  var s = { img: i, assetData: e };
                  return s;
                }
                function i(t, e) {
                  this.imagesLoadedCb = e;
                  var r,
                    i = t.length;
                  for (r = 0; r < i; r += 1) t[r].layers || ((this.totalImages += 1), this.images.push(this._createImageData(t[r])));
                }
                function s(t) {
                  this.path = t || "";
                }
                function a(t) {
                  this.assetsPath = t || "";
                }
                function n(t) {
                  for (var e = 0, r = this.images.length; e < r; ) {
                    if (this.images[e].assetData === t) return this.images[e].img;
                    e += 1;
                  }
                }
                function o() {
                  (this.imagesLoadedCb = null), (this.images.length = 0);
                }
                function h() {
                  return this.totalImages === this.loadedAssets;
                }
                return function () {
                  (this.loadAssets = i), (this.setAssetsPath = a), (this.setPath = s), (this.loaded = h), (this.destroy = o), (this.getImage = n), (this._createImageData = r), (this._imageLoaded = e), (this.assetsPath = ""), (this.path = ""), (this.totalImages = 0), (this.loadedAssets = 0), (this.imagesLoadedCb = null), (this.images = []);
                };
              })(),
              featureSupport = (function () {
                var t = { maskType: !0 };
                return (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\/\d./i.test(navigator.userAgent)) && (t.maskType = !1), t;
              })(),
              filtersFactory = (function () {
                var t = {};
                return (
                  (t.createFilter = function (t) {
                    var e = createNS("filter");
                    return e.setAttribute("id", t), e.setAttribute("filterUnits", "objectBoundingBox"), e.setAttribute("x", "0%"), e.setAttribute("y", "0%"), e.setAttribute("width", "100%"), e.setAttribute("height", "100%"), e;
                  }),
                  (t.createAlphaToLuminanceFilter = function () {
                    var t = createNS("feColorMatrix");
                    return t.setAttribute("type", "matrix"), t.setAttribute("color-interpolation-filters", "sRGB"), t.setAttribute("values", "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"), t;
                  }),
                  t
                );
              })(),
              assetLoader = (function () {
                function t(t) {
                  return t.response && "object" == typeof t.response ? t.response : t.response && "string" == typeof t.response ? JSON.parse(t.response) : t.responseText ? JSON.parse(t.responseText) : void 0;
                }
                return {
                  load: function (e, r, i) {
                    var s,
                      a = new XMLHttpRequest();
                    a.open("GET", e, !0);
                    try {
                      a.responseType = "json";
                    } catch (n) {}
                    a.send(),
                      (a.onreadystatechange = function () {
                        if (4 == a.readyState)
                          if (200 == a.status) (s = t(a)), r(s);
                          else
                            try {
                              (s = t(a)), r(s);
                            } catch (n) {
                              i && i(n);
                            }
                      });
                  },
                };
              })();
            function TextAnimatorProperty(t, e, r) {
              (this._isFirstFrame = !0), (this._hasMaskedPath = !1), (this._frameId = -1), (this._textData = t), (this._renderType = e), (this._elem = r), (this._animatorsData = createSizedArray(this._textData.a.length)), (this._pathData = {}), (this._moreOptions = { alignment: {} }), (this.renderedLetters = []), (this.lettersChangedFlag = !1), this.initDynamicPropertyContainer(r);
            }
            function TextAnimatorDataProperty(t, e, r) {
              var i = { propType: !1 },
                s = PropertyFactory.getProp,
                a = e.a;
              (this.a = { r: a.r ? s(t, a.r, 0, degToRads, r) : i, rx: a.rx ? s(t, a.rx, 0, degToRads, r) : i, ry: a.ry ? s(t, a.ry, 0, degToRads, r) : i, sk: a.sk ? s(t, a.sk, 0, degToRads, r) : i, sa: a.sa ? s(t, a.sa, 0, degToRads, r) : i, s: a.s ? s(t, a.s, 1, 0.01, r) : i, a: a.a ? s(t, a.a, 1, 0, r) : i, o: a.o ? s(t, a.o, 0, 0.01, r) : i, p: a.p ? s(t, a.p, 1, 0, r) : i, sw: a.sw ? s(t, a.sw, 0, 0, r) : i, sc: a.sc ? s(t, a.sc, 1, 0, r) : i, fc: a.fc ? s(t, a.fc, 1, 0, r) : i, fh: a.fh ? s(t, a.fh, 0, 0, r) : i, fs: a.fs ? s(t, a.fs, 0, 0.01, r) : i, fb: a.fb ? s(t, a.fb, 0, 0.01, r) : i, t: a.t ? s(t, a.t, 0, 0, r) : i }), (this.s = TextSelectorProp.getTextSelectorProp(t, e.s, r)), (this.s.t = e.s.t);
            }
            function LetterProps(t, e, r, i, s, a) {
              (this.o = t), (this.sw = e), (this.sc = r), (this.fc = i), (this.m = s), (this.p = a), (this._mdf = { o: !0, sw: !!e, sc: !!r, fc: !!i, m: !0, p: !0 });
            }
            function TextProperty(t, e) {
              (this._frameId = initialDefaultFrame), (this.pv = ""), (this.v = ""), (this.kf = !1), (this._isFirstFrame = !0), (this._mdf = !1), (this.data = e), (this.elem = t), (this.comp = this.elem.comp), (this.keysIndex = 0), (this.canResize = !1), (this.minimumFontSize = 1), (this.effectsSequence = []), (this.currentData = { ascent: 0, boxWidth: this.defaultBoxWidth, f: "", fStyle: "", fWeight: "", fc: "", j: "", justifyOffset: "", l: [], lh: 0, lineWidths: [], ls: "", of: "", s: "", sc: "", sw: 0, t: 0, tr: 0, sz: 0, ps: null, fillColorAnim: !1, strokeColorAnim: !1, strokeWidthAnim: !1, yOffset: 0, finalSize: 0, finalText: [], finalLineHeight: 0, __complete: !1 }), this.copyData(this.currentData, this.data.d.k[0].s), this.searchProperty() || this.completeTextData(this.currentData);
            }
            (TextAnimatorProperty.prototype.searchProperties = function () {
              var t,
                e,
                r = this._textData.a.length,
                i = PropertyFactory.getProp;
              for (t = 0; t < r; t += 1) (e = this._textData.a[t]), (this._animatorsData[t] = new TextAnimatorDataProperty(this._elem, e, this));
              this._textData.p && "m" in this._textData.p ? ((this._pathData = { f: i(this._elem, this._textData.p.f, 0, 0, this), l: i(this._elem, this._textData.p.l, 0, 0, this), r: this._textData.p.r, m: this._elem.maskManager.getMaskProperty(this._textData.p.m) }), (this._hasMaskedPath = !0)) : (this._hasMaskedPath = !1), (this._moreOptions.alignment = i(this._elem, this._textData.m.a, 1, 0, this));
            }),
              (TextAnimatorProperty.prototype.getMeasures = function (t, e) {
                if (((this.lettersChangedFlag = e), this._mdf || this._isFirstFrame || e || (this._hasMaskedPath && this._pathData.m._mdf))) {
                  this._isFirstFrame = !1;
                  var r,
                    i,
                    s,
                    a,
                    n,
                    o,
                    h,
                    l,
                    p,
                    f,
                    m,
                    c,
                    d,
                    u,
                    y,
                    g,
                    v,
                    b,
                    E,
                    x = this._moreOptions.alignment.v,
                    S = this._animatorsData,
                    P = this._textData,
                    _ = this.mHelper,
                    C = this._renderType,
                    A = this.renderedLetters.length,
                    T = (this.data, t.l);
                  if (this._hasMaskedPath) {
                    if (((E = this._pathData.m), !this._pathData.n || this._pathData._mdf)) {
                      var k,
                        M = E.v;
                      for (this._pathData.r && (M = M.reverse()), n = { tLength: 0, segments: [] }, a = M._length - 1, g = 0, s = 0; s < a; s += 1) (k = bez.buildBezierData(M.v[s], M.v[s + 1], [M.o[s][0] - M.v[s][0], M.o[s][1] - M.v[s][1]], [M.i[s + 1][0] - M.v[s + 1][0], M.i[s + 1][1] - M.v[s + 1][1]])), (n.tLength += k.segmentLength), n.segments.push(k), (g += k.segmentLength);
                      (s = a), E.v.c && ((k = bez.buildBezierData(M.v[s], M.v[0], [M.o[s][0] - M.v[s][0], M.o[s][1] - M.v[s][1]], [M.i[0][0] - M.v[0][0], M.i[0][1] - M.v[0][1]])), (n.tLength += k.segmentLength), n.segments.push(k), (g += k.segmentLength)), (this._pathData.pi = n);
                    }
                    if (((n = this._pathData.pi), (o = this._pathData.f.v), (m = 0), (f = 1), (l = 0), (p = !0), (u = n.segments), o < 0 && E.v.c)) for (n.tLength < Math.abs(o) && (o = -Math.abs(o) % n.tLength), f = (d = u[(m = u.length - 1)].points).length - 1; o < 0; ) (o += d[f].partialLength), (f -= 1) < 0 && (f = (d = u[(m -= 1)].points).length - 1);
                    (c = (d = u[m].points)[f - 1]), (y = (h = d[f]).partialLength);
                  }
                  (a = T.length), (r = 0), (i = 0);
                  var D,
                    w,
                    F,
                    I,
                    V = 1.2 * t.finalSize * 0.714,
                    R = !0;
                  F = S.length;
                  var B,
                    L,
                    G,
                    z,
                    N,
                    O,
                    H,
                    j,
                    q,
                    W,
                    Y,
                    X,
                    $,
                    K = -1,
                    J = o,
                    Z = m,
                    U = f,
                    Q = -1,
                    tt = "",
                    et = this.defaultPropsArray;
                  if (2 === t.j || 1 === t.j) {
                    var rt = 0,
                      it = 0,
                      st = 2 === t.j ? -0.5 : -1,
                      at = 0,
                      nt = !0;
                    for (s = 0; s < a; s += 1)
                      if (T[s].n) {
                        for (rt && (rt += it); at < s; ) (T[at].animatorJustifyOffset = rt), (at += 1);
                        (rt = 0), (nt = !0);
                      } else {
                        for (w = 0; w < F; w += 1) (D = S[w].a).t.propType && (nt && 2 === t.j && (it += D.t.v * st), (B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)).length ? (rt += D.t.v * B[0] * st) : (rt += D.t.v * B * st));
                        nt = !1;
                      }
                    for (rt && (rt += it); at < s; ) (T[at].animatorJustifyOffset = rt), (at += 1);
                  }
                  for (s = 0; s < a; s += 1) {
                    if ((_.reset(), (N = 1), T[s].n)) (r = 0), (i += t.yOffset), (i += R ? 1 : 0), (o = J), (R = !1), 0, this._hasMaskedPath && ((f = U), (c = (d = u[(m = Z)].points)[f - 1]), (y = (h = d[f]).partialLength), (l = 0)), ($ = W = X = tt = ""), (et = this.defaultPropsArray);
                    else {
                      if (this._hasMaskedPath) {
                        if (Q !== T[s].line) {
                          switch (t.j) {
                            case 1:
                              o += g - t.lineWidths[T[s].line];
                              break;
                            case 2:
                              o += (g - t.lineWidths[T[s].line]) / 2;
                          }
                          Q = T[s].line;
                        }
                        K !== T[s].ind && (T[K] && (o += T[K].extra), (o += T[s].an / 2), (K = T[s].ind)), (o += (x[0] * T[s].an) / 200);
                        var ot = 0;
                        for (w = 0; w < F; w += 1) (D = S[w].a).p.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)).length ? (ot += D.p.v[0] * B[0]) : (ot += D.p.v[0] * B)), D.a.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)).length ? (ot += D.a.v[0] * B[0]) : (ot += D.a.v[0] * B));
                        for (p = !0; p; ) l + y >= o + ot || !d ? ((v = (o + ot - l) / h.partialLength), (G = c.point[0] + (h.point[0] - c.point[0]) * v), (z = c.point[1] + (h.point[1] - c.point[1]) * v), _.translate((-x[0] * T[s].an) / 200, (-x[1] * V) / 100), (p = !1)) : d && ((l += h.partialLength), (f += 1) >= d.length && ((f = 0), u[(m += 1)] ? (d = u[m].points) : E.v.c ? ((f = 0), (d = u[(m = 0)].points)) : ((l -= h.partialLength), (d = null))), d && ((c = h), (y = (h = d[f]).partialLength)));
                        (L = T[s].an / 2 - T[s].add), _.translate(-L, 0, 0);
                      } else (L = T[s].an / 2 - T[s].add), _.translate(-L, 0, 0), _.translate((-x[0] * T[s].an) / 200, (-x[1] * V) / 100, 0);
                      for (T[s].l / 2, w = 0; w < F; w += 1) (D = S[w].a).t.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)), (0 === r && 0 === t.j) || (this._hasMaskedPath ? (B.length ? (o += D.t.v * B[0]) : (o += D.t.v * B)) : B.length ? (r += D.t.v * B[0]) : (r += D.t.v * B)));
                      for (T[s].l / 2, t.strokeWidthAnim && (H = t.sw || 0), t.strokeColorAnim && (O = t.sc ? [t.sc[0], t.sc[1], t.sc[2]] : [0, 0, 0]), t.fillColorAnim && t.fc && (j = [t.fc[0], t.fc[1], t.fc[2]]), w = 0; w < F; w += 1) (D = S[w].a).a.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)).length ? _.translate(-D.a.v[0] * B[0], -D.a.v[1] * B[1], D.a.v[2] * B[2]) : _.translate(-D.a.v[0] * B, -D.a.v[1] * B, D.a.v[2] * B));
                      for (w = 0; w < F; w += 1) (D = S[w].a).s.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)).length ? _.scale(1 + (D.s.v[0] - 1) * B[0], 1 + (D.s.v[1] - 1) * B[1], 1) : _.scale(1 + (D.s.v[0] - 1) * B, 1 + (D.s.v[1] - 1) * B, 1));
                      for (w = 0; w < F; w += 1) {
                        if (((D = S[w].a), (B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)), D.sk.propType && (B.length ? _.skewFromAxis(-D.sk.v * B[0], D.sa.v * B[1]) : _.skewFromAxis(-D.sk.v * B, D.sa.v * B)), D.r.propType && (B.length ? _.rotateZ(-D.r.v * B[2]) : _.rotateZ(-D.r.v * B)), D.ry.propType && (B.length ? _.rotateY(D.ry.v * B[1]) : _.rotateY(D.ry.v * B)), D.rx.propType && (B.length ? _.rotateX(D.rx.v * B[0]) : _.rotateX(D.rx.v * B)), D.o.propType && (B.length ? (N += (D.o.v * B[0] - N) * B[0]) : (N += (D.o.v * B - N) * B)), t.strokeWidthAnim && D.sw.propType && (B.length ? (H += D.sw.v * B[0]) : (H += D.sw.v * B)), t.strokeColorAnim && D.sc.propType)) for (q = 0; q < 3; q += 1) B.length ? (O[q] = O[q] + (D.sc.v[q] - O[q]) * B[0]) : (O[q] = O[q] + (D.sc.v[q] - O[q]) * B);
                        if (t.fillColorAnim && t.fc) {
                          if (D.fc.propType) for (q = 0; q < 3; q += 1) B.length ? (j[q] = j[q] + (D.fc.v[q] - j[q]) * B[0]) : (j[q] = j[q] + (D.fc.v[q] - j[q]) * B);
                          D.fh.propType && (j = B.length ? addHueToRGB(j, D.fh.v * B[0]) : addHueToRGB(j, D.fh.v * B)), D.fs.propType && (j = B.length ? addSaturationToRGB(j, D.fs.v * B[0]) : addSaturationToRGB(j, D.fs.v * B)), D.fb.propType && (j = B.length ? addBrightnessToRGB(j, D.fb.v * B[0]) : addBrightnessToRGB(j, D.fb.v * B));
                        }
                      }
                      for (w = 0; w < F; w += 1) (D = S[w].a).p.propType && ((B = S[w].s.getMult(T[s].anIndexes[w], P.a[w].s.totalChars)), this._hasMaskedPath ? (B.length ? _.translate(0, D.p.v[1] * B[0], -D.p.v[2] * B[1]) : _.translate(0, D.p.v[1] * B, -D.p.v[2] * B)) : B.length ? _.translate(D.p.v[0] * B[0], D.p.v[1] * B[1], -D.p.v[2] * B[2]) : _.translate(D.p.v[0] * B, D.p.v[1] * B, -D.p.v[2] * B));
                      if ((t.strokeWidthAnim && (W = H < 0 ? 0 : H), t.strokeColorAnim && (Y = "rgb(" + Math.round(255 * O[0]) + "," + Math.round(255 * O[1]) + "," + Math.round(255 * O[2]) + ")"), t.fillColorAnim && t.fc && (X = "rgb(" + Math.round(255 * j[0]) + "," + Math.round(255 * j[1]) + "," + Math.round(255 * j[2]) + ")"), this._hasMaskedPath)) {
                        if ((_.translate(0, -t.ls), _.translate(0, (x[1] * V) / 100 + i, 0), P.p.p)) {
                          b = (h.point[1] - c.point[1]) / (h.point[0] - c.point[0]);
                          var ht = (180 * Math.atan(b)) / Math.PI;
                          h.point[0] < c.point[0] && (ht += 180), _.rotate((-ht * Math.PI) / 180);
                        }
                        _.translate(G, z, 0), (o -= (x[0] * T[s].an) / 200), T[s + 1] && K !== T[s + 1].ind && ((o += T[s].an / 2), (o += (t.tr / 1e3) * t.finalSize));
                      } else {
                        switch ((_.translate(r, i, 0), t.ps && _.translate(t.ps[0], t.ps[1] + t.ascent, 0), t.j)) {
                          case 1:
                            _.translate(T[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[T[s].line]), 0, 0);
                            break;
                          case 2:
                            _.translate(T[s].animatorJustifyOffset + t.justifyOffset + (t.boxWidth - t.lineWidths[T[s].line]) / 2, 0, 0);
                        }
                        _.translate(0, -t.ls), _.translate(L, 0, 0), _.translate((x[0] * T[s].an) / 200, (x[1] * V) / 100, 0), (r += T[s].l + (t.tr / 1e3) * t.finalSize);
                      }
                      "html" === C ? (tt = _.toCSS()) : "svg" === C ? (tt = _.to2dCSS()) : (et = [_.props[0], _.props[1], _.props[2], _.props[3], _.props[4], _.props[5], _.props[6], _.props[7], _.props[8], _.props[9], _.props[10], _.props[11], _.props[12], _.props[13], _.props[14], _.props[15]]), ($ = N);
                    }
                    A <= s ? ((I = new LetterProps($, W, Y, X, tt, et)), this.renderedLetters.push(I), (A += 1), (this.lettersChangedFlag = !0)) : ((I = this.renderedLetters[s]), (this.lettersChangedFlag = I.update($, W, Y, X, tt, et) || this.lettersChangedFlag));
                  }
                }
              }),
              (TextAnimatorProperty.prototype.getValue = function () {
                this._elem.globalData.frameId !== this._frameId && ((this._frameId = this._elem.globalData.frameId), this.iterateDynamicProperties());
              }),
              (TextAnimatorProperty.prototype.mHelper = new Matrix()),
              (TextAnimatorProperty.prototype.defaultPropsArray = []),
              extendPrototype([DynamicPropertyContainer], TextAnimatorProperty),
              (LetterProps.prototype.update = function (t, e, r, i, s, a) {
                (this._mdf.o = !1), (this._mdf.sw = !1), (this._mdf.sc = !1), (this._mdf.fc = !1), (this._mdf.m = !1), (this._mdf.p = !1);
                var n = !1;
                return this.o !== t && ((this.o = t), (this._mdf.o = !0), (n = !0)), this.sw !== e && ((this.sw = e), (this._mdf.sw = !0), (n = !0)), this.sc !== r && ((this.sc = r), (this._mdf.sc = !0), (n = !0)), this.fc !== i && ((this.fc = i), (this._mdf.fc = !0), (n = !0)), this.m !== s && ((this.m = s), (this._mdf.m = !0), (n = !0)), !a.length || (this.p[0] === a[0] && this.p[1] === a[1] && this.p[4] === a[4] && this.p[5] === a[5] && this.p[12] === a[12] && this.p[13] === a[13]) || ((this.p = a), (this._mdf.p = !0), (n = !0)), n;
              }),
              (TextProperty.prototype.defaultBoxWidth = [0, 0]),
              (TextProperty.prototype.copyData = function (t, e) {
                for (var r in e) e.hasOwnProperty(r) && (t[r] = e[r]);
                return t;
              }),
              (TextProperty.prototype.setCurrentData = function (t) {
                t.__complete || this.completeTextData(t), (this.currentData = t), (this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth), (this._mdf = !0);
              }),
              (TextProperty.prototype.searchProperty = function () {
                return this.searchKeyframes();
              }),
              (TextProperty.prototype.searchKeyframes = function () {
                return (this.kf = this.data.d.k.length > 1), this.kf && this.addEffect(this.getKeyframeValue.bind(this)), this.kf;
              }),
              (TextProperty.prototype.addEffect = function (t) {
                this.effectsSequence.push(t), this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.getValue = function (t) {
                if ((this.elem.globalData.frameId !== this.frameId && this.effectsSequence.length) || t) {
                  this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                  var e = this.currentData,
                    r = this.keysIndex;
                  if (this.lock) this.setCurrentData(this.currentData);
                  else {
                    (this.lock = !0), (this._mdf = !1);
                    var i,
                      s = this.effectsSequence.length,
                      a = t || this.data.d.k[this.keysIndex].s;
                    for (i = 0; i < s; i += 1) a = r !== this.keysIndex ? this.effectsSequence[i](a, a.t) : this.effectsSequence[i](this.currentData, a.t);
                    e !== a && this.setCurrentData(a), (this.pv = this.v = this.currentData), (this.lock = !1), (this.frameId = this.elem.globalData.frameId);
                  }
                }
              }),
              (TextProperty.prototype.getKeyframeValue = function () {
                for (var t = this.data.d.k, e = this.elem.comp.renderedFrame, r = 0, i = t.length; r <= i - 1 && (t[r].s, !(r === i - 1 || t[r + 1].t > e)); ) r += 1;
                return this.keysIndex !== r && (this.keysIndex = r), this.data.d.k[this.keysIndex].s;
              }),
              (TextProperty.prototype.buildFinalText = function (t) {
                for (var e, r = FontManager.getCombinedCharacterCodes(), i = [], s = 0, a = t.length; s < a; ) (e = t.charCodeAt(s)), -1 !== r.indexOf(e) ? (i[i.length - 1] += t.charAt(s)) : e >= 55296 && e <= 56319 && (e = t.charCodeAt(s + 1)) >= 56320 && e <= 57343 ? (i.push(t.substr(s, 2)), ++s) : i.push(t.charAt(s)), (s += 1);
                return i;
              }),
              (TextProperty.prototype.completeTextData = function (t) {
                t.__complete = !0;
                var e,
                  r,
                  i,
                  s,
                  a,
                  n,
                  o,
                  h = this.elem.globalData.fontManager,
                  l = this.data,
                  p = [],
                  f = 0,
                  m = l.m.g,
                  c = 0,
                  d = 0,
                  u = 0,
                  y = [],
                  g = 0,
                  v = 0,
                  b = h.getFontByName(t.f),
                  E = 0,
                  x = b.fStyle ? b.fStyle.split(" ") : [],
                  S = "normal",
                  P = "normal";
                for (r = x.length, e = 0; e < r; e += 1)
                  switch (x[e].toLowerCase()) {
                    case "italic":
                      P = "italic";
                      break;
                    case "bold":
                      S = "700";
                      break;
                    case "black":
                      S = "900";
                      break;
                    case "medium":
                      S = "500";
                      break;
                    case "regular":
                    case "normal":
                      S = "400";
                      break;
                    case "light":
                    case "thin":
                      S = "200";
                  }
                (t.fWeight = b.fWeight || S), (t.fStyle = P), (t.finalSize = t.s), (t.finalText = this.buildFinalText(t.t)), (r = t.finalText.length), (t.finalLineHeight = t.lh);
                var _,
                  C = (t.tr / 1e3) * t.finalSize;
                if (t.sz)
                  for (var A, T, k = !0, M = t.sz[0], D = t.sz[1]; k; ) {
                    (A = 0), (g = 0), (r = (T = this.buildFinalText(t.t)).length), (C = (t.tr / 1e3) * t.finalSize);
                    var w = -1;
                    for (e = 0; e < r; e += 1) (_ = T[e].charCodeAt(0)), (i = !1), " " === T[e] ? (w = e) : (13 !== _ && 3 !== _) || ((g = 0), (i = !0), (A += t.finalLineHeight || 1.2 * t.finalSize)), h.chars ? ((o = h.getCharData(T[e], b.fStyle, b.fFamily)), (E = i ? 0 : (o.w * t.finalSize) / 100)) : (E = h.measureText(T[e], t.f, t.finalSize)), g + E > M && " " !== T[e] ? (-1 === w ? (r += 1) : (e = w), (A += t.finalLineHeight || 1.2 * t.finalSize), T.splice(e, w === e ? 1 : 0, "\r"), (w = -1), (g = 0)) : ((g += E), (g += C));
                    (A += (b.ascent * t.finalSize) / 100), this.canResize && t.finalSize > this.minimumFontSize && D < A ? ((t.finalSize -= 1), (t.finalLineHeight = (t.finalSize * t.lh) / t.s)) : ((t.finalText = T), (r = t.finalText.length), (k = !1));
                  }
                (g = -C), (E = 0);
                var F,
                  I = 0;
                for (e = 0; e < r; e += 1)
                  if (((i = !1), (_ = (F = t.finalText[e]).charCodeAt(0)), " " === F ? (s = " ") : 13 === _ || 3 === _ ? ((I = 0), y.push(g), (v = g > v ? g : v), (g = -2 * C), (s = ""), (i = !0), (u += 1)) : (s = t.finalText[e]), h.chars ? ((o = h.getCharData(F, b.fStyle, h.getFontByName(t.f).fFamily)), (E = i ? 0 : (o.w * t.finalSize) / 100)) : (E = h.measureText(s, t.f, t.finalSize)), " " === F ? (I += E + C) : ((g += E + C + I), (I = 0)), p.push({ l: E, an: E, add: c, n: i, anIndexes: [], val: s, line: u, animatorJustifyOffset: 0 }), 2 == m)) {
                    if (((c += E), "" === s || " " === s || e === r - 1)) {
                      for (("" !== s && " " !== s) || (c -= E); d <= e; ) (p[d].an = c), (p[d].ind = f), (p[d].extra = E), (d += 1);
                      (f += 1), (c = 0);
                    }
                  } else if (3 == m) {
                    if (((c += E), "" === s || e === r - 1)) {
                      for ("" === s && (c -= E); d <= e; ) (p[d].an = c), (p[d].ind = f), (p[d].extra = E), (d += 1);
                      (c = 0), (f += 1);
                    }
                  } else (p[f].ind = f), (p[f].extra = 0), (f += 1);
                if (((t.l = p), (v = g > v ? g : v), y.push(g), t.sz)) (t.boxWidth = t.sz[0]), (t.justifyOffset = 0);
                else
                  switch (((t.boxWidth = v), t.j)) {
                    case 1:
                      t.justifyOffset = -t.boxWidth;
                      break;
                    case 2:
                      t.justifyOffset = -t.boxWidth / 2;
                      break;
                    default:
                      t.justifyOffset = 0;
                  }
                t.lineWidths = y;
                var V,
                  R,
                  B = l.a;
                n = B.length;
                var L,
                  G,
                  z = [];
                for (a = 0; a < n; a += 1) {
                  for ((V = B[a]).a.sc && (t.strokeColorAnim = !0), V.a.sw && (t.strokeWidthAnim = !0), (V.a.fc || V.a.fh || V.a.fs || V.a.fb) && (t.fillColorAnim = !0), G = 0, L = V.s.b, e = 0; e < r; e += 1) ((R = p[e]).anIndexes[a] = G), ((1 == L && "" !== R.val) || (2 == L && "" !== R.val && " " !== R.val) || (3 == L && (R.n || " " == R.val || e == r - 1)) || (4 == L && (R.n || e == r - 1))) && (1 === V.s.rn && z.push(G), (G += 1));
                  l.a[a].s.totalChars = G;
                  var N,
                    O = -1;
                  if (1 === V.s.rn) for (e = 0; e < r; e += 1) O != (R = p[e]).anIndexes[a] && ((O = R.anIndexes[a]), (N = z.splice(Math.floor(Math.random() * z.length), 1)[0])), (R.anIndexes[a] = N);
                }
                (t.yOffset = t.finalLineHeight || 1.2 * t.finalSize), (t.ls = t.ls || 0), (t.ascent = (b.ascent * t.finalSize) / 100);
              }),
              (TextProperty.prototype.updateDocumentData = function (t, e) {
                e = void 0 === e ? this.keysIndex : e;
                var r = this.copyData({}, this.data.d.k[e].s);
                (r = this.copyData(r, t)), (this.data.d.k[e].s = r), this.recalculate(e), this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.recalculate = function (t) {
                var e = this.data.d.k[t].s;
                (e.__complete = !1), (this.keysIndex = 0), (this._isFirstFrame = !0), this.getValue(e);
              }),
              (TextProperty.prototype.canResizeFont = function (t) {
                (this.canResize = t), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.setMinimumFontSize = function (t) {
                (this.minimumFontSize = Math.floor(t) || 1), this.recalculate(this.keysIndex), this.elem.addDynamicProperty(this);
              });
            var TextSelectorProp = (function () {
                var t = Math.max,
                  e = Math.min,
                  r = Math.floor;
                function i(t, e) {
                  (this._currentTextLength = -1), (this.k = !1), (this.data = e), (this.elem = t), (this.comp = t.comp), (this.finalS = 0), (this.finalE = 0), this.initDynamicPropertyContainer(t), (this.s = PropertyFactory.getProp(t, e.s || { k: 0 }, 0, 0, this)), (this.e = "e" in e ? PropertyFactory.getProp(t, e.e, 0, 0, this) : { v: 100 }), (this.o = PropertyFactory.getProp(t, e.o || { k: 0 }, 0, 0, this)), (this.xe = PropertyFactory.getProp(t, e.xe || { k: 0 }, 0, 0, this)), (this.ne = PropertyFactory.getProp(t, e.ne || { k: 0 }, 0, 0, this)), (this.a = PropertyFactory.getProp(t, e.a, 0, 0.01, this)), this.dynamicProperties.length || this.getValue();
                }
                return (
                  (i.prototype = {
                    getMult: function (i) {
                      this._currentTextLength !== this.elem.textProperty.currentData.l.length && this.getValue();
                      var s = 0,
                        a = 0,
                        n = 1,
                        o = 1;
                      this.ne.v > 0 ? (s = this.ne.v / 100) : (a = -this.ne.v / 100), this.xe.v > 0 ? (n = 1 - this.xe.v / 100) : (o = 1 + this.xe.v / 100);
                      var h = BezierFactory.getBezierEasing(s, a, n, o).get,
                        l = 0,
                        p = this.finalS,
                        f = this.finalE,
                        m = this.data.sh;
                      if (2 === m) l = h((l = f === p ? (i >= f ? 1 : 0) : t(0, e(0.5 / (f - p) + (i - p) / (f - p), 1))));
                      else if (3 === m) l = h((l = f === p ? (i >= f ? 0 : 1) : 1 - t(0, e(0.5 / (f - p) + (i - p) / (f - p), 1))));
                      else if (4 === m) f === p ? (l = 0) : (l = t(0, e(0.5 / (f - p) + (i - p) / (f - p), 1))) < 0.5 ? (l *= 2) : (l = 1 - 2 * (l - 0.5)), (l = h(l));
                      else if (5 === m) {
                        if (f === p) l = 0;
                        else {
                          var c = f - p,
                            d = -c / 2 + (i = e(t(0, i + 0.5 - p), f - p)),
                            u = c / 2;
                          l = Math.sqrt(1 - (d * d) / (u * u));
                        }
                        l = h(l);
                      } else 6 === m ? (f === p ? (l = 0) : ((i = e(t(0, i + 0.5 - p), f - p)), (l = (1 + Math.cos(Math.PI + (2 * Math.PI * i) / (f - p))) / 2)), (l = h(l))) : (i >= r(p) && (l = t(0, e(i - p < 0 ? e(f, 1) - (p - i) : f - i, 1))), (l = h(l)));
                      return l * this.a.v;
                    },
                    getValue: function (t) {
                      this.iterateDynamicProperties(), (this._mdf = t || this._mdf), (this._currentTextLength = this.elem.textProperty.currentData.l.length || 0), t && 2 === this.data.r && (this.e.v = this._currentTextLength);
                      var e = 2 === this.data.r ? 1 : 100 / this.data.totalChars,
                        r = this.o.v / e,
                        i = this.s.v / e + r,
                        s = this.e.v / e + r;
                      if (i > s) {
                        var a = i;
                        (i = s), (s = a);
                      }
                      (this.finalS = i), (this.finalE = s);
                    },
                  }),
                  extendPrototype([DynamicPropertyContainer], i),
                  {
                    getTextSelectorProp: function (t, e, r) {
                      return new i(t, e, r);
                    },
                  }
                );
              })(),
              pool_factory = function (t, e, r, i) {
                var s = 0,
                  a = t,
                  n = createSizedArray(a);
                function o() {
                  return s ? n[(s -= 1)] : e();
                }
                return {
                  newElement: o,
                  release: function (t) {
                    s === a && ((n = pooling.double(n)), (a *= 2)), r && r(t), (n[s] = t), (s += 1);
                  },
                };
              },
              pooling = (function () {
                return {
                  double: function (t) {
                    return t.concat(createSizedArray(t.length));
                  },
                };
              })(),
              point_pool = (function () {
                return pool_factory(8, function () {
                  return createTypedArray("float32", 2);
                });
              })(),
              shape_pool = (function () {
                var t = pool_factory(
                  4,
                  function () {
                    return new ShapePath();
                  },
                  function (t) {
                    var e,
                      r = t._length;
                    for (e = 0; e < r; e += 1) point_pool.release(t.v[e]), point_pool.release(t.i[e]), point_pool.release(t.o[e]), (t.v[e] = null), (t.i[e] = null), (t.o[e] = null);
                    (t._length = 0), (t.c = !1);
                  }
                );
                return (
                  (t.clone = function (e) {
                    var r,
                      i = t.newElement(),
                      s = void 0 === e._length ? e.v.length : e._length;
                    for (i.setLength(s), i.c = e.c, r = 0; r < s; r += 1) i.setTripleAt(e.v[r][0], e.v[r][1], e.o[r][0], e.o[r][1], e.i[r][0], e.i[r][1], r);
                    return i;
                  }),
                  t
                );
              })(),
              shapeCollection_pool = (function () {
                var t = {
                    newShapeCollection: function () {
                      var t;
                      t = e ? i[(e -= 1)] : new ShapeCollection();
                      return t;
                    },
                    release: function (t) {
                      var s,
                        a = t._length;
                      for (s = 0; s < a; s += 1) shape_pool.release(t.shapes[s]);
                      (t._length = 0), e === r && ((i = pooling.double(i)), (r *= 2));
                      (i[e] = t), (e += 1);
                    },
                  },
                  e = 0,
                  r = 4,
                  i = createSizedArray(r);
                return t;
              })(),
              segments_length_pool = (function () {
                return pool_factory(
                  8,
                  function () {
                    return { lengths: [], totalLength: 0 };
                  },
                  function (t) {
                    var e,
                      r = t.lengths.length;
                    for (e = 0; e < r; e += 1) bezier_length_pool.release(t.lengths[e]);
                    t.lengths.length = 0;
                  }
                );
              })(),
              bezier_length_pool = (function () {
                return pool_factory(8, function () {
                  return { addedLength: 0, percents: createTypedArray("float32", defaultCurveSegments), lengths: createTypedArray("float32", defaultCurveSegments) };
                });
              })();
            function BaseRenderer() {}
            function SVGRenderer(t, e) {
              (this.animationItem = t), (this.layers = null), (this.renderedFrame = -1), (this.svgElement = createNS("svg"));
              var r = "";
              if (e && e.title) {
                var i = createNS("title"),
                  s = createElementID();
                i.setAttribute("id", s), (i.textContent = e.title), this.svgElement.appendChild(i), (r += s);
              }
              if (e && e.description) {
                var a = createNS("desc"),
                  n = createElementID();
                a.setAttribute("id", n), (a.textContent = e.description), this.svgElement.appendChild(a), (r += " " + n);
              }
              r && this.svgElement.setAttribute("aria-labelledby", r);
              var o = createNS("defs");
              this.svgElement.appendChild(o);
              var h = createNS("g");
              this.svgElement.appendChild(h), (this.layerElement = h), (this.renderConfig = { preserveAspectRatio: (e && e.preserveAspectRatio) || "xMidYMid meet", imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice", progressiveLoad: (e && e.progressiveLoad) || !1, hideOnTransparent: !e || !1 !== e.hideOnTransparent, viewBoxOnly: (e && e.viewBoxOnly) || !1, viewBoxSize: (e && e.viewBoxSize) || !1, className: (e && e.className) || "", id: (e && e.id) || "", focusable: e && e.focusable, filterSize: { width: (e && e.filterSize && e.filterSize.width) || "100%", height: (e && e.filterSize && e.filterSize.height) || "100%", x: (e && e.filterSize && e.filterSize.x) || "0%", y: (e && e.filterSize && e.filterSize.y) || "0%" } }), (this.globalData = { _mdf: !1, frameNum: -1, defs: o, renderConfig: this.renderConfig }), (this.elements = []), (this.pendingElements = []), (this.destroyed = !1), (this.rendererType = "svg");
            }
            function CanvasRenderer(t, e) {
              (this.animationItem = t), (this.renderConfig = { clearCanvas: !e || void 0 === e.clearCanvas || e.clearCanvas, context: (e && e.context) || null, progressiveLoad: (e && e.progressiveLoad) || !1, preserveAspectRatio: (e && e.preserveAspectRatio) || "xMidYMid meet", imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice", className: (e && e.className) || "", id: (e && e.id) || "" }), (this.renderConfig.dpr = (e && e.dpr) || 1), this.animationItem.wrapper && (this.renderConfig.dpr = (e && e.dpr) || window.devicePixelRatio || 1), (this.renderedFrame = -1), (this.globalData = { frameNum: -1, _mdf: !1, renderConfig: this.renderConfig, currentGlobalAlpha: -1 }), (this.contextData = new CVContextData()), (this.elements = []), (this.pendingElements = []), (this.transformMat = new Matrix()), (this.completeLayers = !1), (this.rendererType = "canvas");
            }
            function HybridRenderer(t, e) {
              (this.animationItem = t), (this.layers = null), (this.renderedFrame = -1), (this.renderConfig = { className: (e && e.className) || "", imagePreserveAspectRatio: (e && e.imagePreserveAspectRatio) || "xMidYMid slice", hideOnTransparent: !e || !1 !== e.hideOnTransparent, filterSize: { width: (e && e.filterSize && e.filterSize.width) || "400%", height: (e && e.filterSize && e.filterSize.height) || "400%", x: (e && e.filterSize && e.filterSize.x) || "-100%", y: (e && e.filterSize && e.filterSize.y) || "-100%" } }), (this.globalData = { _mdf: !1, frameNum: -1, renderConfig: this.renderConfig }), (this.pendingElements = []), (this.elements = []), (this.threeDElements = []), (this.destroyed = !1), (this.camera = null), (this.supports3d = !0), (this.rendererType = "html");
            }
            function MaskElement(t, e, r) {
              (this.data = t), (this.element = e), (this.globalData = r), (this.storedData = []), (this.masksProperties = this.data.masksProperties || []), (this.maskElement = null);
              var i,
                s = this.globalData.defs,
                a = this.masksProperties ? this.masksProperties.length : 0;
              (this.viewData = createSizedArray(a)), (this.solidPath = "");
              var n,
                o,
                h,
                l,
                p,
                f,
                m,
                c = this.masksProperties,
                d = 0,
                u = [],
                y = createElementID(),
                g = "clipPath",
                v = "clip-path";
              for (i = 0; i < a; i++)
                if (((("a" !== c[i].mode && "n" !== c[i].mode) || c[i].inv || 100 !== c[i].o.k || c[i].o.x) && ((g = "mask"), (v = "mask")), ("s" != c[i].mode && "i" != c[i].mode) || 0 !== d ? (l = null) : ((l = createNS("rect")).setAttribute("fill", "#ffffff"), l.setAttribute("width", this.element.comp.data.w || 0), l.setAttribute("height", this.element.comp.data.h || 0), u.push(l)), (n = createNS("path")), "n" != c[i].mode)) {
                  var b;
                  if (((d += 1), n.setAttribute("fill", "s" === c[i].mode ? "#000000" : "#ffffff"), n.setAttribute("clip-rule", "nonzero"), 0 !== c[i].x.k ? ((g = "mask"), (v = "mask"), (m = PropertyFactory.getProp(this.element, c[i].x, 0, null, this.element)), (b = createElementID()), (p = createNS("filter")).setAttribute("id", b), (f = createNS("feMorphology")).setAttribute("operator", "erode"), f.setAttribute("in", "SourceGraphic"), f.setAttribute("radius", "0"), p.appendChild(f), s.appendChild(p), n.setAttribute("stroke", "s" === c[i].mode ? "#000000" : "#ffffff")) : ((f = null), (m = null)), (this.storedData[i] = { elem: n, x: m, expan: f, lastPath: "", lastOperator: "", filterId: b, lastRadius: 0 }), "i" == c[i].mode)) {
                    h = u.length;
                    var E = createNS("g");
                    for (o = 0; o < h; o += 1) E.appendChild(u[o]);
                    var x = createNS("mask");
                    x.setAttribute("mask-type", "alpha"), x.setAttribute("id", y + "_" + d), x.appendChild(n), s.appendChild(x), E.setAttribute("mask", "url(" + locationHref + "#" + y + "_" + d + ")"), (u.length = 0), u.push(E);
                  } else u.push(n);
                  c[i].inv && !this.solidPath && (this.solidPath = this.createLayerSolidPath()), (this.viewData[i] = { elem: n, lastPath: "", op: PropertyFactory.getProp(this.element, c[i].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, c[i], 3), invRect: l }), this.viewData[i].prop.k || this.drawPath(c[i], this.viewData[i].prop.v, this.viewData[i]);
                } else (this.viewData[i] = { op: PropertyFactory.getProp(this.element, c[i].o, 0, 0.01, this.element), prop: ShapePropertyFactory.getShapeProp(this.element, c[i], 3), elem: n, lastPath: "" }), s.appendChild(n);
              for (this.maskElement = createNS(g), a = u.length, i = 0; i < a; i += 1) this.maskElement.appendChild(u[i]);
              d > 0 && (this.maskElement.setAttribute("id", y), this.element.maskedElement.setAttribute(v, "url(" + locationHref + "#" + y + ")"), s.appendChild(this.maskElement)), this.viewData.length && this.element.addRenderableComponent(this);
            }
            function HierarchyElement() {}
            function FrameElement() {}
            function TransformElement() {}
            function RenderableElement() {}
            function RenderableDOMElement() {}
            function ProcessedElement(t, e) {
              (this.elem = t), (this.pos = e);
            }
            function SVGStyleData(t, e) {
              (this.data = t), (this.type = t.ty), (this.d = ""), (this.lvl = e), (this._mdf = !1), (this.closed = !0 === t.hd), (this.pElem = createNS("path")), (this.msElem = null);
            }
            function SVGShapeData(t, e, r) {
              (this.caches = []), (this.styles = []), (this.transformers = t), (this.lStr = ""), (this.sh = r), (this.lvl = e), (this._isAnimated = !!r.k);
              for (var i = 0, s = t.length; i < s; ) {
                if (t[i].mProps.dynamicProperties.length) {
                  this._isAnimated = !0;
                  break;
                }
                i += 1;
              }
            }
            function SVGTransformData(t, e, r) {
              (this.transform = { mProps: t, op: e, container: r }), (this.elements = []), (this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length);
            }
            function SVGStrokeStyleData(t, e, r) {
              this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)), (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)), (this.d = new DashProperty(t, e.d || {}, "svg", this)), (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)), (this.style = r), (this._isAnimated = !!this._isAnimated);
            }
            function SVGFillStyleData(t, e, r) {
              this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)), (this.c = PropertyFactory.getProp(t, e.c, 1, 255, this)), (this.style = r);
            }
            function SVGGradientFillStyleData(t, e, r) {
              this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), this.initGradientData(t, e, r);
            }
            function SVGGradientStrokeStyleData(t, e, r) {
              this.initDynamicPropertyContainer(t), (this.getValue = this.iterateDynamicProperties), (this.w = PropertyFactory.getProp(t, e.w, 0, null, this)), (this.d = new DashProperty(t, e.d || {}, "svg", this)), this.initGradientData(t, e, r), (this._isAnimated = !!this._isAnimated);
            }
            function ShapeGroupData() {
              (this.it = []), (this.prevViewData = []), (this.gr = createNS("g"));
            }
            (BaseRenderer.prototype.checkLayers = function (t) {
              var e,
                r,
                i = this.layers.length;
              for (this.completeLayers = !0, e = i - 1; e >= 0; e--) this.elements[e] || ((r = this.layers[e]).ip - r.st <= t - this.layers[e].st && r.op - r.st > t - this.layers[e].st && this.buildItem(e)), (this.completeLayers = !!this.elements[e] && this.completeLayers);
              this.checkPendingElements();
            }),
              (BaseRenderer.prototype.createItem = function (t) {
                switch (t.ty) {
                  case 2:
                    return this.createImage(t);
                  case 0:
                    return this.createComp(t);
                  case 1:
                    return this.createSolid(t);
                  case 3:
                    return this.createNull(t);
                  case 4:
                    return this.createShape(t);
                  case 5:
                    return this.createText(t);
                  case 13:
                    return this.createCamera(t);
                }
                return this.createNull(t);
              }),
              (BaseRenderer.prototype.createCamera = function () {
                throw new Error("You're using a 3d camera. Try the html renderer.");
              }),
              (BaseRenderer.prototype.buildAllItems = function () {
                var t,
                  e = this.layers.length;
                for (t = 0; t < e; t += 1) this.buildItem(t);
                this.checkPendingElements();
              }),
              (BaseRenderer.prototype.includeLayers = function (t) {
                this.completeLayers = !1;
                var e,
                  r,
                  i = t.length,
                  s = this.layers.length;
                for (e = 0; e < i; e += 1)
                  for (r = 0; r < s; ) {
                    if (this.layers[r].id == t[e].id) {
                      this.layers[r] = t[e];
                      break;
                    }
                    r += 1;
                  }
              }),
              (BaseRenderer.prototype.setProjectInterface = function (t) {
                this.globalData.projectInterface = t;
              }),
              (BaseRenderer.prototype.initItems = function () {
                this.globalData.progressiveLoad || this.buildAllItems();
              }),
              (BaseRenderer.prototype.buildElementParenting = function (t, e, r) {
                for (var i = this.elements, s = this.layers, a = 0, n = s.length; a < n; ) s[a].ind == e && (i[a] && !0 !== i[a] ? (r.push(i[a]), i[a].setAsParent(), void 0 !== s[a].parent ? this.buildElementParenting(t, s[a].parent, r) : t.setHierarchy(r)) : (this.buildItem(a), this.addPendingElement(t))), (a += 1);
              }),
              (BaseRenderer.prototype.addPendingElement = function (t) {
                this.pendingElements.push(t);
              }),
              (BaseRenderer.prototype.searchExtraCompositions = function (t) {
                var e,
                  r = t.length;
                for (e = 0; e < r; e += 1)
                  if (t[e].xt) {
                    var i = this.createComp(t[e]);
                    i.initExpressions(), this.globalData.projectInterface.registerComposition(i);
                  }
              }),
              (BaseRenderer.prototype.setupGlobalData = function (t, e) {
                (this.globalData.fontManager = new FontManager()), this.globalData.fontManager.addChars(t.chars), this.globalData.fontManager.addFonts(t.fonts, e), (this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem)), (this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem)), (this.globalData.imageLoader = this.animationItem.imagePreloader), (this.globalData.frameId = 0), (this.globalData.frameRate = t.fr), (this.globalData.nm = t.nm), (this.globalData.compSize = { w: t.w, h: t.h });
              }),
              extendPrototype([BaseRenderer], SVGRenderer),
              (SVGRenderer.prototype.createNull = function (t) {
                return new NullElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.createShape = function (t) {
                return new SVGShapeElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.createText = function (t) {
                return new SVGTextElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.createImage = function (t) {
                return new IImageElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.createComp = function (t) {
                return new SVGCompElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.createSolid = function (t) {
                return new ISolidElement(t, this.globalData, this);
              }),
              (SVGRenderer.prototype.configAnimation = function (t) {
                this.svgElement.setAttribute("xmlns", "http://www.w3.org/2000/svg"), this.renderConfig.viewBoxSize ? this.svgElement.setAttribute("viewBox", this.renderConfig.viewBoxSize) : this.svgElement.setAttribute("viewBox", "0 0 " + t.w + " " + t.h), this.renderConfig.viewBoxOnly || (this.svgElement.setAttribute("width", t.w), this.svgElement.setAttribute("height", t.h), (this.svgElement.style.width = "100%"), (this.svgElement.style.height = "100%"), (this.svgElement.style.transform = "translate3d(0,0,0)")), this.renderConfig.className && this.svgElement.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.svgElement.setAttribute("id", this.renderConfig.id), void 0 !== this.renderConfig.focusable && this.svgElement.setAttribute("focusable", this.renderConfig.focusable), this.svgElement.setAttribute("preserveAspectRatio", this.renderConfig.preserveAspectRatio), this.animationItem.wrapper.appendChild(this.svgElement);
                var e = this.globalData.defs;
                this.setupGlobalData(t, e), (this.globalData.progressiveLoad = this.renderConfig.progressiveLoad), (this.data = t);
                var r = createNS("clipPath"),
                  i = createNS("rect");
                i.setAttribute("width", t.w), i.setAttribute("height", t.h), i.setAttribute("x", 0), i.setAttribute("y", 0);
                var s = createElementID();
                r.setAttribute("id", s), r.appendChild(i), this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + s + ")"), e.appendChild(r), (this.layers = t.layers), (this.elements = createSizedArray(t.layers.length));
              }),
              (SVGRenderer.prototype.destroy = function () {
                (this.animationItem.wrapper.innerHTML = ""), (this.layerElement = null), (this.globalData.defs = null);
                var t,
                  e = this.layers ? this.layers.length : 0;
                for (t = 0; t < e; t++) this.elements[t] && this.elements[t].destroy();
                (this.elements.length = 0), (this.destroyed = !0), (this.animationItem = null);
              }),
              (SVGRenderer.prototype.updateContainerSize = function () {}),
              (SVGRenderer.prototype.buildItem = function (t) {
                var e = this.elements;
                if (!e[t] && 99 != this.layers[t].ty) {
                  e[t] = !0;
                  var r = this.createItem(this.layers[t]);
                  (e[t] = r), expressionsPlugin && (0 === this.layers[t].ty && this.globalData.projectInterface.registerComposition(r), r.initExpressions()), this.appendElementInPos(r, t), this.layers[t].tt && (this.elements[t - 1] && !0 !== this.elements[t - 1] ? r.setMatte(e[t - 1].layerId) : (this.buildItem(t - 1), this.addPendingElement(r)));
                }
              }),
              (SVGRenderer.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  var t = this.pendingElements.pop();
                  if ((t.checkParenting(), t.data.tt))
                    for (var e = 0, r = this.elements.length; e < r; ) {
                      if (this.elements[e] === t) {
                        t.setMatte(this.elements[e - 1].layerId);
                        break;
                      }
                      e += 1;
                    }
                }
              }),
              (SVGRenderer.prototype.renderFrame = function (t) {
                if (this.renderedFrame !== t && !this.destroyed) {
                  null === t ? (t = this.renderedFrame) : (this.renderedFrame = t), (this.globalData.frameNum = t), (this.globalData.frameId += 1), (this.globalData.projectInterface.currentFrame = t), (this.globalData._mdf = !1);
                  var e,
                    r = this.layers.length;
                  for (this.completeLayers || this.checkLayers(t), e = r - 1; e >= 0; e--) (this.completeLayers || this.elements[e]) && this.elements[e].prepareFrame(t - this.layers[e].st);
                  if (this.globalData._mdf) for (e = 0; e < r; e += 1) (this.completeLayers || this.elements[e]) && this.elements[e].renderFrame();
                }
              }),
              (SVGRenderer.prototype.appendElementInPos = function (t, e) {
                var r = t.getBaseElement();
                if (r) {
                  for (var i, s = 0; s < e; ) this.elements[s] && !0 !== this.elements[s] && this.elements[s].getBaseElement() && (i = this.elements[s].getBaseElement()), (s += 1);
                  i ? this.layerElement.insertBefore(r, i) : this.layerElement.appendChild(r);
                }
              }),
              (SVGRenderer.prototype.hide = function () {
                this.layerElement.style.display = "none";
              }),
              (SVGRenderer.prototype.show = function () {
                this.layerElement.style.display = "block";
              }),
              extendPrototype([BaseRenderer], CanvasRenderer),
              (CanvasRenderer.prototype.createShape = function (t) {
                return new CVShapeElement(t, this.globalData, this);
              }),
              (CanvasRenderer.prototype.createText = function (t) {
                return new CVTextElement(t, this.globalData, this);
              }),
              (CanvasRenderer.prototype.createImage = function (t) {
                return new CVImageElement(t, this.globalData, this);
              }),
              (CanvasRenderer.prototype.createComp = function (t) {
                return new CVCompElement(t, this.globalData, this);
              }),
              (CanvasRenderer.prototype.createSolid = function (t) {
                return new CVSolidElement(t, this.globalData, this);
              }),
              (CanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull),
              (CanvasRenderer.prototype.ctxTransform = function (t) {
                if (1 !== t[0] || 0 !== t[1] || 0 !== t[4] || 1 !== t[5] || 0 !== t[12] || 0 !== t[13])
                  if (this.renderConfig.clearCanvas) {
                    this.transformMat.cloneFromProps(t);
                    var e = this.contextData.cTr.props;
                    this.transformMat.transform(e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]), this.contextData.cTr.cloneFromProps(this.transformMat.props);
                    var r = this.contextData.cTr.props;
                    this.canvasContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]);
                  } else this.canvasContext.transform(t[0], t[1], t[4], t[5], t[12], t[13]);
              }),
              (CanvasRenderer.prototype.ctxOpacity = function (t) {
                if (!this.renderConfig.clearCanvas) return (this.canvasContext.globalAlpha *= t < 0 ? 0 : t), void (this.globalData.currentGlobalAlpha = this.contextData.cO);
                (this.contextData.cO *= t < 0 ? 0 : t), this.globalData.currentGlobalAlpha !== this.contextData.cO && ((this.canvasContext.globalAlpha = this.contextData.cO), (this.globalData.currentGlobalAlpha = this.contextData.cO));
              }),
              (CanvasRenderer.prototype.reset = function () {
                this.renderConfig.clearCanvas ? this.contextData.reset() : this.canvasContext.restore();
              }),
              (CanvasRenderer.prototype.save = function (t) {
                if (this.renderConfig.clearCanvas) {
                  t && this.canvasContext.save();
                  var e = this.contextData.cTr.props;
                  this.contextData._length <= this.contextData.cArrPos && this.contextData.duplicate();
                  var r,
                    i = this.contextData.saved[this.contextData.cArrPos];
                  for (r = 0; r < 16; r += 1) i[r] = e[r];
                  (this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO), (this.contextData.cArrPos += 1);
                } else this.canvasContext.save();
              }),
              (CanvasRenderer.prototype.restore = function (t) {
                if (this.renderConfig.clearCanvas) {
                  t && (this.canvasContext.restore(), (this.globalData.blendMode = "source-over")), (this.contextData.cArrPos -= 1);
                  var e,
                    r = this.contextData.saved[this.contextData.cArrPos],
                    i = this.contextData.cTr.props;
                  for (e = 0; e < 16; e += 1) i[e] = r[e];
                  this.canvasContext.setTransform(r[0], r[1], r[4], r[5], r[12], r[13]), (r = this.contextData.savedOp[this.contextData.cArrPos]), (this.contextData.cO = r), this.globalData.currentGlobalAlpha !== r && ((this.canvasContext.globalAlpha = r), (this.globalData.currentGlobalAlpha = r));
                } else this.canvasContext.restore();
              }),
              (CanvasRenderer.prototype.configAnimation = function (t) {
                this.animationItem.wrapper ? ((this.animationItem.container = createTag("canvas")), (this.animationItem.container.style.width = "100%"), (this.animationItem.container.style.height = "100%"), (this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style["-webkit-transform"] = "0px 0px 0px"), this.animationItem.wrapper.appendChild(this.animationItem.container), (this.canvasContext = this.animationItem.container.getContext("2d")), this.renderConfig.className && this.animationItem.container.setAttribute("class", this.renderConfig.className), this.renderConfig.id && this.animationItem.container.setAttribute("id", this.renderConfig.id)) : (this.canvasContext = this.renderConfig.context),
                  (this.data = t),
                  (this.layers = t.layers),
                  (this.transformCanvas = { w: t.w, h: t.h, sx: 0, sy: 0, tx: 0, ty: 0 }),
                  this.setupGlobalData(t, document.body),
                  (this.globalData.canvasContext = this.canvasContext),
                  (this.globalData.renderer = this),
                  (this.globalData.isDashed = !1),
                  (this.globalData.progressiveLoad = this.renderConfig.progressiveLoad),
                  (this.globalData.transformCanvas = this.transformCanvas),
                  (this.elements = createSizedArray(t.layers.length)),
                  this.updateContainerSize();
              }),
              (CanvasRenderer.prototype.updateContainerSize = function () {
                var t, e, r, i;
                if ((this.reset(), this.animationItem.wrapper && this.animationItem.container ? ((t = this.animationItem.wrapper.offsetWidth), (e = this.animationItem.wrapper.offsetHeight), this.animationItem.container.setAttribute("width", t * this.renderConfig.dpr), this.animationItem.container.setAttribute("height", e * this.renderConfig.dpr)) : ((t = this.canvasContext.canvas.width * this.renderConfig.dpr), (e = this.canvasContext.canvas.height * this.renderConfig.dpr)), -1 !== this.renderConfig.preserveAspectRatio.indexOf("meet") || -1 !== this.renderConfig.preserveAspectRatio.indexOf("slice"))) {
                  var s = this.renderConfig.preserveAspectRatio.split(" "),
                    a = s[1] || "meet",
                    n = s[0] || "xMidYMid",
                    o = n.substr(0, 4),
                    h = n.substr(4);
                  (r = t / e),
                    ((i = this.transformCanvas.w / this.transformCanvas.h) > r && "meet" === a) || (i < r && "slice" === a) ? ((this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr)), (this.transformCanvas.sy = t / (this.transformCanvas.w / this.renderConfig.dpr))) : ((this.transformCanvas.sx = e / (this.transformCanvas.h / this.renderConfig.dpr)), (this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr))),
                    (this.transformCanvas.tx = "xMid" === o && ((i < r && "meet" === a) || (i > r && "slice" === a)) ? ((t - this.transformCanvas.w * (e / this.transformCanvas.h)) / 2) * this.renderConfig.dpr : "xMax" === o && ((i < r && "meet" === a) || (i > r && "slice" === a)) ? (t - this.transformCanvas.w * (e / this.transformCanvas.h)) * this.renderConfig.dpr : 0),
                    (this.transformCanvas.ty = "YMid" === h && ((i > r && "meet" === a) || (i < r && "slice" === a)) ? ((e - this.transformCanvas.h * (t / this.transformCanvas.w)) / 2) * this.renderConfig.dpr : "YMax" === h && ((i > r && "meet" === a) || (i < r && "slice" === a)) ? (e - this.transformCanvas.h * (t / this.transformCanvas.w)) * this.renderConfig.dpr : 0);
                } else "none" == this.renderConfig.preserveAspectRatio ? ((this.transformCanvas.sx = t / (this.transformCanvas.w / this.renderConfig.dpr)), (this.transformCanvas.sy = e / (this.transformCanvas.h / this.renderConfig.dpr)), (this.transformCanvas.tx = 0), (this.transformCanvas.ty = 0)) : ((this.transformCanvas.sx = this.renderConfig.dpr), (this.transformCanvas.sy = this.renderConfig.dpr), (this.transformCanvas.tx = 0), (this.transformCanvas.ty = 0));
                (this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1]), this.ctxTransform(this.transformCanvas.props), this.canvasContext.beginPath(), this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h), this.canvasContext.closePath(), this.canvasContext.clip(), this.renderFrame(this.renderedFrame, !0);
              }),
              (CanvasRenderer.prototype.destroy = function () {
                var t;
                for (this.renderConfig.clearCanvas && (this.animationItem.wrapper.innerHTML = ""), t = (this.layers ? this.layers.length : 0) - 1; t >= 0; t -= 1) this.elements[t] && this.elements[t].destroy();
                (this.elements.length = 0), (this.globalData.canvasContext = null), (this.animationItem.container = null), (this.destroyed = !0);
              }),
              (CanvasRenderer.prototype.renderFrame = function (t, e) {
                if ((this.renderedFrame !== t || !0 !== this.renderConfig.clearCanvas || e) && !this.destroyed && -1 !== t) {
                  (this.renderedFrame = t), (this.globalData.frameNum = t - this.animationItem._isFirstFrame), (this.globalData.frameId += 1), (this.globalData._mdf = !this.renderConfig.clearCanvas || e), (this.globalData.projectInterface.currentFrame = t);
                  var r,
                    i = this.layers.length;
                  for (this.completeLayers || this.checkLayers(t), r = 0; r < i; r++) (this.completeLayers || this.elements[r]) && this.elements[r].prepareFrame(t - this.layers[r].st);
                  if (this.globalData._mdf) {
                    for (!0 === this.renderConfig.clearCanvas ? this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h) : this.save(), r = i - 1; r >= 0; r -= 1) (this.completeLayers || this.elements[r]) && this.elements[r].renderFrame();
                    !0 !== this.renderConfig.clearCanvas && this.restore();
                  }
                }
              }),
              (CanvasRenderer.prototype.buildItem = function (t) {
                var e = this.elements;
                if (!e[t] && 99 != this.layers[t].ty) {
                  var r = this.createItem(this.layers[t], this, this.globalData);
                  (e[t] = r), r.initExpressions();
                }
              }),
              (CanvasRenderer.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  this.pendingElements.pop().checkParenting();
                }
              }),
              (CanvasRenderer.prototype.hide = function () {
                this.animationItem.container.style.display = "none";
              }),
              (CanvasRenderer.prototype.show = function () {
                this.animationItem.container.style.display = "block";
              }),
              extendPrototype([BaseRenderer], HybridRenderer),
              (HybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem),
              (HybridRenderer.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  this.pendingElements.pop().checkParenting();
                }
              }),
              (HybridRenderer.prototype.appendElementInPos = function (t, e) {
                var r = t.getBaseElement();
                if (r) {
                  var i = this.layers[e];
                  if (i.ddd && this.supports3d) this.addTo3dContainer(r, e);
                  else if (this.threeDElements) this.addTo3dContainer(r, e);
                  else {
                    for (var s, a, n = 0; n < e; ) this.elements[n] && !0 !== this.elements[n] && this.elements[n].getBaseElement && ((a = this.elements[n]), (s = (this.layers[n].ddd ? this.getThreeDContainerByPos(n) : a.getBaseElement()) || s)), (n += 1);
                    s ? (i.ddd && this.supports3d) || this.layerElement.insertBefore(r, s) : (i.ddd && this.supports3d) || this.layerElement.appendChild(r);
                  }
                }
              }),
              (HybridRenderer.prototype.createShape = function (t) {
                return this.supports3d ? new HShapeElement(t, this.globalData, this) : new SVGShapeElement(t, this.globalData, this);
              }),
              (HybridRenderer.prototype.createText = function (t) {
                return this.supports3d ? new HTextElement(t, this.globalData, this) : new SVGTextElement(t, this.globalData, this);
              }),
              (HybridRenderer.prototype.createCamera = function (t) {
                return (this.camera = new HCameraElement(t, this.globalData, this)), this.camera;
              }),
              (HybridRenderer.prototype.createImage = function (t) {
                return this.supports3d ? new HImageElement(t, this.globalData, this) : new IImageElement(t, this.globalData, this);
              }),
              (HybridRenderer.prototype.createComp = function (t) {
                return this.supports3d ? new HCompElement(t, this.globalData, this) : new SVGCompElement(t, this.globalData, this);
              }),
              (HybridRenderer.prototype.createSolid = function (t) {
                return this.supports3d ? new HSolidElement(t, this.globalData, this) : new ISolidElement(t, this.globalData, this);
              }),
              (HybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull),
              (HybridRenderer.prototype.getThreeDContainerByPos = function (t) {
                for (var e = 0, r = this.threeDElements.length; e < r; ) {
                  if (this.threeDElements[e].startPos <= t && this.threeDElements[e].endPos >= t) return this.threeDElements[e].perspectiveElem;
                  e += 1;
                }
              }),
              (HybridRenderer.prototype.createThreeDContainer = function (t, e) {
                var r = createTag("div");
                styleDiv(r);
                var i = createTag("div");
                styleDiv(i), "3d" === e && ((r.style.width = this.globalData.compSize.w + "px"), (r.style.height = this.globalData.compSize.h + "px"), (r.style.transformOrigin = r.style.mozTransformOrigin = r.style.webkitTransformOrigin = "50% 50%"), (i.style.transform = i.style.webkitTransform = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)")), r.appendChild(i);
                var s = { container: i, perspectiveElem: r, startPos: t, endPos: t, type: e };
                return this.threeDElements.push(s), s;
              }),
              (HybridRenderer.prototype.build3dContainers = function () {
                var t,
                  e,
                  r = this.layers.length,
                  i = "";
                for (t = 0; t < r; t += 1) this.layers[t].ddd && 3 !== this.layers[t].ty ? ("3d" !== i && ((i = "3d"), (e = this.createThreeDContainer(t, "3d"))), (e.endPos = Math.max(e.endPos, t))) : ("2d" !== i && ((i = "2d"), (e = this.createThreeDContainer(t, "2d"))), (e.endPos = Math.max(e.endPos, t)));
                for (t = (r = this.threeDElements.length) - 1; t >= 0; t--) this.resizerElem.appendChild(this.threeDElements[t].perspectiveElem);
              }),
              (HybridRenderer.prototype.addTo3dContainer = function (t, e) {
                for (var r = 0, i = this.threeDElements.length; r < i; ) {
                  if (e <= this.threeDElements[r].endPos) {
                    for (var s, a = this.threeDElements[r].startPos; a < e; ) this.elements[a] && this.elements[a].getBaseElement && (s = this.elements[a].getBaseElement()), (a += 1);
                    s ? this.threeDElements[r].container.insertBefore(t, s) : this.threeDElements[r].container.appendChild(t);
                    break;
                  }
                  r += 1;
                }
              }),
              (HybridRenderer.prototype.configAnimation = function (t) {
                var e = createTag("div"),
                  r = this.animationItem.wrapper;
                (e.style.width = t.w + "px"), (e.style.height = t.h + "px"), (this.resizerElem = e), styleDiv(e), (e.style.transformStyle = e.style.webkitTransformStyle = e.style.mozTransformStyle = "flat"), this.renderConfig.className && e.setAttribute("class", this.renderConfig.className), r.appendChild(e), (e.style.overflow = "hidden");
                var i = createNS("svg");
                i.setAttribute("width", "1"), i.setAttribute("height", "1"), styleDiv(i), this.resizerElem.appendChild(i);
                var s = createNS("defs");
                i.appendChild(s), (this.data = t), this.setupGlobalData(t, i), (this.globalData.defs = s), (this.layers = t.layers), (this.layerElement = this.resizerElem), this.build3dContainers(), this.updateContainerSize();
              }),
              (HybridRenderer.prototype.destroy = function () {
                (this.animationItem.wrapper.innerHTML = ""), (this.animationItem.container = null), (this.globalData.defs = null);
                var t,
                  e = this.layers ? this.layers.length : 0;
                for (t = 0; t < e; t++) this.elements[t].destroy();
                (this.elements.length = 0), (this.destroyed = !0), (this.animationItem = null);
              }),
              (HybridRenderer.prototype.updateContainerSize = function () {
                var t,
                  e,
                  r,
                  i,
                  s = this.animationItem.wrapper.offsetWidth,
                  a = this.animationItem.wrapper.offsetHeight,
                  n = s / a;
                this.globalData.compSize.w / this.globalData.compSize.h > n ? ((t = s / this.globalData.compSize.w), (e = s / this.globalData.compSize.w), (r = 0), (i = (a - this.globalData.compSize.h * (s / this.globalData.compSize.w)) / 2)) : ((t = a / this.globalData.compSize.h), (e = a / this.globalData.compSize.h), (r = (s - this.globalData.compSize.w * (a / this.globalData.compSize.h)) / 2), (i = 0)), (this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = "matrix3d(" + t + ",0,0,0,0," + e + ",0,0,0,0,1,0," + r + "," + i + ",0,1)");
              }),
              (HybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame),
              (HybridRenderer.prototype.hide = function () {
                this.resizerElem.style.display = "none";
              }),
              (HybridRenderer.prototype.show = function () {
                this.resizerElem.style.display = "block";
              }),
              (HybridRenderer.prototype.initItems = function () {
                if ((this.buildAllItems(), this.camera)) this.camera.setup();
                else {
                  var t,
                    e = this.globalData.compSize.w,
                    r = this.globalData.compSize.h,
                    i = this.threeDElements.length;
                  for (t = 0; t < i; t += 1) this.threeDElements[t].perspectiveElem.style.perspective = this.threeDElements[t].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(e, 2) + Math.pow(r, 2)) + "px";
                }
              }),
              (HybridRenderer.prototype.searchExtraCompositions = function (t) {
                var e,
                  r = t.length,
                  i = createTag("div");
                for (e = 0; e < r; e += 1)
                  if (t[e].xt) {
                    var s = this.createComp(t[e], i, this.globalData.comp, null);
                    s.initExpressions(), this.globalData.projectInterface.registerComposition(s);
                  }
              }),
              (MaskElement.prototype.getMaskProperty = function (t) {
                return this.viewData[t].prop;
              }),
              (MaskElement.prototype.renderFrame = function (t) {
                var e,
                  r = this.element.finalTransform.mat,
                  i = this.masksProperties.length;
                for (e = 0; e < i; e++)
                  if (((this.viewData[e].prop._mdf || t) && this.drawPath(this.masksProperties[e], this.viewData[e].prop.v, this.viewData[e]), (this.viewData[e].op._mdf || t) && this.viewData[e].elem.setAttribute("fill-opacity", this.viewData[e].op.v), "n" !== this.masksProperties[e].mode && (this.viewData[e].invRect && (this.element.finalTransform.mProp._mdf || t) && this.viewData[e].invRect.setAttribute("transform", r.getInverseMatrix().to2dCSS()), this.storedData[e].x && (this.storedData[e].x._mdf || t)))) {
                    var s = this.storedData[e].expan;
                    this.storedData[e].x.v < 0 ? ("erode" !== this.storedData[e].lastOperator && ((this.storedData[e].lastOperator = "erode"), this.storedData[e].elem.setAttribute("filter", "url(" + locationHref + "#" + this.storedData[e].filterId + ")")), s.setAttribute("radius", -this.storedData[e].x.v)) : ("dilate" !== this.storedData[e].lastOperator && ((this.storedData[e].lastOperator = "dilate"), this.storedData[e].elem.setAttribute("filter", null)), this.storedData[e].elem.setAttribute("stroke-width", 2 * this.storedData[e].x.v));
                  }
              }),
              (MaskElement.prototype.getMaskelement = function () {
                return this.maskElement;
              }),
              (MaskElement.prototype.createLayerSolidPath = function () {
                var t = "M0,0 ";
                return (t += " h" + this.globalData.compSize.w), (t += " v" + this.globalData.compSize.h), (t += " h-" + this.globalData.compSize.w), (t += " v-" + this.globalData.compSize.h + " ");
              }),
              (MaskElement.prototype.drawPath = function (t, e, r) {
                var i,
                  s,
                  a = " M" + e.v[0][0] + "," + e.v[0][1];
                for (s = e._length, i = 1; i < s; i += 1) a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[i][0] + "," + e.i[i][1] + " " + e.v[i][0] + "," + e.v[i][1];
                if ((e.c && s > 1 && (a += " C" + e.o[i - 1][0] + "," + e.o[i - 1][1] + " " + e.i[0][0] + "," + e.i[0][1] + " " + e.v[0][0] + "," + e.v[0][1]), r.lastPath !== a)) {
                  var n = "";
                  r.elem && (e.c && (n = t.inv ? this.solidPath + a : a), r.elem.setAttribute("d", n)), (r.lastPath = a);
                }
              }),
              (MaskElement.prototype.destroy = function () {
                (this.element = null), (this.globalData = null), (this.maskElement = null), (this.data = null), (this.masksProperties = null);
              }),
              (HierarchyElement.prototype = {
                initHierarchy: function () {
                  (this.hierarchy = []), (this._isParent = !1), this.checkParenting();
                },
                setHierarchy: function (t) {
                  this.hierarchy = t;
                },
                setAsParent: function () {
                  this._isParent = !0;
                },
                checkParenting: function () {
                  void 0 !== this.data.parent && this.comp.buildElementParenting(this, this.data.parent, []);
                },
              }),
              (FrameElement.prototype = {
                initFrame: function () {
                  (this._isFirstFrame = !1), (this.dynamicProperties = []), (this._mdf = !1);
                },
                prepareProperties: function (t, e) {
                  var r,
                    i = this.dynamicProperties.length;
                  for (r = 0; r < i; r += 1) (e || (this._isParent && "transform" === this.dynamicProperties[r].propType)) && (this.dynamicProperties[r].getValue(), this.dynamicProperties[r]._mdf && ((this.globalData._mdf = !0), (this._mdf = !0)));
                },
                addDynamicProperty: function (t) {
                  -1 === this.dynamicProperties.indexOf(t) && this.dynamicProperties.push(t);
                },
              }),
              (TransformElement.prototype = {
                initTransform: function () {
                  (this.finalTransform = { mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 }, _matMdf: !1, _opMdf: !1, mat: new Matrix() }), this.data.ao && (this.finalTransform.mProp.autoOriented = !0), this.data.ty;
                },
                renderTransform: function () {
                  if (((this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame), (this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame), this.hierarchy)) {
                    var t,
                      e = this.finalTransform.mat,
                      r = 0,
                      i = this.hierarchy.length;
                    if (!this.finalTransform._matMdf)
                      for (; r < i; ) {
                        if (this.hierarchy[r].finalTransform.mProp._mdf) {
                          this.finalTransform._matMdf = !0;
                          break;
                        }
                        r += 1;
                      }
                    if (this.finalTransform._matMdf) for (t = this.finalTransform.mProp.v.props, e.cloneFromProps(t), r = 0; r < i; r += 1) (t = this.hierarchy[r].finalTransform.mProp.v.props), e.transform(t[0], t[1], t[2], t[3], t[4], t[5], t[6], t[7], t[8], t[9], t[10], t[11], t[12], t[13], t[14], t[15]);
                  }
                },
                globalToLocal: function (t) {
                  var e = [];
                  e.push(this.finalTransform);
                  for (var r = !0, i = this.comp; r; ) i.finalTransform ? (i.data.hasMask && e.splice(0, 0, i.finalTransform), (i = i.comp)) : (r = !1);
                  var s,
                    a,
                    n = e.length;
                  for (s = 0; s < n; s += 1) (a = e[s].mat.applyToPointArray(0, 0, 0)), (t = [t[0] - a[0], t[1] - a[1], 0]);
                  return t;
                },
                mHelper: new Matrix(),
              }),
              (RenderableElement.prototype = {
                initRenderable: function () {
                  (this.isInRange = !1), (this.hidden = !1), (this.isTransparent = !1), (this.renderableComponents = []);
                },
                addRenderableComponent: function (t) {
                  -1 === this.renderableComponents.indexOf(t) && this.renderableComponents.push(t);
                },
                removeRenderableComponent: function (t) {
                  -1 !== this.renderableComponents.indexOf(t) && this.renderableComponents.splice(this.renderableComponents.indexOf(t), 1);
                },
                prepareRenderableFrame: function (t) {
                  this.checkLayerLimits(t);
                },
                checkTransparency: function () {
                  this.finalTransform.mProp.o.v <= 0 ? !this.isTransparent && this.globalData.renderConfig.hideOnTransparent && ((this.isTransparent = !0), this.hide()) : this.isTransparent && ((this.isTransparent = !1), this.show());
                },
                checkLayerLimits: function (t) {
                  this.data.ip - this.data.st <= t && this.data.op - this.data.st > t ? !0 !== this.isInRange && ((this.globalData._mdf = !0), (this._mdf = !0), (this.isInRange = !0), this.show()) : !1 !== this.isInRange && ((this.globalData._mdf = !0), (this.isInRange = !1), this.hide());
                },
                renderRenderable: function () {
                  var t,
                    e = this.renderableComponents.length;
                  for (t = 0; t < e; t += 1) this.renderableComponents[t].renderFrame(this._isFirstFrame);
                },
                sourceRectAtTime: function () {
                  return { top: 0, left: 0, width: 100, height: 100 };
                },
                getLayerSize: function () {
                  return 5 === this.data.ty ? { w: this.data.textData.width, h: this.data.textData.height } : { w: this.data.width, h: this.data.height };
                },
              }),
              extendPrototype(
                [
                  RenderableElement,
                  createProxyFunction({
                    initElement: function (t, e, r) {
                      this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide();
                    },
                    hide: function () {
                      this.hidden || (this.isInRange && !this.isTransparent) || (((this.baseElement || this.layerElement).style.display = "none"), (this.hidden = !0));
                    },
                    show: function () {
                      this.isInRange && !this.isTransparent && (this.data.hd || ((this.baseElement || this.layerElement).style.display = "block"), (this.hidden = !1), (this._isFirstFrame = !0));
                    },
                    renderFrame: function () {
                      this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));
                    },
                    renderInnerContent: function () {},
                    prepareFrame: function (t) {
                      (this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.checkTransparency();
                    },
                    destroy: function () {
                      (this.innerElem = null), this.destroyBaseElement();
                    },
                  }),
                ],
                RenderableDOMElement
              ),
              (SVGStyleData.prototype.reset = function () {
                (this.d = ""), (this._mdf = !1);
              }),
              (SVGShapeData.prototype.setAsAnimated = function () {
                this._isAnimated = !0;
              }),
              extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData),
              extendPrototype([DynamicPropertyContainer], SVGFillStyleData),
              (SVGGradientFillStyleData.prototype.initGradientData = function (t, e, r) {
                (this.o = PropertyFactory.getProp(t, e.o, 0, 0.01, this)), (this.s = PropertyFactory.getProp(t, e.s, 1, null, this)), (this.e = PropertyFactory.getProp(t, e.e, 1, null, this)), (this.h = PropertyFactory.getProp(t, e.h || { k: 0 }, 0, 0.01, this)), (this.a = PropertyFactory.getProp(t, e.a || { k: 0 }, 0, degToRads, this)), (this.g = new GradientProperty(t, e.g, this)), (this.style = r), (this.stops = []), this.setGradientData(r.pElem, e), this.setGradientOpacity(e, r), (this._isAnimated = !!this._isAnimated);
              }),
              (SVGGradientFillStyleData.prototype.setGradientData = function (t, e) {
                var r = createElementID(),
                  i = createNS(1 === e.t ? "linearGradient" : "radialGradient");
                i.setAttribute("id", r), i.setAttribute("spreadMethod", "pad"), i.setAttribute("gradientUnits", "userSpaceOnUse");
                var s,
                  a,
                  n,
                  o = [];
                for (n = 4 * e.g.p, a = 0; a < n; a += 4) (s = createNS("stop")), i.appendChild(s), o.push(s);
                t.setAttribute("gf" === e.ty ? "fill" : "stroke", "url(" + locationHref + "#" + r + ")"), (this.gf = i), (this.cst = o);
              }),
              (SVGGradientFillStyleData.prototype.setGradientOpacity = function (t, e) {
                if (this.g._hasOpacity && !this.g._collapsable) {
                  var r,
                    i,
                    s,
                    a = createNS("mask"),
                    n = createNS("path");
                  a.appendChild(n);
                  var o = createElementID(),
                    h = createElementID();
                  a.setAttribute("id", h);
                  var l = createNS(1 === t.t ? "linearGradient" : "radialGradient");
                  l.setAttribute("id", o), l.setAttribute("spreadMethod", "pad"), l.setAttribute("gradientUnits", "userSpaceOnUse"), (s = t.g.k.k[0].s ? t.g.k.k[0].s.length : t.g.k.k.length);
                  var p = this.stops;
                  for (i = 4 * t.g.p; i < s; i += 2) (r = createNS("stop")).setAttribute("stop-color", "rgb(255,255,255)"), l.appendChild(r), p.push(r);
                  n.setAttribute("gf" === t.ty ? "fill" : "stroke", "url(" + locationHref + "#" + o + ")"), (this.of = l), (this.ms = a), (this.ost = p), (this.maskId = h), (e.msElem = n);
                }
              }),
              extendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData),
              extendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);
            var SVGElementsRenderer = (function () {
              var t = new Matrix(),
                e = new Matrix();
              function r(t, e, r) {
                (r || e.transform.op._mdf) && e.transform.container.setAttribute("opacity", e.transform.op.v), (r || e.transform.mProps._mdf) && e.transform.container.setAttribute("transform", e.transform.mProps.v.to2dCSS());
              }
              function i(r, i, s) {
                var a,
                  n,
                  o,
                  h,
                  l,
                  p,
                  f,
                  m,
                  c,
                  d,
                  u,
                  y = i.styles.length,
                  g = i.lvl;
                for (p = 0; p < y; p += 1) {
                  if (((h = i.sh._mdf || s), i.styles[p].lvl < g)) {
                    for (m = e.reset(), d = g - i.styles[p].lvl, u = i.transformers.length - 1; !h && d > 0; ) (h = i.transformers[u].mProps._mdf || h), d--, u--;
                    if (h) for (d = g - i.styles[p].lvl, u = i.transformers.length - 1; d > 0; ) (c = i.transformers[u].mProps.v.props), m.transform(c[0], c[1], c[2], c[3], c[4], c[5], c[6], c[7], c[8], c[9], c[10], c[11], c[12], c[13], c[14], c[15]), d--, u--;
                  } else m = t;
                  if (((n = (f = i.sh.paths)._length), h)) {
                    for (o = "", a = 0; a < n; a += 1) (l = f.shapes[a]) && l._length && (o += buildShapeString(l, l._length, l.c, m));
                    i.caches[p] = o;
                  } else o = i.caches[p];
                  (i.styles[p].d += !0 === r.hd ? "" : o), (i.styles[p]._mdf = h || i.styles[p]._mdf);
                }
              }
              function s(t, e, r) {
                var i = e.style;
                (e.c._mdf || r) && i.pElem.setAttribute("fill", "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o._mdf || r) && i.pElem.setAttribute("fill-opacity", e.o.v);
              }
              function a(t, e, r) {
                n(t, e, r), o(t, e, r);
              }
              function n(t, e, r) {
                var i,
                  s,
                  a,
                  n,
                  o,
                  h = e.gf,
                  l = e.g._hasOpacity,
                  p = e.s.v,
                  f = e.e.v;
                if (e.o._mdf || r) {
                  var m = "gf" === t.ty ? "fill-opacity" : "stroke-opacity";
                  e.style.pElem.setAttribute(m, e.o.v);
                }
                if (e.s._mdf || r) {
                  var c = 1 === t.t ? "x1" : "cx",
                    d = "x1" === c ? "y1" : "cy";
                  h.setAttribute(c, p[0]), h.setAttribute(d, p[1]), l && !e.g._collapsable && (e.of.setAttribute(c, p[0]), e.of.setAttribute(d, p[1]));
                }
                if (e.g._cmdf || r) {
                  i = e.cst;
                  var u = e.g.c;
                  for (a = i.length, s = 0; s < a; s += 1) (n = i[s]).setAttribute("offset", u[4 * s] + "%"), n.setAttribute("stop-color", "rgb(" + u[4 * s + 1] + "," + u[4 * s + 2] + "," + u[4 * s + 3] + ")");
                }
                if (l && (e.g._omdf || r)) {
                  var y = e.g.o;
                  for (a = (i = e.g._collapsable ? e.cst : e.ost).length, s = 0; s < a; s += 1) (n = i[s]), e.g._collapsable || n.setAttribute("offset", y[2 * s] + "%"), n.setAttribute("stop-opacity", y[2 * s + 1]);
                }
                if (1 === t.t) (e.e._mdf || r) && (h.setAttribute("x2", f[0]), h.setAttribute("y2", f[1]), l && !e.g._collapsable && (e.of.setAttribute("x2", f[0]), e.of.setAttribute("y2", f[1])));
                else if (((e.s._mdf || e.e._mdf || r) && ((o = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2))), h.setAttribute("r", o), l && !e.g._collapsable && e.of.setAttribute("r", o)), e.e._mdf || e.h._mdf || e.a._mdf || r)) {
                  o || (o = Math.sqrt(Math.pow(p[0] - f[0], 2) + Math.pow(p[1] - f[1], 2)));
                  var g = Math.atan2(f[1] - p[1], f[0] - p[0]),
                    v = o * (e.h.v >= 1 ? 0.99 : e.h.v <= -1 ? -0.99 : e.h.v),
                    b = Math.cos(g + e.a.v) * v + p[0],
                    E = Math.sin(g + e.a.v) * v + p[1];
                  h.setAttribute("fx", b), h.setAttribute("fy", E), l && !e.g._collapsable && (e.of.setAttribute("fx", b), e.of.setAttribute("fy", E));
                }
              }
              function o(t, e, r) {
                var i = e.style,
                  s = e.d;
                s && (s._mdf || r) && s.dashStr && (i.pElem.setAttribute("stroke-dasharray", s.dashStr), i.pElem.setAttribute("stroke-dashoffset", s.dashoffset[0])), e.c && (e.c._mdf || r) && i.pElem.setAttribute("stroke", "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o._mdf || r) && i.pElem.setAttribute("stroke-opacity", e.o.v), (e.w._mdf || r) && (i.pElem.setAttribute("stroke-width", e.w.v), i.msElem && i.msElem.setAttribute("stroke-width", e.w.v));
              }
              return {
                createRenderFunction: function (t) {
                  t.ty;
                  switch (t.ty) {
                    case "fl":
                      return s;
                    case "gf":
                      return n;
                    case "gs":
                      return a;
                    case "st":
                      return o;
                    case "sh":
                    case "el":
                    case "rc":
                    case "sr":
                      return i;
                    case "tr":
                      return r;
                  }
                },
              };
            })();
            function ShapeTransformManager() {
              (this.sequences = {}), (this.sequenceList = []), (this.transform_key_count = 0);
            }
            function CVShapeData(t, e, r, i) {
              (this.styledShapes = []), (this.tr = [0, 0, 0, 0, 0, 0]);
              var s = 4;
              "rc" == e.ty ? (s = 5) : "el" == e.ty ? (s = 6) : "sr" == e.ty && (s = 7), (this.sh = ShapePropertyFactory.getShapeProp(t, e, s, t));
              var a,
                n,
                o = r.length;
              for (a = 0; a < o; a += 1) r[a].closed || ((n = { transforms: i.addTransformSequence(r[a].transforms), trNodes: [] }), this.styledShapes.push(n), r[a].elements.push(n));
            }
            function BaseElement() {}
            function NullElement(t, e, r) {
              this.initFrame(), this.initBaseData(t, e, r), this.initFrame(), this.initTransform(t, e, r), this.initHierarchy();
            }
            function SVGBaseElement() {}
            function IShapeElement() {}
            function ITextElement() {}
            function ICompElement() {}
            function IImageElement(t, e, r) {
              (this.assetData = e.getAssetData(t.refId)), this.initElement(t, e, r), (this.sourceRect = { top: 0, left: 0, width: this.assetData.w, height: this.assetData.h });
            }
            function ISolidElement(t, e, r) {
              this.initElement(t, e, r);
            }
            function SVGCompElement(t, e, r) {
              (this.layers = t.layers), (this.supports3d = !0), (this.completeLayers = !1), (this.pendingElements = []), (this.elements = this.layers ? createSizedArray(this.layers.length) : []), this.initElement(t, e, r), (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
            }
            function SVGTextElement(t, e, r) {
              (this.textSpans = []), (this.renderType = "svg"), this.initElement(t, e, r);
            }
            function SVGShapeElement(t, e, r) {
              (this.shapes = []), (this.shapesData = t.shapes), (this.stylesList = []), (this.shapeModifiers = []), (this.itemsData = []), (this.processedElements = []), (this.animatedContents = []), this.initElement(t, e, r), (this.prevViewData = []);
            }
            function SVGTintFilter(t, e) {
              this.filterManager = e;
              var r = createNS("feColorMatrix");
              if ((r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "linearRGB"), r.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), r.setAttribute("result", "f1"), t.appendChild(r), (r = createNS("feColorMatrix")).setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "sRGB"), r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), r.setAttribute("result", "f2"), t.appendChild(r), (this.matrixFilter = r), 100 !== e.effectElements[2].p.v || e.effectElements[2].p.k)) {
                var i,
                  s = createNS("feMerge");
                t.appendChild(s), (i = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), s.appendChild(i), (i = createNS("feMergeNode")).setAttribute("in", "f2"), s.appendChild(i);
              }
            }
            function SVGFillFilter(t, e) {
              this.filterManager = e;
              var r = createNS("feColorMatrix");
              r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "sRGB"), r.setAttribute("values", "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"), t.appendChild(r), (this.matrixFilter = r);
            }
            function SVGGaussianBlurEffect(t, e) {
              t.setAttribute("x", "-100%"), t.setAttribute("y", "-100%"), t.setAttribute("width", "300%"), t.setAttribute("height", "300%"), (this.filterManager = e);
              var r = createNS("feGaussianBlur");
              t.appendChild(r), (this.feGaussianBlur = r);
            }
            function SVGStrokeEffect(t, e) {
              (this.initialized = !1), (this.filterManager = e), (this.elem = t), (this.paths = []);
            }
            function SVGTritoneFilter(t, e) {
              this.filterManager = e;
              var r = createNS("feColorMatrix");
              r.setAttribute("type", "matrix"), r.setAttribute("color-interpolation-filters", "linearRGB"), r.setAttribute("values", "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"), r.setAttribute("result", "f1"), t.appendChild(r);
              var i = createNS("feComponentTransfer");
              i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), (this.matrixFilter = i);
              var s = createNS("feFuncR");
              s.setAttribute("type", "table"), i.appendChild(s), (this.feFuncR = s);
              var a = createNS("feFuncG");
              a.setAttribute("type", "table"), i.appendChild(a), (this.feFuncG = a);
              var n = createNS("feFuncB");
              n.setAttribute("type", "table"), i.appendChild(n), (this.feFuncB = n);
            }
            function SVGProLevelsFilter(t, e) {
              this.filterManager = e;
              var r = this.filterManager.effectElements,
                i = createNS("feComponentTransfer");
              (r[10].p.k || 0 !== r[10].p.v || r[11].p.k || 1 !== r[11].p.v || r[12].p.k || 1 !== r[12].p.v || r[13].p.k || 0 !== r[13].p.v || r[14].p.k || 1 !== r[14].p.v) && (this.feFuncR = this.createFeFunc("feFuncR", i)),
                (r[17].p.k || 0 !== r[17].p.v || r[18].p.k || 1 !== r[18].p.v || r[19].p.k || 1 !== r[19].p.v || r[20].p.k || 0 !== r[20].p.v || r[21].p.k || 1 !== r[21].p.v) && (this.feFuncG = this.createFeFunc("feFuncG", i)),
                (r[24].p.k || 0 !== r[24].p.v || r[25].p.k || 1 !== r[25].p.v || r[26].p.k || 1 !== r[26].p.v || r[27].p.k || 0 !== r[27].p.v || r[28].p.k || 1 !== r[28].p.v) && (this.feFuncB = this.createFeFunc("feFuncB", i)),
                (r[31].p.k || 0 !== r[31].p.v || r[32].p.k || 1 !== r[32].p.v || r[33].p.k || 1 !== r[33].p.v || r[34].p.k || 0 !== r[34].p.v || r[35].p.k || 1 !== r[35].p.v) && (this.feFuncA = this.createFeFunc("feFuncA", i)),
                (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) && (i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), (i = createNS("feComponentTransfer"))),
                (r[3].p.k || 0 !== r[3].p.v || r[4].p.k || 1 !== r[4].p.v || r[5].p.k || 1 !== r[5].p.v || r[6].p.k || 0 !== r[6].p.v || r[7].p.k || 1 !== r[7].p.v) && (i.setAttribute("color-interpolation-filters", "sRGB"), t.appendChild(i), (this.feFuncRComposed = this.createFeFunc("feFuncR", i)), (this.feFuncGComposed = this.createFeFunc("feFuncG", i)), (this.feFuncBComposed = this.createFeFunc("feFuncB", i)));
            }
            function SVGDropShadowEffect(t, e) {
              var r = e.container.globalData.renderConfig.filterSize;
              t.setAttribute("x", r.x), t.setAttribute("y", r.y), t.setAttribute("width", r.width), t.setAttribute("height", r.height), (this.filterManager = e);
              var i = createNS("feGaussianBlur");
              i.setAttribute("in", "SourceAlpha"), i.setAttribute("result", "drop_shadow_1"), i.setAttribute("stdDeviation", "0"), (this.feGaussianBlur = i), t.appendChild(i);
              var s = createNS("feOffset");
              s.setAttribute("dx", "25"), s.setAttribute("dy", "0"), s.setAttribute("in", "drop_shadow_1"), s.setAttribute("result", "drop_shadow_2"), (this.feOffset = s), t.appendChild(s);
              var a = createNS("feFlood");
              a.setAttribute("flood-color", "#00ff00"), a.setAttribute("flood-opacity", "1"), a.setAttribute("result", "drop_shadow_3"), (this.feFlood = a), t.appendChild(a);
              var n = createNS("feComposite");
              n.setAttribute("in", "drop_shadow_3"), n.setAttribute("in2", "drop_shadow_2"), n.setAttribute("operator", "in"), n.setAttribute("result", "drop_shadow_4"), t.appendChild(n);
              var o,
                h = createNS("feMerge");
              t.appendChild(h), (o = createNS("feMergeNode")), h.appendChild(o), (o = createNS("feMergeNode")).setAttribute("in", "SourceGraphic"), (this.feMergeNode = o), (this.feMerge = h), (this.originalNodeAdded = !1), h.appendChild(o);
            }
            (ShapeTransformManager.prototype = {
              addTransformSequence: function (t) {
                var e,
                  r = t.length,
                  i = "_";
                for (e = 0; e < r; e += 1) i += t[e].transform.key + "_";
                var s = this.sequences[i];
                return s || ((s = { transforms: [].concat(t), finalTransform: new Matrix(), _mdf: !1 }), (this.sequences[i] = s), this.sequenceList.push(s)), s;
              },
              processSequence: function (t, e) {
                for (var r, i = 0, s = t.transforms.length, a = e; i < s && !e; ) {
                  if (t.transforms[i].transform.mProps._mdf) {
                    a = !0;
                    break;
                  }
                  i += 1;
                }
                if (a) for (t.finalTransform.reset(), i = s - 1; i >= 0; i -= 1) (r = t.transforms[i].transform.mProps.v.props), t.finalTransform.transform(r[0], r[1], r[2], r[3], r[4], r[5], r[6], r[7], r[8], r[9], r[10], r[11], r[12], r[13], r[14], r[15]);
                t._mdf = a;
              },
              processSequences: function (t) {
                var e,
                  r = this.sequenceList.length;
                for (e = 0; e < r; e += 1) this.processSequence(this.sequenceList[e], t);
              },
              getNewKey: function () {
                return "_" + this.transform_key_count++;
              },
            }),
              (CVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated),
              (BaseElement.prototype = {
                checkMasks: function () {
                  if (!this.data.hasMask) return !1;
                  for (var t = 0, e = this.data.masksProperties.length; t < e; ) {
                    if ("n" !== this.data.masksProperties[t].mode && !1 !== this.data.masksProperties[t].cl) return !0;
                    t += 1;
                  }
                  return !1;
                },
                initExpressions: function () {
                  (this.layerInterface = LayerExpressionInterface(this)), this.data.hasMask && this.maskManager && this.layerInterface.registerMaskInterface(this.maskManager);
                  var t = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);
                  this.layerInterface.registerEffectsInterface(t), 0 === this.data.ty || this.data.xt ? (this.compInterface = CompExpressionInterface(this)) : 4 === this.data.ty ? ((this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface)), (this.layerInterface.content = this.layerInterface.shapeInterface)) : 5 === this.data.ty && ((this.layerInterface.textInterface = TextExpressionInterface(this)), (this.layerInterface.text = this.layerInterface.textInterface));
                },
                setBlendMode: function () {
                  var t = getBlendMode(this.data.bm);
                  (this.baseElement || this.layerElement).style["mix-blend-mode"] = t;
                },
                initBaseData: function (t, e, r) {
                  (this.globalData = e), (this.comp = r), (this.data = t), (this.layerId = createElementID()), this.data.sr || (this.data.sr = 1), (this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties));
                },
                getType: function () {
                  return this.type;
                },
                sourceRectAtTime: function () {},
              }),
              (NullElement.prototype.prepareFrame = function (t) {
                this.prepareProperties(t, !0);
              }),
              (NullElement.prototype.renderFrame = function () {}),
              (NullElement.prototype.getBaseElement = function () {
                return null;
              }),
              (NullElement.prototype.destroy = function () {}),
              (NullElement.prototype.sourceRectAtTime = function () {}),
              (NullElement.prototype.hide = function () {}),
              extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement),
              (SVGBaseElement.prototype = {
                initRendererElement: function () {
                  this.layerElement = createNS("g");
                },
                createContainerElements: function () {
                  (this.matteElement = createNS("g")), (this.transformedElement = this.layerElement), (this.maskedElement = this.layerElement), (this._sizeChanged = !1);
                  var t,
                    e,
                    r,
                    i = null;
                  if (this.data.td) {
                    if (3 == this.data.td || 1 == this.data.td) {
                      var s = createNS("mask");
                      s.setAttribute("id", this.layerId), s.setAttribute("mask-type", 3 == this.data.td ? "luminance" : "alpha"), s.appendChild(this.layerElement), (i = s), this.globalData.defs.appendChild(s), featureSupport.maskType || 1 != this.data.td || (s.setAttribute("mask-type", "luminance"), (t = createElementID()), (e = filtersFactory.createFilter(t)), this.globalData.defs.appendChild(e), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (r = createNS("g")).appendChild(this.layerElement), (i = r), s.appendChild(r), r.setAttribute("filter", "url(" + locationHref + "#" + t + ")"));
                    } else if (2 == this.data.td) {
                      var a = createNS("mask");
                      a.setAttribute("id", this.layerId), a.setAttribute("mask-type", "alpha");
                      var n = createNS("g");
                      a.appendChild(n), (t = createElementID()), (e = filtersFactory.createFilter(t));
                      var o = createNS("feComponentTransfer");
                      o.setAttribute("in", "SourceGraphic"), e.appendChild(o);
                      var h = createNS("feFuncA");
                      h.setAttribute("type", "table"), h.setAttribute("tableValues", "1.0 0.0"), o.appendChild(h), this.globalData.defs.appendChild(e);
                      var l = createNS("rect");
                      l.setAttribute("width", this.comp.data.w), l.setAttribute("height", this.comp.data.h), l.setAttribute("x", "0"), l.setAttribute("y", "0"), l.setAttribute("fill", "#ffffff"), l.setAttribute("opacity", "0"), n.setAttribute("filter", "url(" + locationHref + "#" + t + ")"), n.appendChild(l), n.appendChild(this.layerElement), (i = n), featureSupport.maskType || (a.setAttribute("mask-type", "luminance"), e.appendChild(filtersFactory.createAlphaToLuminanceFilter()), (r = createNS("g")), n.appendChild(l), r.appendChild(this.layerElement), (i = r), n.appendChild(r)), this.globalData.defs.appendChild(a);
                    }
                  } else this.data.tt ? (this.matteElement.appendChild(this.layerElement), (i = this.matteElement), (this.baseElement = this.matteElement)) : (this.baseElement = this.layerElement);
                  if ((this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 === this.data.ty && !this.data.hd)) {
                    var p = createNS("clipPath"),
                      f = createNS("path");
                    f.setAttribute("d", "M0,0 L" + this.data.w + ",0 L" + this.data.w + "," + this.data.h + " L0," + this.data.h + "z");
                    var m = createElementID();
                    if ((p.setAttribute("id", m), p.appendChild(f), this.globalData.defs.appendChild(p), this.checkMasks())) {
                      var c = createNS("g");
                      c.setAttribute("clip-path", "url(" + locationHref + "#" + m + ")"), c.appendChild(this.layerElement), (this.transformedElement = c), i ? i.appendChild(this.transformedElement) : (this.baseElement = this.transformedElement);
                    } else this.layerElement.setAttribute("clip-path", "url(" + locationHref + "#" + m + ")");
                  }
                  0 !== this.data.bm && this.setBlendMode();
                },
                renderElement: function () {
                  this.finalTransform._matMdf && this.transformedElement.setAttribute("transform", this.finalTransform.mat.to2dCSS()), this.finalTransform._opMdf && this.transformedElement.setAttribute("opacity", this.finalTransform.mProp.o.v);
                },
                destroyBaseElement: function () {
                  (this.layerElement = null), (this.matteElement = null), this.maskManager.destroy();
                },
                getBaseElement: function () {
                  return this.data.hd ? null : this.baseElement;
                },
                createRenderableComponents: function () {
                  (this.maskManager = new MaskElement(this.data, this, this.globalData)), (this.renderableEffectsManager = new SVGEffects(this));
                },
                setMatte: function (t) {
                  this.matteElement && this.matteElement.setAttribute("mask", "url(" + locationHref + "#" + t + ")");
                },
              }),
              (IShapeElement.prototype = {
                addShapeToModifiers: function (t) {
                  var e,
                    r = this.shapeModifiers.length;
                  for (e = 0; e < r; e += 1) this.shapeModifiers[e].addShape(t);
                },
                isShapeInAnimatedModifiers: function (t) {
                  for (var e = this.shapeModifiers.length; 0 < e; ) if (this.shapeModifiers[0].isAnimatedWithShape(t)) return !0;
                  return !1;
                },
                renderModifiers: function () {
                  if (this.shapeModifiers.length) {
                    var t,
                      e = this.shapes.length;
                    for (t = 0; t < e; t += 1) this.shapes[t].sh.reset();
                    for (t = (e = this.shapeModifiers.length) - 1; t >= 0; t -= 1) this.shapeModifiers[t].processShapes(this._isFirstFrame);
                  }
                },
                lcEnum: { 1: "butt", 2: "round", 3: "square" },
                ljEnum: { 1: "miter", 2: "round", 3: "bevel" },
                searchProcessedElement: function (t) {
                  for (var e = this.processedElements, r = 0, i = e.length; r < i; ) {
                    if (e[r].elem === t) return e[r].pos;
                    r += 1;
                  }
                  return 0;
                },
                addProcessedElement: function (t, e) {
                  for (var r = this.processedElements, i = r.length; i; ) if (r[(i -= 1)].elem === t) return void (r[i].pos = e);
                  r.push(new ProcessedElement(t, e));
                },
                prepareFrame: function (t) {
                  this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange);
                },
              }),
              (ITextElement.prototype.initElement = function (t, e, r) {
                (this.lettersChangedFlag = !0), this.initFrame(), this.initBaseData(t, e, r), (this.textProperty = new TextProperty(this, t.t, this.dynamicProperties)), (this.textAnimator = new TextAnimatorProperty(t.t, this.renderType, this)), this.initTransform(t, e, r), this.initHierarchy(), this.initRenderable(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), this.createContent(), this.hide(), this.textAnimator.searchProperties(this.dynamicProperties);
              }),
              (ITextElement.prototype.prepareFrame = function (t) {
                (this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), (this.textProperty._mdf || this.textProperty._isFirstFrame) && (this.buildNewText(), (this.textProperty._isFirstFrame = !1), (this.textProperty._mdf = !1));
              }),
              (ITextElement.prototype.createPathShape = function (t, e) {
                var r,
                  i,
                  s = e.length,
                  a = "";
                for (r = 0; r < s; r += 1) (i = e[r].ks.k), (a += buildShapeString(i, i.i.length, !0, t));
                return a;
              }),
              (ITextElement.prototype.updateDocumentData = function (t, e) {
                this.textProperty.updateDocumentData(t, e);
              }),
              (ITextElement.prototype.canResizeFont = function (t) {
                this.textProperty.canResizeFont(t);
              }),
              (ITextElement.prototype.setMinimumFontSize = function (t) {
                this.textProperty.setMinimumFontSize(t);
              }),
              (ITextElement.prototype.applyTextPropertiesToMatrix = function (t, e, r, i, s) {
                switch ((t.ps && e.translate(t.ps[0], t.ps[1] + t.ascent, 0), e.translate(0, -t.ls, 0), t.j)) {
                  case 1:
                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]), 0, 0);
                    break;
                  case 2:
                    e.translate(t.justifyOffset + (t.boxWidth - t.lineWidths[r]) / 2, 0, 0);
                }
                e.translate(i, s, 0);
              }),
              (ITextElement.prototype.buildColor = function (t) {
                return "rgb(" + Math.round(255 * t[0]) + "," + Math.round(255 * t[1]) + "," + Math.round(255 * t[2]) + ")";
              }),
              (ITextElement.prototype.emptyProp = new LetterProps()),
              (ITextElement.prototype.destroy = function () {}),
              extendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement),
              (ICompElement.prototype.initElement = function (t, e, r) {
                this.initFrame(), this.initBaseData(t, e, r), this.initTransform(t, e, r), this.initRenderable(), this.initHierarchy(), this.initRendererElement(), this.createContainerElements(), this.createRenderableComponents(), (!this.data.xt && e.progressiveLoad) || this.buildAllItems(), this.hide();
              }),
              (ICompElement.prototype.prepareFrame = function (t) {
                if (((this._mdf = !1), this.prepareRenderableFrame(t), this.prepareProperties(t, this.isInRange), this.isInRange || this.data.xt)) {
                  if (this.tm._placeholder) this.renderedFrame = t / this.data.sr;
                  else {
                    var e = this.tm.v;
                    e === this.data.op && (e = this.data.op - 1), (this.renderedFrame = e);
                  }
                  var r,
                    i = this.elements.length;
                  for (this.completeLayers || this.checkLayers(this.renderedFrame), r = i - 1; r >= 0; r -= 1) (this.completeLayers || this.elements[r]) && (this.elements[r].prepareFrame(this.renderedFrame - this.layers[r].st), this.elements[r]._mdf && (this._mdf = !0));
                }
              }),
              (ICompElement.prototype.renderInnerContent = function () {
                var t,
                  e = this.layers.length;
                for (t = 0; t < e; t += 1) (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
              }),
              (ICompElement.prototype.setElements = function (t) {
                this.elements = t;
              }),
              (ICompElement.prototype.getElements = function () {
                return this.elements;
              }),
              (ICompElement.prototype.destroyElements = function () {
                var t,
                  e = this.layers.length;
                for (t = 0; t < e; t += 1) this.elements[t] && this.elements[t].destroy();
              }),
              (ICompElement.prototype.destroy = function () {
                this.destroyElements(), this.destroyBaseElement();
              }),
              extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement),
              (IImageElement.prototype.createContent = function () {
                var t = this.globalData.getAssetsPath(this.assetData);
                (this.innerElem = createNS("image")), this.innerElem.setAttribute("width", this.assetData.w + "px"), this.innerElem.setAttribute("height", this.assetData.h + "px"), this.innerElem.setAttribute("preserveAspectRatio", this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio), this.innerElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.innerElem);
              }),
              (IImageElement.prototype.sourceRectAtTime = function () {
                return this.sourceRect;
              }),
              extendPrototype([IImageElement], ISolidElement),
              (ISolidElement.prototype.createContent = function () {
                var t = createNS("rect");
                t.setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.layerElement.appendChild(t);
              }),
              extendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement),
              extendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextElement),
              (SVGTextElement.prototype.createContent = function () {
                this.data.singleShape && !this.globalData.fontManager.chars && (this.textContainer = createNS("text"));
              }),
              (SVGTextElement.prototype.buildTextContents = function (t) {
                for (var e = 0, r = t.length, i = [], s = ""; e < r; ) t[e] === String.fromCharCode(13) || t[e] === String.fromCharCode(3) ? (i.push(s), (s = "")) : (s += t[e]), (e += 1);
                return i.push(s), i;
              }),
              (SVGTextElement.prototype.buildNewText = function () {
                var t,
                  e,
                  r = this.textProperty.currentData;
                (this.renderedLetters = createSizedArray(r ? r.l.length : 0)), r.fc ? this.layerElement.setAttribute("fill", this.buildColor(r.fc)) : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"), r.sc && (this.layerElement.setAttribute("stroke", this.buildColor(r.sc)), this.layerElement.setAttribute("stroke-width", r.sw)), this.layerElement.setAttribute("font-size", r.finalSize);
                var i = this.globalData.fontManager.getFontByName(r.f);
                if (i.fClass) this.layerElement.setAttribute("class", i.fClass);
                else {
                  this.layerElement.setAttribute("font-family", i.fFamily);
                  var s = r.fWeight,
                    a = r.fStyle;
                  this.layerElement.setAttribute("font-style", a), this.layerElement.setAttribute("font-weight", s);
                }
                this.layerElement.setAttribute("aria-label", r.t);
                var n,
                  o = r.l || [],
                  h = !!this.globalData.fontManager.chars;
                e = o.length;
                var l,
                  p = this.mHelper,
                  f = "",
                  m = this.data.singleShape,
                  c = 0,
                  d = 0,
                  u = !0,
                  y = (r.tr / 1e3) * r.finalSize;
                if (!m || h || r.sz) {
                  var g,
                    v,
                    b = this.textSpans.length;
                  for (t = 0; t < e; t += 1)
                    (h && m && 0 !== t) || ((n = b > t ? this.textSpans[t] : createNS(h ? "path" : "text")), b <= t && (n.setAttribute("stroke-linecap", "butt"), n.setAttribute("stroke-linejoin", "round"), n.setAttribute("stroke-miterlimit", "4"), (this.textSpans[t] = n), this.layerElement.appendChild(n)), (n.style.display = "inherit")),
                      p.reset(),
                      p.scale(r.finalSize / 100, r.finalSize / 100),
                      m && (o[t].n && ((c = -y), (d += r.yOffset), (d += u ? 1 : 0), (u = !1)), this.applyTextPropertiesToMatrix(r, p, o[t].line, c, d), (c += o[t].l || 0), (c += y)),
                      h ? ((l = (g = ((v = this.globalData.fontManager.getCharData(r.finalText[t], i.fStyle, this.globalData.fontManager.getFontByName(r.f).fFamily)) && v.data) || {}).shapes ? g.shapes[0].it : []), m ? (f += this.createPathShape(p, l)) : n.setAttribute("d", this.createPathShape(p, l))) : (m && n.setAttribute("transform", "translate(" + p.props[12] + "," + p.props[13] + ")"), (n.textContent = o[t].val), n.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"));
                  m && n && n.setAttribute("d", f);
                } else {
                  var E = this.textContainer,
                    x = "start";
                  switch (r.j) {
                    case 1:
                      x = "end";
                      break;
                    case 2:
                      x = "middle";
                  }
                  E.setAttribute("text-anchor", x), E.setAttribute("letter-spacing", y);
                  var S = this.buildTextContents(r.finalText);
                  for (e = S.length, d = r.ps ? r.ps[1] + r.ascent : 0, t = 0; t < e; t += 1) ((n = this.textSpans[t] || createNS("tspan")).textContent = S[t]), n.setAttribute("x", 0), n.setAttribute("y", d), (n.style.display = "inherit"), E.appendChild(n), (this.textSpans[t] = n), (d += r.finalLineHeight);
                  this.layerElement.appendChild(E);
                }
                for (; t < this.textSpans.length; ) (this.textSpans[t].style.display = "none"), (t += 1);
                this._sizeChanged = !0;
              }),
              (SVGTextElement.prototype.sourceRectAtTime = function (t) {
                if ((this.prepareFrame(this.comp.renderedFrame - this.data.st), this.renderInnerContent(), this._sizeChanged)) {
                  this._sizeChanged = !1;
                  var e = this.layerElement.getBBox();
                  this.bbox = { top: e.y, left: e.x, width: e.width, height: e.height };
                }
                return this.bbox;
              }),
              (SVGTextElement.prototype.renderInnerContent = function () {
                if (!this.data.singleShape && (this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                  var t, e;
                  this._sizeChanged = !0;
                  var r,
                    i,
                    s = this.textAnimator.renderedLetters,
                    a = this.textProperty.currentData.l;
                  for (e = a.length, t = 0; t < e; t += 1) a[t].n || ((r = s[t]), (i = this.textSpans[t]), r._mdf.m && i.setAttribute("transform", r.m), r._mdf.o && i.setAttribute("opacity", r.o), r._mdf.sw && i.setAttribute("stroke-width", r.sw), r._mdf.sc && i.setAttribute("stroke", r.sc), r._mdf.fc && i.setAttribute("fill", r.fc));
                }
              }),
              extendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement),
              (SVGShapeElement.prototype.initSecondaryElement = function () {}),
              (SVGShapeElement.prototype.identityMatrix = new Matrix()),
              (SVGShapeElement.prototype.buildExpressionInterface = function () {}),
              (SVGShapeElement.prototype.createContent = function () {
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes();
              }),
              (SVGShapeElement.prototype.filterUniqueShapes = function () {
                var t,
                  e,
                  r,
                  i,
                  s = this.shapes.length,
                  a = this.stylesList.length,
                  n = [],
                  o = !1;
                for (r = 0; r < a; r += 1) {
                  for (i = this.stylesList[r], o = !1, n.length = 0, t = 0; t < s; t += 1) -1 !== (e = this.shapes[t]).styles.indexOf(i) && (n.push(e), (o = e._isAnimated || o));
                  n.length > 1 && o && this.setShapesAsAnimated(n);
                }
              }),
              (SVGShapeElement.prototype.setShapesAsAnimated = function (t) {
                var e,
                  r = t.length;
                for (e = 0; e < r; e += 1) t[e].setAsAnimated();
              }),
              (SVGShapeElement.prototype.createStyleElement = function (t, e) {
                var r,
                  i = new SVGStyleData(t, e),
                  s = i.pElem;
                if ("st" === t.ty) r = new SVGStrokeStyleData(this, t, i);
                else if ("fl" === t.ty) r = new SVGFillStyleData(this, t, i);
                else if ("gf" === t.ty || "gs" === t.ty) {
                  (r = new ("gf" === t.ty ? SVGGradientFillStyleData : SVGGradientStrokeStyleData)(this, t, i)), this.globalData.defs.appendChild(r.gf), r.maskId && (this.globalData.defs.appendChild(r.ms), this.globalData.defs.appendChild(r.of), s.setAttribute("mask", "url(" + locationHref + "#" + r.maskId + ")"));
                }
                return ("st" !== t.ty && "gs" !== t.ty) || (s.setAttribute("stroke-linecap", this.lcEnum[t.lc] || "round"), s.setAttribute("stroke-linejoin", this.ljEnum[t.lj] || "round"), s.setAttribute("fill-opacity", "0"), 1 === t.lj && s.setAttribute("stroke-miterlimit", t.ml)), 2 === t.r && s.setAttribute("fill-rule", "evenodd"), t.ln && s.setAttribute("id", t.ln), t.cl && s.setAttribute("class", t.cl), t.bm && (s.style["mix-blend-mode"] = getBlendMode(t.bm)), this.stylesList.push(i), this.addToAnimatedContents(t, r), r;
              }),
              (SVGShapeElement.prototype.createGroupElement = function (t) {
                var e = new ShapeGroupData();
                return t.ln && e.gr.setAttribute("id", t.ln), t.cl && e.gr.setAttribute("class", t.cl), t.bm && (e.gr.style["mix-blend-mode"] = getBlendMode(t.bm)), e;
              }),
              (SVGShapeElement.prototype.createTransformElement = function (t, e) {
                var r = TransformPropertyFactory.getTransformProperty(this, t, this),
                  i = new SVGTransformData(r, r.o, e);
                return this.addToAnimatedContents(t, i), i;
              }),
              (SVGShapeElement.prototype.createShapeElement = function (t, e, r) {
                var i = 4;
                "rc" === t.ty ? (i = 5) : "el" === t.ty ? (i = 6) : "sr" === t.ty && (i = 7);
                var s = new SVGShapeData(e, r, ShapePropertyFactory.getShapeProp(this, t, i, this));
                return this.shapes.push(s), this.addShapeToModifiers(s), this.addToAnimatedContents(t, s), s;
              }),
              (SVGShapeElement.prototype.addToAnimatedContents = function (t, e) {
                for (var r = 0, i = this.animatedContents.length; r < i; ) {
                  if (this.animatedContents[r].element === e) return;
                  r += 1;
                }
                this.animatedContents.push({ fn: SVGElementsRenderer.createRenderFunction(t), element: e, data: t });
              }),
              (SVGShapeElement.prototype.setElementStyles = function (t) {
                var e,
                  r = t.styles,
                  i = this.stylesList.length;
                for (e = 0; e < i; e += 1) this.stylesList[e].closed || r.push(this.stylesList[e]);
              }),
              (SVGShapeElement.prototype.reloadShapes = function () {
                this._isFirstFrame = !0;
                var t,
                  e = this.itemsData.length;
                for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], !0), this.filterUniqueShapes(), e = this.dynamicProperties.length, t = 0; t < e; t += 1) this.dynamicProperties[t].getValue();
                this.renderModifiers();
              }),
              (SVGShapeElement.prototype.searchShapes = function (t, e, r, i, s, a, n) {
                var o,
                  h,
                  l,
                  p,
                  f,
                  m,
                  c = [].concat(a),
                  d = t.length - 1,
                  u = [],
                  y = [];
                for (o = d; o >= 0; o -= 1) {
                  if (((m = this.searchProcessedElement(t[o])) ? (e[o] = r[m - 1]) : (t[o]._render = n), "fl" == t[o].ty || "st" == t[o].ty || "gf" == t[o].ty || "gs" == t[o].ty)) m ? (e[o].style.closed = !1) : (e[o] = this.createStyleElement(t[o], s)), t[o]._render && i.appendChild(e[o].style.pElem), u.push(e[o].style);
                  else if ("gr" == t[o].ty) {
                    if (m) for (l = e[o].it.length, h = 0; h < l; h += 1) e[o].prevViewData[h] = e[o].it[h];
                    else e[o] = this.createGroupElement(t[o]);
                    this.searchShapes(t[o].it, e[o].it, e[o].prevViewData, e[o].gr, s + 1, c, n), t[o]._render && i.appendChild(e[o].gr);
                  } else "tr" == t[o].ty ? (m || (e[o] = this.createTransformElement(t[o], i)), (p = e[o].transform), c.push(p)) : "sh" == t[o].ty || "rc" == t[o].ty || "el" == t[o].ty || "sr" == t[o].ty ? (m || (e[o] = this.createShapeElement(t[o], c, s)), this.setElementStyles(e[o])) : "tm" == t[o].ty || "rd" == t[o].ty || "ms" == t[o].ty ? (m ? ((f = e[o]).closed = !1) : ((f = ShapeModifiers.getModifier(t[o].ty)).init(this, t[o]), (e[o] = f), this.shapeModifiers.push(f)), y.push(f)) : "rp" == t[o].ty && (m ? ((f = e[o]).closed = !0) : ((f = ShapeModifiers.getModifier(t[o].ty)), (e[o] = f), f.init(this, t, o, e), this.shapeModifiers.push(f), (n = !1)), y.push(f));
                  this.addProcessedElement(t[o], o + 1);
                }
                for (d = u.length, o = 0; o < d; o += 1) u[o].closed = !0;
                for (d = y.length, o = 0; o < d; o += 1) y[o].closed = !0;
              }),
              (SVGShapeElement.prototype.renderInnerContent = function () {
                this.renderModifiers();
                var t,
                  e = this.stylesList.length;
                for (t = 0; t < e; t += 1) this.stylesList[t].reset();
                for (this.renderShape(), t = 0; t < e; t += 1) (this.stylesList[t]._mdf || this._isFirstFrame) && (this.stylesList[t].msElem && (this.stylesList[t].msElem.setAttribute("d", this.stylesList[t].d), (this.stylesList[t].d = "M0 0" + this.stylesList[t].d)), this.stylesList[t].pElem.setAttribute("d", this.stylesList[t].d || "M0 0"));
              }),
              (SVGShapeElement.prototype.renderShape = function () {
                var t,
                  e,
                  r = this.animatedContents.length;
                for (t = 0; t < r; t += 1) (e = this.animatedContents[t]), (this._isFirstFrame || e.element._isAnimated) && !0 !== e.data && e.fn(e.data, e.element, this._isFirstFrame);
              }),
              (SVGShapeElement.prototype.destroy = function () {
                this.destroyBaseElement(), (this.shapesData = null), (this.itemsData = null);
              }),
              (SVGTintFilter.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  var e = this.filterManager.effectElements[0].p.v,
                    r = this.filterManager.effectElements[1].p.v,
                    i = this.filterManager.effectElements[2].p.v / 100;
                  this.matrixFilter.setAttribute("values", r[0] - e[0] + " 0 0 0 " + e[0] + " " + (r[1] - e[1]) + " 0 0 0 " + e[1] + " " + (r[2] - e[2]) + " 0 0 0 " + e[2] + " 0 0 0 " + i + " 0");
                }
              }),
              (SVGFillFilter.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  var e = this.filterManager.effectElements[2].p.v,
                    r = this.filterManager.effectElements[6].p.v;
                  this.matrixFilter.setAttribute("values", "0 0 0 0 " + e[0] + " 0 0 0 0 " + e[1] + " 0 0 0 0 " + e[2] + " 0 0 0 " + r + " 0");
                }
              }),
              (SVGGaussianBlurEffect.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  var e = 0.3 * this.filterManager.effectElements[0].p.v,
                    r = this.filterManager.effectElements[1].p.v,
                    i = 3 == r ? 0 : e,
                    s = 2 == r ? 0 : e;
                  this.feGaussianBlur.setAttribute("stdDeviation", i + " " + s);
                  var a = 1 == this.filterManager.effectElements[2].p.v ? "wrap" : "duplicate";
                  this.feGaussianBlur.setAttribute("edgeMode", a);
                }
              }),
              (SVGStrokeEffect.prototype.initialize = function () {
                var t,
                  e,
                  r,
                  i,
                  s = this.elem.layerElement.children || this.elem.layerElement.childNodes;
                for (1 === this.filterManager.effectElements[1].p.v ? ((i = this.elem.maskManager.masksProperties.length), (r = 0)) : (i = (r = this.filterManager.effectElements[0].p.v - 1) + 1), (e = createNS("g")).setAttribute("fill", "none"), e.setAttribute("stroke-linecap", "round"), e.setAttribute("stroke-dashoffset", 1); r < i; r += 1) (t = createNS("path")), e.appendChild(t), this.paths.push({ p: t, m: r });
                if (3 === this.filterManager.effectElements[10].p.v) {
                  var a = createNS("mask"),
                    n = createElementID();
                  a.setAttribute("id", n), a.setAttribute("mask-type", "alpha"), a.appendChild(e), this.elem.globalData.defs.appendChild(a);
                  var o = createNS("g");
                  for (o.setAttribute("mask", "url(" + locationHref + "#" + n + ")"); s[0]; ) o.appendChild(s[0]);
                  this.elem.layerElement.appendChild(o), (this.masker = a), e.setAttribute("stroke", "#fff");
                } else if (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) {
                  if (2 === this.filterManager.effectElements[10].p.v) for (s = this.elem.layerElement.children || this.elem.layerElement.childNodes; s.length; ) this.elem.layerElement.removeChild(s[0]);
                  this.elem.layerElement.appendChild(e), this.elem.layerElement.removeAttribute("mask"), e.setAttribute("stroke", "#fff");
                }
                (this.initialized = !0), (this.pathMasker = e);
              }),
              (SVGStrokeEffect.prototype.renderFrame = function (t) {
                this.initialized || this.initialize();
                var e,
                  r,
                  i,
                  s = this.paths.length;
                for (e = 0; e < s; e += 1)
                  if (-1 !== this.paths[e].m && ((r = this.elem.maskManager.viewData[this.paths[e].m]), (i = this.paths[e].p), (t || this.filterManager._mdf || r.prop._mdf) && i.setAttribute("d", r.lastPath), t || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || r.prop._mdf)) {
                    var a;
                    if (0 !== this.filterManager.effectElements[7].p.v || 100 !== this.filterManager.effectElements[8].p.v) {
                      var n = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100,
                        o = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) / 100,
                        h = i.getTotalLength();
                      a = "0 0 0 " + h * n + " ";
                      var l,
                        p = h * (o - n),
                        f = 1 + (2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v) / 100,
                        m = Math.floor(p / f);
                      for (l = 0; l < m; l += 1) a += "1 " + (2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v) / 100 + " ";
                      a += "0 " + 10 * h + " 0 0";
                    } else a = "1 " + (2 * this.filterManager.effectElements[4].p.v * this.filterManager.effectElements[9].p.v) / 100;
                    i.setAttribute("stroke-dasharray", a);
                  }
                if (((t || this.filterManager.effectElements[4].p._mdf) && this.pathMasker.setAttribute("stroke-width", 2 * this.filterManager.effectElements[4].p.v), (t || this.filterManager.effectElements[6].p._mdf) && this.pathMasker.setAttribute("opacity", this.filterManager.effectElements[6].p.v), (1 === this.filterManager.effectElements[10].p.v || 2 === this.filterManager.effectElements[10].p.v) && (t || this.filterManager.effectElements[3].p._mdf))) {
                  var c = this.filterManager.effectElements[3].p.v;
                  this.pathMasker.setAttribute("stroke", "rgb(" + bm_floor(255 * c[0]) + "," + bm_floor(255 * c[1]) + "," + bm_floor(255 * c[2]) + ")");
                }
              }),
              (SVGTritoneFilter.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  var e = this.filterManager.effectElements[0].p.v,
                    r = this.filterManager.effectElements[1].p.v,
                    i = this.filterManager.effectElements[2].p.v,
                    s = i[0] + " " + r[0] + " " + e[0],
                    a = i[1] + " " + r[1] + " " + e[1],
                    n = i[2] + " " + r[2] + " " + e[2];
                  this.feFuncR.setAttribute("tableValues", s), this.feFuncG.setAttribute("tableValues", a), this.feFuncB.setAttribute("tableValues", n);
                }
              }),
              (SVGProLevelsFilter.prototype.createFeFunc = function (t, e) {
                var r = createNS(t);
                return r.setAttribute("type", "table"), e.appendChild(r), r;
              }),
              (SVGProLevelsFilter.prototype.getTableValue = function (t, e, r, i, s) {
                for (var a, n, o = 0, h = Math.min(t, e), l = Math.max(t, e), p = Array.call(null, { length: 256 }), f = 0, m = s - i, c = e - t; o <= 256; ) (n = (a = o / 256) <= h ? (c < 0 ? s : i) : a >= l ? (c < 0 ? i : s) : i + m * Math.pow((a - t) / c, 1 / r)), (p[f++] = n), (o += 256 / 255);
                return p.join(" ");
              }),
              (SVGProLevelsFilter.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  var e,
                    r = this.filterManager.effectElements;
                  this.feFuncRComposed && (t || r[3].p._mdf || r[4].p._mdf || r[5].p._mdf || r[6].p._mdf || r[7].p._mdf) && ((e = this.getTableValue(r[3].p.v, r[4].p.v, r[5].p.v, r[6].p.v, r[7].p.v)), this.feFuncRComposed.setAttribute("tableValues", e), this.feFuncGComposed.setAttribute("tableValues", e), this.feFuncBComposed.setAttribute("tableValues", e)),
                    this.feFuncR && (t || r[10].p._mdf || r[11].p._mdf || r[12].p._mdf || r[13].p._mdf || r[14].p._mdf) && ((e = this.getTableValue(r[10].p.v, r[11].p.v, r[12].p.v, r[13].p.v, r[14].p.v)), this.feFuncR.setAttribute("tableValues", e)),
                    this.feFuncG && (t || r[17].p._mdf || r[18].p._mdf || r[19].p._mdf || r[20].p._mdf || r[21].p._mdf) && ((e = this.getTableValue(r[17].p.v, r[18].p.v, r[19].p.v, r[20].p.v, r[21].p.v)), this.feFuncG.setAttribute("tableValues", e)),
                    this.feFuncB && (t || r[24].p._mdf || r[25].p._mdf || r[26].p._mdf || r[27].p._mdf || r[28].p._mdf) && ((e = this.getTableValue(r[24].p.v, r[25].p.v, r[26].p.v, r[27].p.v, r[28].p.v)), this.feFuncB.setAttribute("tableValues", e)),
                    this.feFuncA && (t || r[31].p._mdf || r[32].p._mdf || r[33].p._mdf || r[34].p._mdf || r[35].p._mdf) && ((e = this.getTableValue(r[31].p.v, r[32].p.v, r[33].p.v, r[34].p.v, r[35].p.v)), this.feFuncA.setAttribute("tableValues", e));
                }
              }),
              (SVGDropShadowEffect.prototype.renderFrame = function (t) {
                if (t || this.filterManager._mdf) {
                  if (((t || this.filterManager.effectElements[4].p._mdf) && this.feGaussianBlur.setAttribute("stdDeviation", this.filterManager.effectElements[4].p.v / 4), t || this.filterManager.effectElements[0].p._mdf)) {
                    var e = this.filterManager.effectElements[0].p.v;
                    this.feFlood.setAttribute("flood-color", rgbToHex(Math.round(255 * e[0]), Math.round(255 * e[1]), Math.round(255 * e[2])));
                  }
                  if (((t || this.filterManager.effectElements[1].p._mdf) && this.feFlood.setAttribute("flood-opacity", this.filterManager.effectElements[1].p.v / 255), t || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf)) {
                    var r = this.filterManager.effectElements[3].p.v,
                      i = (this.filterManager.effectElements[2].p.v - 90) * degToRads,
                      s = r * Math.cos(i),
                      a = r * Math.sin(i);
                    this.feOffset.setAttribute("dx", s), this.feOffset.setAttribute("dy", a);
                  }
                }
              });
            var _svgMatteSymbols = [];
            function SVGMatte3Effect(t, e, r) {
              (this.initialized = !1), (this.filterManager = e), (this.filterElem = t), (this.elem = r), (r.matteElement = createNS("g")), r.matteElement.appendChild(r.layerElement), r.matteElement.appendChild(r.transformedElement), (r.baseElement = r.matteElement);
            }
            function SVGEffects(t) {
              var e,
                r,
                i = t.data.ef ? t.data.ef.length : 0,
                s = createElementID(),
                a = filtersFactory.createFilter(s),
                n = 0;
              for (this.filters = [], e = 0; e < i; e += 1) (r = null), 20 === t.data.ef[e].ty ? ((n += 1), (r = new SVGTintFilter(a, t.effectsManager.effectElements[e]))) : 21 === t.data.ef[e].ty ? ((n += 1), (r = new SVGFillFilter(a, t.effectsManager.effectElements[e]))) : 22 === t.data.ef[e].ty ? (r = new SVGStrokeEffect(t, t.effectsManager.effectElements[e])) : 23 === t.data.ef[e].ty ? ((n += 1), (r = new SVGTritoneFilter(a, t.effectsManager.effectElements[e]))) : 24 === t.data.ef[e].ty ? ((n += 1), (r = new SVGProLevelsFilter(a, t.effectsManager.effectElements[e]))) : 25 === t.data.ef[e].ty ? ((n += 1), (r = new SVGDropShadowEffect(a, t.effectsManager.effectElements[e]))) : 28 === t.data.ef[e].ty ? (r = new SVGMatte3Effect(a, t.effectsManager.effectElements[e], t)) : 29 === t.data.ef[e].ty && ((n += 1), (r = new SVGGaussianBlurEffect(a, t.effectsManager.effectElements[e]))), r && this.filters.push(r);
              n && (t.globalData.defs.appendChild(a), t.layerElement.setAttribute("filter", "url(" + locationHref + "#" + s + ")")), this.filters.length && t.addRenderableComponent(this);
            }
            function CVContextData() {
              (this.saved = []), (this.cArrPos = 0), (this.cTr = new Matrix()), (this.cO = 1);
              var t;
              for (this.savedOp = createTypedArray("float32", 15), t = 0; t < 15; t += 1) this.saved[t] = createTypedArray("float32", 16);
              this._length = 15;
            }
            function CVBaseElement() {}
            function CVImageElement(t, e, r) {
              (this.assetData = e.getAssetData(t.refId)), (this.img = e.imageLoader.getImage(this.assetData)), this.initElement(t, e, r);
            }
            function CVCompElement(t, e, r) {
              (this.completeLayers = !1), (this.layers = t.layers), (this.pendingElements = []), (this.elements = createSizedArray(this.layers.length)), this.initElement(t, e, r), (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
            }
            function CVMaskElement(t, e) {
              (this.data = t), (this.element = e), (this.masksProperties = this.data.masksProperties || []), (this.viewData = createSizedArray(this.masksProperties.length));
              var r,
                i = this.masksProperties.length,
                s = !1;
              for (r = 0; r < i; r++) "n" !== this.masksProperties[r].mode && (s = !0), (this.viewData[r] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[r], 3));
              (this.hasMasks = s), s && this.element.addRenderableComponent(this);
            }
            function CVShapeElement(t, e, r) {
              (this.shapes = []), (this.shapesData = t.shapes), (this.stylesList = []), (this.itemsData = []), (this.prevViewData = []), (this.shapeModifiers = []), (this.processedElements = []), (this.transformsManager = new ShapeTransformManager()), this.initElement(t, e, r);
            }
            function CVSolidElement(t, e, r) {
              this.initElement(t, e, r);
            }
            function CVTextElement(t, e, r) {
              (this.textSpans = []), (this.yOffset = 0), (this.fillColorAnim = !1), (this.strokeColorAnim = !1), (this.strokeWidthAnim = !1), (this.stroke = !1), (this.fill = !1), (this.justifyOffset = 0), (this.currentRender = null), (this.renderType = "canvas"), (this.values = { fill: "rgba(0,0,0,0)", stroke: "rgba(0,0,0,0)", sWidth: 0, fValue: "" }), this.initElement(t, e, r);
            }
            function CVEffects() {}
            function HBaseElement(t, e, r) {}
            function HSolidElement(t, e, r) {
              this.initElement(t, e, r);
            }
            function HCompElement(t, e, r) {
              (this.layers = t.layers), (this.supports3d = !t.hasMask), (this.completeLayers = !1), (this.pendingElements = []), (this.elements = this.layers ? createSizedArray(this.layers.length) : []), this.initElement(t, e, r), (this.tm = t.tm ? PropertyFactory.getProp(this, t.tm, 0, e.frameRate, this) : { _placeholder: !0 });
            }
            function HShapeElement(t, e, r) {
              (this.shapes = []), (this.shapesData = t.shapes), (this.stylesList = []), (this.shapeModifiers = []), (this.itemsData = []), (this.processedElements = []), (this.animatedContents = []), (this.shapesContainer = createNS("g")), this.initElement(t, e, r), (this.prevViewData = []), (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 });
            }
            function HTextElement(t, e, r) {
              (this.textSpans = []), (this.textPaths = []), (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }), (this.renderType = "svg"), (this.isMasked = !1), this.initElement(t, e, r);
            }
            function HImageElement(t, e, r) {
              (this.assetData = e.getAssetData(t.refId)), this.initElement(t, e, r);
            }
            function HCameraElement(t, e, r) {
              this.initFrame(), this.initBaseData(t, e, r), this.initHierarchy();
              var i = PropertyFactory.getProp;
              if (((this.pe = i(this, t.pe, 0, 0, this)), t.ks.p.s ? ((this.px = i(this, t.ks.p.x, 1, 0, this)), (this.py = i(this, t.ks.p.y, 1, 0, this)), (this.pz = i(this, t.ks.p.z, 1, 0, this))) : (this.p = i(this, t.ks.p, 1, 0, this)), t.ks.a && (this.a = i(this, t.ks.a, 1, 0, this)), t.ks.or.k.length && t.ks.or.k[0].to)) {
                var s,
                  a = t.ks.or.k.length;
                for (s = 0; s < a; s += 1) (t.ks.or.k[s].to = null), (t.ks.or.k[s].ti = null);
              }
              (this.or = i(this, t.ks.or, 1, degToRads, this)), (this.or.sh = !0), (this.rx = i(this, t.ks.rx, 0, degToRads, this)), (this.ry = i(this, t.ks.ry, 0, degToRads, this)), (this.rz = i(this, t.ks.rz, 0, degToRads, this)), (this.mat = new Matrix()), (this._prevMat = new Matrix()), (this._isFirstFrame = !0), (this.finalTransform = { mProp: this });
            }
            function HEffects() {}
            (SVGMatte3Effect.prototype.findSymbol = function (t) {
              for (var e = 0, r = _svgMatteSymbols.length; e < r; ) {
                if (_svgMatteSymbols[e] === t) return _svgMatteSymbols[e];
                e += 1;
              }
              return null;
            }),
              (SVGMatte3Effect.prototype.replaceInParent = function (t, e) {
                var r = t.layerElement.parentNode;
                if (r) {
                  for (var i, s = r.children, a = 0, n = s.length; a < n && s[a] !== t.layerElement; ) a += 1;
                  a <= n - 2 && (i = s[a + 1]);
                  var o = createNS("use");
                  o.setAttribute("href", "#" + e), i ? r.insertBefore(o, i) : r.appendChild(o);
                }
              }),
              (SVGMatte3Effect.prototype.setElementAsMask = function (t, e) {
                if (!this.findSymbol(e)) {
                  var r = createElementID(),
                    i = createNS("mask");
                  i.setAttribute("id", e.layerId), i.setAttribute("mask-type", "alpha"), _svgMatteSymbols.push(e);
                  var s = t.globalData.defs;
                  s.appendChild(i);
                  var a = createNS("symbol");
                  a.setAttribute("id", r), this.replaceInParent(e, r), a.appendChild(e.layerElement), s.appendChild(a);
                  var n = createNS("use");
                  n.setAttribute("href", "#" + r), i.appendChild(n), (e.data.hd = !1), e.show();
                }
                t.setMatte(e.layerId);
              }),
              (SVGMatte3Effect.prototype.initialize = function () {
                for (var t = this.filterManager.effectElements[0].p.v, e = this.elem.comp.elements, r = 0, i = e.length; r < i; ) e[r] && e[r].data.ind === t && this.setElementAsMask(this.elem, e[r]), (r += 1);
                this.initialized = !0;
              }),
              (SVGMatte3Effect.prototype.renderFrame = function () {
                this.initialized || this.initialize();
              }),
              (SVGEffects.prototype.renderFrame = function (t) {
                var e,
                  r = this.filters.length;
                for (e = 0; e < r; e += 1) this.filters[e].renderFrame(t);
              }),
              (CVContextData.prototype.duplicate = function () {
                var t = 2 * this._length,
                  e = this.savedOp;
                (this.savedOp = createTypedArray("float32", t)), this.savedOp.set(e);
                var r = 0;
                for (r = this._length; r < t; r += 1) this.saved[r] = createTypedArray("float32", 16);
                this._length = t;
              }),
              (CVContextData.prototype.reset = function () {
                (this.cArrPos = 0), this.cTr.reset(), (this.cO = 1);
              }),
              (CVBaseElement.prototype = {
                createElements: function () {},
                initRendererElement: function () {},
                createContainerElements: function () {
                  (this.canvasContext = this.globalData.canvasContext), (this.renderableEffectsManager = new CVEffects(this));
                },
                createContent: function () {},
                setBlendMode: function () {
                  var t = this.globalData;
                  if (t.blendMode !== this.data.bm) {
                    t.blendMode = this.data.bm;
                    var e = getBlendMode(this.data.bm);
                    t.canvasContext.globalCompositeOperation = e;
                  }
                },
                createRenderableComponents: function () {
                  this.maskManager = new CVMaskElement(this.data, this);
                },
                hideElement: function () {
                  this.hidden || (this.isInRange && !this.isTransparent) || (this.hidden = !0);
                },
                showElement: function () {
                  this.isInRange && !this.isTransparent && ((this.hidden = !1), (this._isFirstFrame = !0), (this.maskManager._isFirstFrame = !0));
                },
                renderFrame: function () {
                  if (!this.hidden && !this.data.hd) {
                    this.renderTransform(), this.renderRenderable(), this.setBlendMode();
                    var t = 0 === this.data.ty;
                    this.globalData.renderer.save(t), this.globalData.renderer.ctxTransform(this.finalTransform.mat.props), this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v), this.renderInnerContent(), this.globalData.renderer.restore(t), this.maskManager.hasMasks && this.globalData.renderer.restore(!0), this._isFirstFrame && (this._isFirstFrame = !1);
                  }
                },
                destroy: function () {
                  (this.canvasContext = null), (this.data = null), (this.globalData = null), this.maskManager.destroy();
                },
                mHelper: new Matrix(),
              }),
              (CVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement),
              (CVBaseElement.prototype.show = CVBaseElement.prototype.showElement),
              extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement),
              (CVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement),
              (CVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame),
              (CVImageElement.prototype.createContent = function () {
                if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {
                  var t = createTag("canvas");
                  (t.width = this.assetData.w), (t.height = this.assetData.h);
                  var e,
                    r,
                    i = t.getContext("2d"),
                    s = this.img.width,
                    a = this.img.height,
                    n = s / a,
                    o = this.assetData.w / this.assetData.h,
                    h = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;
                  (n > o && "xMidYMid slice" === h) || (n < o && "xMidYMid slice" !== h) ? (e = (r = a) * o) : (r = (e = s) / o), i.drawImage(this.img, (s - e) / 2, (a - r) / 2, e, r, 0, 0, this.assetData.w, this.assetData.h), (this.img = t);
                }
              }),
              (CVImageElement.prototype.renderInnerContent = function (t) {
                this.canvasContext.drawImage(this.img, 0, 0);
              }),
              (CVImageElement.prototype.destroy = function () {
                this.img = null;
              }),
              extendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement),
              (CVCompElement.prototype.renderInnerContent = function () {
                var t,
                  e = this.canvasContext;
                for (e.beginPath(), e.moveTo(0, 0), e.lineTo(this.data.w, 0), e.lineTo(this.data.w, this.data.h), e.lineTo(0, this.data.h), e.lineTo(0, 0), e.clip(), t = this.layers.length - 1; t >= 0; t -= 1) (this.completeLayers || this.elements[t]) && this.elements[t].renderFrame();
              }),
              (CVCompElement.prototype.destroy = function () {
                var t;
                for (t = this.layers.length - 1; t >= 0; t -= 1) this.elements[t] && this.elements[t].destroy();
                (this.layers = null), (this.elements = null);
              }),
              (CVMaskElement.prototype.renderFrame = function () {
                if (this.hasMasks) {
                  var t,
                    e,
                    r,
                    i,
                    s = this.element.finalTransform.mat,
                    a = this.element.canvasContext,
                    n = this.masksProperties.length;
                  for (a.beginPath(), t = 0; t < n; t++)
                    if ("n" !== this.masksProperties[t].mode) {
                      this.masksProperties[t].inv && (a.moveTo(0, 0), a.lineTo(this.element.globalData.compSize.w, 0), a.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h), a.lineTo(0, this.element.globalData.compSize.h), a.lineTo(0, 0)), (i = this.viewData[t].v), (e = s.applyToPointArray(i.v[0][0], i.v[0][1], 0)), a.moveTo(e[0], e[1]);
                      var o,
                        h = i._length;
                      for (o = 1; o < h; o++) (r = s.applyToTriplePoints(i.o[o - 1], i.i[o], i.v[o])), a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);
                      (r = s.applyToTriplePoints(i.o[o - 1], i.i[0], i.v[0])), a.bezierCurveTo(r[0], r[1], r[2], r[3], r[4], r[5]);
                    }
                  this.element.globalData.renderer.save(!0), a.clip();
                }
              }),
              (CVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty),
              (CVMaskElement.prototype.destroy = function () {
                this.element = null;
              }),
              extendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement),
              (CVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement),
              (CVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: !1 }),
              (CVShapeElement.prototype.dashResetter = []),
              (CVShapeElement.prototype.createContent = function () {
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []);
              }),
              (CVShapeElement.prototype.createStyleElement = function (t, e) {
                var r = { data: t, type: t.ty, preTransforms: this.transformsManager.addTransformSequence(e), transforms: [], elements: [], closed: !0 === t.hd },
                  i = {};
                if (("fl" == t.ty || "st" == t.ty ? ((i.c = PropertyFactory.getProp(this, t.c, 1, 255, this)), i.c.k || (r.co = "rgb(" + bm_floor(i.c.v[0]) + "," + bm_floor(i.c.v[1]) + "," + bm_floor(i.c.v[2]) + ")")) : ("gf" !== t.ty && "gs" !== t.ty) || ((i.s = PropertyFactory.getProp(this, t.s, 1, null, this)), (i.e = PropertyFactory.getProp(this, t.e, 1, null, this)), (i.h = PropertyFactory.getProp(this, t.h || { k: 0 }, 0, 0.01, this)), (i.a = PropertyFactory.getProp(this, t.a || { k: 0 }, 0, degToRads, this)), (i.g = new GradientProperty(this, t.g, this))), (i.o = PropertyFactory.getProp(this, t.o, 0, 0.01, this)), "st" == t.ty || "gs" == t.ty)) {
                  if (((r.lc = this.lcEnum[t.lc] || "round"), (r.lj = this.ljEnum[t.lj] || "round"), 1 == t.lj && (r.ml = t.ml), (i.w = PropertyFactory.getProp(this, t.w, 0, null, this)), i.w.k || (r.wi = i.w.v), t.d)) {
                    var s = new DashProperty(this, t.d, "canvas", this);
                    (i.d = s), i.d.k || ((r.da = i.d.dashArray), (r.do = i.d.dashoffset[0]));
                  }
                } else r.r = 2 === t.r ? "evenodd" : "nonzero";
                return this.stylesList.push(r), (i.style = r), i;
              }),
              (CVShapeElement.prototype.createGroupElement = function (t) {
                return { it: [], prevViewData: [] };
              }),
              (CVShapeElement.prototype.createTransformElement = function (t) {
                return { transform: { opacity: 1, _opMdf: !1, key: this.transformsManager.getNewKey(), op: PropertyFactory.getProp(this, t.o, 0, 0.01, this), mProps: TransformPropertyFactory.getTransformProperty(this, t, this) } };
              }),
              (CVShapeElement.prototype.createShapeElement = function (t) {
                var e = new CVShapeData(this, t, this.stylesList, this.transformsManager);
                return this.shapes.push(e), this.addShapeToModifiers(e), e;
              }),
              (CVShapeElement.prototype.reloadShapes = function () {
                this._isFirstFrame = !0;
                var t,
                  e = this.itemsData.length;
                for (t = 0; t < e; t += 1) this.prevViewData[t] = this.itemsData[t];
                for (this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, !0, []), e = this.dynamicProperties.length, t = 0; t < e; t += 1) this.dynamicProperties[t].getValue();
                this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame);
              }),
              (CVShapeElement.prototype.addTransformToStyleList = function (t) {
                var e,
                  r = this.stylesList.length;
                for (e = 0; e < r; e += 1) this.stylesList[e].closed || this.stylesList[e].transforms.push(t);
              }),
              (CVShapeElement.prototype.removeTransformFromStyleList = function () {
                var t,
                  e = this.stylesList.length;
                for (t = 0; t < e; t += 1) this.stylesList[t].closed || this.stylesList[t].transforms.pop();
              }),
              (CVShapeElement.prototype.closeStyles = function (t) {
                var e,
                  r = t.length;
                for (e = 0; e < r; e += 1) t[e].closed = !0;
              }),
              (CVShapeElement.prototype.searchShapes = function (t, e, r, i, s) {
                var a,
                  n,
                  o,
                  h,
                  l,
                  p,
                  f = t.length - 1,
                  m = [],
                  c = [],
                  d = [].concat(s);
                for (a = f; a >= 0; a -= 1) {
                  if (((h = this.searchProcessedElement(t[a])) ? (e[a] = r[h - 1]) : (t[a]._shouldRender = i), "fl" == t[a].ty || "st" == t[a].ty || "gf" == t[a].ty || "gs" == t[a].ty)) h ? (e[a].style.closed = !1) : (e[a] = this.createStyleElement(t[a], d)), m.push(e[a].style);
                  else if ("gr" == t[a].ty) {
                    if (h) for (o = e[a].it.length, n = 0; n < o; n += 1) e[a].prevViewData[n] = e[a].it[n];
                    else e[a] = this.createGroupElement(t[a]);
                    this.searchShapes(t[a].it, e[a].it, e[a].prevViewData, i, d);
                  } else "tr" == t[a].ty ? (h || ((p = this.createTransformElement(t[a])), (e[a] = p)), d.push(e[a]), this.addTransformToStyleList(e[a])) : "sh" == t[a].ty || "rc" == t[a].ty || "el" == t[a].ty || "sr" == t[a].ty ? h || (e[a] = this.createShapeElement(t[a])) : "tm" == t[a].ty || "rd" == t[a].ty ? (h ? ((l = e[a]).closed = !1) : ((l = ShapeModifiers.getModifier(t[a].ty)).init(this, t[a]), (e[a] = l), this.shapeModifiers.push(l)), c.push(l)) : "rp" == t[a].ty && (h ? ((l = e[a]).closed = !0) : ((l = ShapeModifiers.getModifier(t[a].ty)), (e[a] = l), l.init(this, t, a, e), this.shapeModifiers.push(l), (i = !1)), c.push(l));
                  this.addProcessedElement(t[a], a + 1);
                }
                for (this.removeTransformFromStyleList(), this.closeStyles(m), f = c.length, a = 0; a < f; a += 1) c[a].closed = !0;
              }),
              (CVShapeElement.prototype.renderInnerContent = function () {
                (this.transformHelper.opacity = 1), (this.transformHelper._opMdf = !1), this.renderModifiers(), this.transformsManager.processSequences(this._isFirstFrame), this.renderShape(this.transformHelper, this.shapesData, this.itemsData, !0);
              }),
              (CVShapeElement.prototype.renderShapeTransform = function (t, e) {
                (t._opMdf || e.op._mdf || this._isFirstFrame) && ((e.opacity = t.opacity), (e.opacity *= e.op.v), (e._opMdf = !0));
              }),
              (CVShapeElement.prototype.drawLayer = function () {
                var t,
                  e,
                  r,
                  i,
                  s,
                  a,
                  n,
                  o,
                  h,
                  l = this.stylesList.length,
                  p = this.globalData.renderer,
                  f = this.globalData.canvasContext;
                for (t = 0; t < l; t += 1)
                  if ((("st" !== (o = (h = this.stylesList[t]).type) && "gs" !== o) || 0 !== h.wi) && h.data._shouldRender && 0 !== h.coOp && 0 !== this.globalData.currentGlobalAlpha) {
                    for (p.save(), a = h.elements, "st" === o || "gs" === o ? ((f.strokeStyle = "st" === o ? h.co : h.grd), (f.lineWidth = h.wi), (f.lineCap = h.lc), (f.lineJoin = h.lj), (f.miterLimit = h.ml || 0)) : (f.fillStyle = "fl" === o ? h.co : h.grd), p.ctxOpacity(h.coOp), "st" !== o && "gs" !== o && f.beginPath(), p.ctxTransform(h.preTransforms.finalTransform.props), r = a.length, e = 0; e < r; e += 1) {
                      for (("st" !== o && "gs" !== o) || (f.beginPath(), h.da && (f.setLineDash(h.da), (f.lineDashOffset = h.do))), s = (n = a[e].trNodes).length, i = 0; i < s; i += 1) "m" == n[i].t ? f.moveTo(n[i].p[0], n[i].p[1]) : "c" == n[i].t ? f.bezierCurveTo(n[i].pts[0], n[i].pts[1], n[i].pts[2], n[i].pts[3], n[i].pts[4], n[i].pts[5]) : f.closePath();
                      ("st" !== o && "gs" !== o) || (f.stroke(), h.da && f.setLineDash(this.dashResetter));
                    }
                    "st" !== o && "gs" !== o && f.fill(h.r), p.restore();
                  }
              }),
              (CVShapeElement.prototype.renderShape = function (t, e, r, i) {
                var s, a;
                for (a = t, s = e.length - 1; s >= 0; s -= 1) "tr" == e[s].ty ? ((a = r[s].transform), this.renderShapeTransform(t, a)) : "sh" == e[s].ty || "el" == e[s].ty || "rc" == e[s].ty || "sr" == e[s].ty ? this.renderPath(e[s], r[s]) : "fl" == e[s].ty ? this.renderFill(e[s], r[s], a) : "st" == e[s].ty ? this.renderStroke(e[s], r[s], a) : "gf" == e[s].ty || "gs" == e[s].ty ? this.renderGradientFill(e[s], r[s], a) : "gr" == e[s].ty ? this.renderShape(a, e[s].it, r[s].it) : e[s].ty;
                i && this.drawLayer();
              }),
              (CVShapeElement.prototype.renderStyledShape = function (t, e) {
                if (this._isFirstFrame || e._mdf || t.transforms._mdf) {
                  var r,
                    i,
                    s,
                    a = t.trNodes,
                    n = e.paths,
                    o = n._length;
                  a.length = 0;
                  var h = t.transforms.finalTransform;
                  for (s = 0; s < o; s += 1) {
                    var l = n.shapes[s];
                    if (l && l.v) {
                      for (i = l._length, r = 1; r < i; r += 1) 1 === r && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), a.push({ t: "c", pts: h.applyToTriplePoints(l.o[r - 1], l.i[r], l.v[r]) });
                      1 === i && a.push({ t: "m", p: h.applyToPointArray(l.v[0][0], l.v[0][1], 0) }), l.c && i && (a.push({ t: "c", pts: h.applyToTriplePoints(l.o[r - 1], l.i[0], l.v[0]) }), a.push({ t: "z" }));
                    }
                  }
                  t.trNodes = a;
                }
              }),
              (CVShapeElement.prototype.renderPath = function (t, e) {
                if (!0 !== t.hd && t._shouldRender) {
                  var r,
                    i = e.styledShapes.length;
                  for (r = 0; r < i; r += 1) this.renderStyledShape(e.styledShapes[r], e.sh);
                }
              }),
              (CVShapeElement.prototype.renderFill = function (t, e, r) {
                var i = e.style;
                (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity);
              }),
              (CVShapeElement.prototype.renderGradientFill = function (t, e, r) {
                var i = e.style;
                if (!i.grd || e.g._mdf || e.s._mdf || e.e._mdf || (1 !== t.t && (e.h._mdf || e.a._mdf))) {
                  var s = this.globalData.canvasContext,
                    a = e.s.v,
                    n = e.e.v;
                  if (1 === t.t) m = s.createLinearGradient(a[0], a[1], n[0], n[1]);
                  else
                    var o = Math.sqrt(Math.pow(a[0] - n[0], 2) + Math.pow(a[1] - n[1], 2)),
                      h = Math.atan2(n[1] - a[1], n[0] - a[0]),
                      l = o * (e.h.v >= 1 ? 0.99 : e.h.v <= -1 ? -0.99 : e.h.v),
                      p = Math.cos(h + e.a.v) * l + a[0],
                      f = Math.sin(h + e.a.v) * l + a[1],
                      m = s.createRadialGradient(p, f, 0, a[0], a[1], o);
                  var c,
                    d = t.g.p,
                    u = e.g.c,
                    y = 1;
                  for (c = 0; c < d; c += 1) e.g._hasOpacity && e.g._collapsable && (y = e.g.o[2 * c + 1]), m.addColorStop(u[4 * c] / 100, "rgba(" + u[4 * c + 1] + "," + u[4 * c + 2] + "," + u[4 * c + 3] + "," + y + ")");
                  i.grd = m;
                }
                i.coOp = e.o.v * r.opacity;
              }),
              (CVShapeElement.prototype.renderStroke = function (t, e, r) {
                var i = e.style,
                  s = e.d;
                s && (s._mdf || this._isFirstFrame) && ((i.da = s.dashArray), (i.do = s.dashoffset[0])), (e.c._mdf || this._isFirstFrame) && (i.co = "rgb(" + bm_floor(e.c.v[0]) + "," + bm_floor(e.c.v[1]) + "," + bm_floor(e.c.v[2]) + ")"), (e.o._mdf || r._opMdf || this._isFirstFrame) && (i.coOp = e.o.v * r.opacity), (e.w._mdf || this._isFirstFrame) && (i.wi = e.w.v);
              }),
              (CVShapeElement.prototype.destroy = function () {
                (this.shapesData = null), (this.globalData = null), (this.canvasContext = null), (this.stylesList.length = 0), (this.itemsData.length = 0);
              }),
              extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement),
              (CVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement),
              (CVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame),
              (CVSolidElement.prototype.renderInnerContent = function () {
                var t = this.canvasContext;
                (t.fillStyle = this.data.sc), t.fillRect(0, 0, this.data.sw, this.data.sh);
              }),
              extendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement),
              (CVTextElement.prototype.tHelper = createTag("canvas").getContext("2d")),
              (CVTextElement.prototype.buildNewText = function () {
                var t = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                var e = !1;
                t.fc ? ((e = !0), (this.values.fill = this.buildColor(t.fc))) : (this.values.fill = "rgba(0,0,0,0)"), (this.fill = e);
                var r = !1;
                t.sc && ((r = !0), (this.values.stroke = this.buildColor(t.sc)), (this.values.sWidth = t.sw));
                var i,
                  s,
                  a = this.globalData.fontManager.getFontByName(t.f),
                  n = t.l,
                  o = this.mHelper;
                (this.stroke = r), (this.values.fValue = t.finalSize + "px " + this.globalData.fontManager.getFontByName(t.f).fFamily), (s = t.finalText.length);
                var h,
                  l,
                  p,
                  f,
                  m,
                  c,
                  d,
                  u,
                  y,
                  g,
                  v = this.data.singleShape,
                  b = (t.tr / 1e3) * t.finalSize,
                  E = 0,
                  x = 0,
                  S = !0,
                  P = 0;
                for (i = 0; i < s; i += 1) {
                  for (l = ((h = this.globalData.fontManager.getCharData(t.finalText[i], a.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily)) && h.data) || {}, o.reset(), v && n[i].n && ((E = -b), (x += t.yOffset), (x += S ? 1 : 0), (S = !1)), d = (m = l.shapes ? l.shapes[0].it : []).length, o.scale(t.finalSize / 100, t.finalSize / 100), v && this.applyTextPropertiesToMatrix(t, o, n[i].line, E, x), y = createSizedArray(d), c = 0; c < d; c += 1) {
                    for (f = m[c].ks.k.i.length, u = m[c].ks.k, g = [], p = 1; p < f; p += 1) 1 == p && g.push(o.applyToX(u.v[0][0], u.v[0][1], 0), o.applyToY(u.v[0][0], u.v[0][1], 0)), g.push(o.applyToX(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToY(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToX(u.i[p][0], u.i[p][1], 0), o.applyToY(u.i[p][0], u.i[p][1], 0), o.applyToX(u.v[p][0], u.v[p][1], 0), o.applyToY(u.v[p][0], u.v[p][1], 0));
                    g.push(o.applyToX(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToY(u.o[p - 1][0], u.o[p - 1][1], 0), o.applyToX(u.i[0][0], u.i[0][1], 0), o.applyToY(u.i[0][0], u.i[0][1], 0), o.applyToX(u.v[0][0], u.v[0][1], 0), o.applyToY(u.v[0][0], u.v[0][1], 0)), (y[c] = g);
                  }
                  v && ((E += n[i].l), (E += b)), this.textSpans[P] ? (this.textSpans[P].elem = y) : (this.textSpans[P] = { elem: y }), (P += 1);
                }
              }),
              (CVTextElement.prototype.renderInnerContent = function () {
                var t,
                  e,
                  r,
                  i,
                  s,
                  a,
                  n = this.canvasContext;
                this.finalTransform.mat.props;
                (n.font = this.values.fValue), (n.lineCap = "butt"), (n.lineJoin = "miter"), (n.miterLimit = 4), this.data.singleShape || this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);
                var o,
                  h = this.textAnimator.renderedLetters,
                  l = this.textProperty.currentData.l;
                e = l.length;
                var p,
                  f,
                  m = null,
                  c = null,
                  d = null;
                for (t = 0; t < e; t += 1)
                  if (!l[t].n) {
                    if (((o = h[t]) && (this.globalData.renderer.save(), this.globalData.renderer.ctxTransform(o.p), this.globalData.renderer.ctxOpacity(o.o)), this.fill)) {
                      for (o && o.fc ? m !== o.fc && ((m = o.fc), (n.fillStyle = o.fc)) : m !== this.values.fill && ((m = this.values.fill), (n.fillStyle = this.values.fill)), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1) for (a = (f = p[r]).length, this.globalData.canvasContext.moveTo(f[0], f[1]), s = 2; s < a; s += 6) this.globalData.canvasContext.bezierCurveTo(f[s], f[s + 1], f[s + 2], f[s + 3], f[s + 4], f[s + 5]);
                      this.globalData.canvasContext.closePath(), this.globalData.canvasContext.fill();
                    }
                    if (this.stroke) {
                      for (o && o.sw ? d !== o.sw && ((d = o.sw), (n.lineWidth = o.sw)) : d !== this.values.sWidth && ((d = this.values.sWidth), (n.lineWidth = this.values.sWidth)), o && o.sc ? c !== o.sc && ((c = o.sc), (n.strokeStyle = o.sc)) : c !== this.values.stroke && ((c = this.values.stroke), (n.strokeStyle = this.values.stroke)), i = (p = this.textSpans[t].elem).length, this.globalData.canvasContext.beginPath(), r = 0; r < i; r += 1) for (a = (f = p[r]).length, this.globalData.canvasContext.moveTo(f[0], f[1]), s = 2; s < a; s += 6) this.globalData.canvasContext.bezierCurveTo(f[s], f[s + 1], f[s + 2], f[s + 3], f[s + 4], f[s + 5]);
                      this.globalData.canvasContext.closePath(), this.globalData.canvasContext.stroke();
                    }
                    o && this.globalData.renderer.restore();
                  }
              }),
              (CVEffects.prototype.renderFrame = function () {}),
              (HBaseElement.prototype = {
                checkBlendMode: function () {},
                initRendererElement: function () {
                  (this.baseElement = createTag(this.data.tg || "div")), this.data.hasMask ? ((this.svgElement = createNS("svg")), (this.layerElement = createNS("g")), (this.maskedElement = this.layerElement), this.svgElement.appendChild(this.layerElement), this.baseElement.appendChild(this.svgElement)) : (this.layerElement = this.baseElement), styleDiv(this.baseElement);
                },
                createContainerElements: function () {
                  (this.renderableEffectsManager = new CVEffects(this)), (this.transformedElement = this.baseElement), (this.maskedElement = this.layerElement), this.data.ln && this.layerElement.setAttribute("id", this.data.ln), this.data.cl && this.layerElement.setAttribute("class", this.data.cl), 0 !== this.data.bm && this.setBlendMode();
                },
                renderElement: function () {
                  this.finalTransform._matMdf && (this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS()), this.finalTransform._opMdf && (this.transformedElement.style.opacity = this.finalTransform.mProp.o.v);
                },
                renderFrame: function () {
                  this.data.hd || this.hidden || (this.renderTransform(), this.renderRenderable(), this.renderElement(), this.renderInnerContent(), this._isFirstFrame && (this._isFirstFrame = !1));
                },
                destroy: function () {
                  (this.layerElement = null), (this.transformedElement = null), this.matteElement && (this.matteElement = null), this.maskManager && (this.maskManager.destroy(), (this.maskManager = null));
                },
                createRenderableComponents: function () {
                  this.maskManager = new MaskElement(this.data, this, this.globalData);
                },
                addEffects: function () {},
                setMatte: function () {},
              }),
              (HBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement),
              (HBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy),
              (HBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting),
              extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement),
              (HSolidElement.prototype.createContent = function () {
                var t;
                this.data.hasMask ? ((t = createNS("rect")).setAttribute("width", this.data.sw), t.setAttribute("height", this.data.sh), t.setAttribute("fill", this.data.sc), this.svgElement.setAttribute("width", this.data.sw), this.svgElement.setAttribute("height", this.data.sh)) : (((t = createTag("div")).style.width = this.data.sw + "px"), (t.style.height = this.data.sh + "px"), (t.style.backgroundColor = this.data.sc)), this.layerElement.appendChild(t);
              }),
              extendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement),
              (HCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements),
              (HCompElement.prototype.createContainerElements = function () {
                this._createBaseContainerElements(), this.data.hasMask ? (this.svgElement.setAttribute("width", this.data.w), this.svgElement.setAttribute("height", this.data.h), (this.transformedElement = this.baseElement)) : (this.transformedElement = this.layerElement);
              }),
              (HCompElement.prototype.addTo3dContainer = function (t, e) {
                for (var r, i = 0; i < e; ) this.elements[i] && this.elements[i].getBaseElement && (r = this.elements[i].getBaseElement()), (i += 1);
                r ? this.layerElement.insertBefore(t, r) : this.layerElement.appendChild(t);
              }),
              extendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement),
              (HShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent),
              (HShapeElement.prototype.createContent = function () {
                var t;
                if (((this.baseElement.style.fontSize = 0), this.data.hasMask)) this.layerElement.appendChild(this.shapesContainer), (t = this.svgElement);
                else {
                  t = createNS("svg");
                  var e = this.comp.data ? this.comp.data : this.globalData.compSize;
                  t.setAttribute("width", e.w), t.setAttribute("height", e.h), t.appendChild(this.shapesContainer), this.layerElement.appendChild(t);
                }
                this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], !0), this.filterUniqueShapes(), (this.shapeCont = t);
              }),
              (HShapeElement.prototype.getTransformedPoint = function (t, e) {
                var r,
                  i = t.length;
                for (r = 0; r < i; r += 1) e = t[r].mProps.v.applyToPointArray(e[0], e[1], 0);
                return e;
              }),
              (HShapeElement.prototype.calculateShapeBoundingBox = function (t, e) {
                var r,
                  i,
                  s,
                  a,
                  n,
                  o = t.sh.v,
                  h = t.transformers,
                  l = o._length;
                if (!(l <= 1)) {
                  for (r = 0; r < l - 1; r += 1) (i = this.getTransformedPoint(h, o.v[r])), (s = this.getTransformedPoint(h, o.o[r])), (a = this.getTransformedPoint(h, o.i[r + 1])), (n = this.getTransformedPoint(h, o.v[r + 1])), this.checkBounds(i, s, a, n, e);
                  o.c && ((i = this.getTransformedPoint(h, o.v[r])), (s = this.getTransformedPoint(h, o.o[r])), (a = this.getTransformedPoint(h, o.i[0])), (n = this.getTransformedPoint(h, o.v[0])), this.checkBounds(i, s, a, n, e));
                }
              }),
              (HShapeElement.prototype.checkBounds = function (t, e, r, i, s) {
                this.getBoundsOfCurve(t, e, r, i);
                var a = this.shapeBoundingBox;
                (s.x = bm_min(a.left, s.x)), (s.xMax = bm_max(a.right, s.xMax)), (s.y = bm_min(a.top, s.y)), (s.yMax = bm_max(a.bottom, s.yMax));
              }),
              (HShapeElement.prototype.shapeBoundingBox = { left: 0, right: 0, top: 0, bottom: 0 }),
              (HShapeElement.prototype.tempBoundingBox = { x: 0, xMax: 0, y: 0, yMax: 0, width: 0, height: 0 }),
              (HShapeElement.prototype.getBoundsOfCurve = function (t, e, r, i) {
                for (
                  var s,
                    a,
                    n,
                    o,
                    h,
                    l,
                    p,
                    f = [
                      [t[0], i[0]],
                      [t[1], i[1]],
                    ],
                    m = 0;
                  m < 2;
                  ++m
                )
                  if (((a = 6 * t[m] - 12 * e[m] + 6 * r[m]), (s = -3 * t[m] + 9 * e[m] - 9 * r[m] + 3 * i[m]), (n = 3 * e[m] - 3 * t[m]), (a |= 0), (n |= 0), 0 !== (s |= 0))) (h = a * a - 4 * n * s) < 0 || (0 < (l = (-a + bm_sqrt(h)) / (2 * s)) && l < 1 && f[m].push(this.calculateF(l, t, e, r, i, m)), 0 < (p = (-a - bm_sqrt(h)) / (2 * s)) && p < 1 && f[m].push(this.calculateF(p, t, e, r, i, m)));
                  else {
                    if (0 === a) continue;
                    0 < (o = -n / a) && o < 1 && f[m].push(this.calculateF(o, t, e, r, i, m));
                  }
                (this.shapeBoundingBox.left = bm_min.apply(null, f[0])), (this.shapeBoundingBox.top = bm_min.apply(null, f[1])), (this.shapeBoundingBox.right = bm_max.apply(null, f[0])), (this.shapeBoundingBox.bottom = bm_max.apply(null, f[1]));
              }),
              (HShapeElement.prototype.calculateF = function (t, e, r, i, s, a) {
                return bm_pow(1 - t, 3) * e[a] + 3 * bm_pow(1 - t, 2) * t * r[a] + 3 * (1 - t) * bm_pow(t, 2) * i[a] + bm_pow(t, 3) * s[a];
              }),
              (HShapeElement.prototype.calculateBoundingBox = function (t, e) {
                var r,
                  i = t.length;
                for (r = 0; r < i; r += 1) t[r] && t[r].sh ? this.calculateShapeBoundingBox(t[r], e) : t[r] && t[r].it && this.calculateBoundingBox(t[r].it, e);
              }),
              (HShapeElement.prototype.currentBoxContains = function (t) {
                return this.currentBBox.x <= t.x && this.currentBBox.y <= t.y && this.currentBBox.width + this.currentBBox.x >= t.x + t.width && this.currentBBox.height + this.currentBBox.y >= t.y + t.height;
              }),
              (HShapeElement.prototype.renderInnerContent = function () {
                if ((this._renderShapeFrame(), !this.hidden && (this._isFirstFrame || this._mdf))) {
                  var t = this.tempBoundingBox,
                    e = 999999;
                  if (((t.x = e), (t.xMax = -e), (t.y = e), (t.yMax = -e), this.calculateBoundingBox(this.itemsData, t), (t.width = t.xMax < t.x ? 0 : t.xMax - t.x), (t.height = t.yMax < t.y ? 0 : t.yMax - t.y), this.currentBoxContains(t))) return;
                  var r = !1;
                  this.currentBBox.w !== t.width && ((this.currentBBox.w = t.width), this.shapeCont.setAttribute("width", t.width), (r = !0)), this.currentBBox.h !== t.height && ((this.currentBBox.h = t.height), this.shapeCont.setAttribute("height", t.height), (r = !0)), (r || this.currentBBox.x !== t.x || this.currentBBox.y !== t.y) && ((this.currentBBox.w = t.width), (this.currentBBox.h = t.height), (this.currentBBox.x = t.x), (this.currentBBox.y = t.y), this.shapeCont.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), (this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)"));
                }
              }),
              extendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement),
              (HTextElement.prototype.createContent = function () {
                if (((this.isMasked = this.checkMasks()), this.isMasked)) {
                  (this.renderType = "svg"), (this.compW = this.comp.data.w), (this.compH = this.comp.data.h), this.svgElement.setAttribute("width", this.compW), this.svgElement.setAttribute("height", this.compH);
                  var t = createNS("g");
                  this.maskedElement.appendChild(t), (this.innerElem = t);
                } else (this.renderType = "html"), (this.innerElem = this.layerElement);
                this.checkParenting();
              }),
              (HTextElement.prototype.buildNewText = function () {
                var t = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(t.l ? t.l.length : 0);
                var e = this.innerElem.style;
                (e.color = e.fill = t.fc ? this.buildColor(t.fc) : "rgba(0,0,0,0)"), t.sc && ((e.stroke = this.buildColor(t.sc)), (e.strokeWidth = t.sw + "px"));
                var r,
                  i,
                  s = this.globalData.fontManager.getFontByName(t.f);
                if (!this.globalData.fontManager.chars)
                  if (((e.fontSize = t.finalSize + "px"), (e.lineHeight = t.finalSize + "px"), s.fClass)) this.innerElem.className = s.fClass;
                  else {
                    e.fontFamily = s.fFamily;
                    var a = t.fWeight,
                      n = t.fStyle;
                    (e.fontStyle = n), (e.fontWeight = a);
                  }
                var o,
                  h,
                  l,
                  p = t.l;
                i = p.length;
                var f,
                  m = this.mHelper,
                  c = "",
                  d = 0;
                for (r = 0; r < i; r += 1) {
                  if ((this.globalData.fontManager.chars ? (this.textPaths[d] ? (o = this.textPaths[d]) : ((o = createNS("path")).setAttribute("stroke-linecap", "butt"), o.setAttribute("stroke-linejoin", "round"), o.setAttribute("stroke-miterlimit", "4")), this.isMasked || (this.textSpans[d] ? (l = (h = this.textSpans[d]).children[0]) : (((h = createTag("div")).style.lineHeight = 0), (l = createNS("svg")).appendChild(o), styleDiv(h)))) : this.isMasked ? (o = this.textPaths[d] ? this.textPaths[d] : createNS("text")) : this.textSpans[d] ? ((h = this.textSpans[d]), (o = this.textPaths[d])) : (styleDiv((h = createTag("span"))), styleDiv((o = createTag("span"))), h.appendChild(o)), this.globalData.fontManager.chars)) {
                    var u,
                      y = this.globalData.fontManager.getCharData(t.finalText[r], s.fStyle, this.globalData.fontManager.getFontByName(t.f).fFamily);
                    if (((u = y ? y.data : null), m.reset(), u && u.shapes && ((f = u.shapes[0].it), m.scale(t.finalSize / 100, t.finalSize / 100), (c = this.createPathShape(m, f)), o.setAttribute("d", c)), this.isMasked)) this.innerElem.appendChild(o);
                    else {
                      if ((this.innerElem.appendChild(h), u && u.shapes)) {
                        document.body.appendChild(l);
                        var g = l.getBBox();
                        l.setAttribute("width", g.width + 2), l.setAttribute("height", g.height + 2), l.setAttribute("viewBox", g.x - 1 + " " + (g.y - 1) + " " + (g.width + 2) + " " + (g.height + 2)), (l.style.transform = l.style.webkitTransform = "translate(" + (g.x - 1) + "px," + (g.y - 1) + "px)"), (p[r].yOffset = g.y - 1);
                      } else l.setAttribute("width", 1), l.setAttribute("height", 1);
                      h.appendChild(l);
                    }
                  } else (o.textContent = p[r].val), o.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xml:space", "preserve"), this.isMasked ? this.innerElem.appendChild(o) : (this.innerElem.appendChild(h), (o.style.transform = o.style.webkitTransform = "translate3d(0," + -t.finalSize / 1.2 + "px,0)"));
                  this.isMasked ? (this.textSpans[d] = o) : (this.textSpans[d] = h), (this.textSpans[d].style.display = "block"), (this.textPaths[d] = o), (d += 1);
                }
                for (; d < this.textSpans.length; ) (this.textSpans[d].style.display = "none"), (d += 1);
              }),
              (HTextElement.prototype.renderInnerContent = function () {
                if (this.data.singleShape) {
                  if (!this._isFirstFrame && !this.lettersChangedFlag) return;
                  this.isMasked && this.finalTransform._matMdf && (this.svgElement.setAttribute("viewBox", -this.finalTransform.mProp.p.v[0] + " " + -this.finalTransform.mProp.p.v[1] + " " + this.compW + " " + this.compH), (this.svgElement.style.transform = this.svgElement.style.webkitTransform = "translate(" + -this.finalTransform.mProp.p.v[0] + "px," + -this.finalTransform.mProp.p.v[1] + "px)"));
                }
                if ((this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag), this.lettersChangedFlag || this.textAnimator.lettersChangedFlag)) {
                  var t,
                    e,
                    r,
                    i,
                    s,
                    a = 0,
                    n = this.textAnimator.renderedLetters,
                    o = this.textProperty.currentData.l;
                  for (e = o.length, t = 0; t < e; t += 1) o[t].n ? (a += 1) : ((i = this.textSpans[t]), (s = this.textPaths[t]), (r = n[a]), (a += 1), r._mdf.m && (this.isMasked ? i.setAttribute("transform", r.m) : (i.style.transform = i.style.webkitTransform = r.m)), (i.style.opacity = r.o), r.sw && r._mdf.sw && s.setAttribute("stroke-width", r.sw), r.sc && r._mdf.sc && s.setAttribute("stroke", r.sc), r.fc && r._mdf.fc && (s.setAttribute("fill", r.fc), (s.style.color = r.fc)));
                  if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {
                    var h = this.innerElem.getBBox();
                    this.currentBBox.w !== h.width && ((this.currentBBox.w = h.width), this.svgElement.setAttribute("width", h.width)), this.currentBBox.h !== h.height && ((this.currentBBox.h = h.height), this.svgElement.setAttribute("height", h.height));
                    (this.currentBBox.w === h.width + 2 && this.currentBBox.h === h.height + 2 && this.currentBBox.x === h.x - 1 && this.currentBBox.y === h.y - 1) || ((this.currentBBox.w = h.width + 2), (this.currentBBox.h = h.height + 2), (this.currentBBox.x = h.x - 1), (this.currentBBox.y = h.y - 1), this.svgElement.setAttribute("viewBox", this.currentBBox.x + " " + this.currentBBox.y + " " + this.currentBBox.w + " " + this.currentBBox.h), (this.svgElement.style.transform = this.svgElement.style.webkitTransform = "translate(" + this.currentBBox.x + "px," + this.currentBBox.y + "px)"));
                  }
                }
              }),
              extendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement),
              (HImageElement.prototype.createContent = function () {
                var t = this.globalData.getAssetsPath(this.assetData),
                  e = new Image();
                this.data.hasMask ? ((this.imageElem = createNS("image")), this.imageElem.setAttribute("width", this.assetData.w + "px"), this.imageElem.setAttribute("height", this.assetData.h + "px"), this.imageElem.setAttributeNS("http://www.w3.org/1999/xlink", "href", t), this.layerElement.appendChild(this.imageElem), this.baseElement.setAttribute("width", this.assetData.w), this.baseElement.setAttribute("height", this.assetData.h)) : this.layerElement.appendChild(e), (e.src = t), this.data.ln && this.baseElement.setAttribute("id", this.data.ln);
              }),
              extendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement),
              (HCameraElement.prototype.setup = function () {
                var t,
                  e,
                  r = this.comp.threeDElements.length;
                for (t = 0; t < r; t += 1) "3d" === (e = this.comp.threeDElements[t]).type && ((e.perspectiveElem.style.perspective = e.perspectiveElem.style.webkitPerspective = this.pe.v + "px"), (e.container.style.transformOrigin = e.container.style.mozTransformOrigin = e.container.style.webkitTransformOrigin = "0px 0px 0px"), (e.perspectiveElem.style.transform = e.perspectiveElem.style.webkitTransform = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)"));
              }),
              (HCameraElement.prototype.createElements = function () {}),
              (HCameraElement.prototype.hide = function () {}),
              (HCameraElement.prototype.renderFrame = function () {
                var t,
                  e,
                  r = this._isFirstFrame;
                if (this.hierarchy) for (e = this.hierarchy.length, t = 0; t < e; t += 1) r = this.hierarchy[t].finalTransform.mProp._mdf || r;
                if (r || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {
                  if ((this.mat.reset(), this.hierarchy))
                    for (t = e = this.hierarchy.length - 1; t >= 0; t -= 1) {
                      var i = this.hierarchy[t].finalTransform.mProp;
                      this.mat.translate(-i.p.v[0], -i.p.v[1], i.p.v[2]), this.mat.rotateX(-i.or.v[0]).rotateY(-i.or.v[1]).rotateZ(i.or.v[2]), this.mat.rotateX(-i.rx.v).rotateY(-i.ry.v).rotateZ(i.rz.v), this.mat.scale(1 / i.s.v[0], 1 / i.s.v[1], 1 / i.s.v[2]), this.mat.translate(i.a.v[0], i.a.v[1], i.a.v[2]);
                    }
                  if ((this.p ? this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]) : this.mat.translate(-this.px.v, -this.py.v, this.pz.v), this.a)) {
                    var s;
                    s = this.p ? [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]] : [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];
                    var a = Math.sqrt(Math.pow(s[0], 2) + Math.pow(s[1], 2) + Math.pow(s[2], 2)),
                      n = [s[0] / a, s[1] / a, s[2] / a],
                      o = Math.sqrt(n[2] * n[2] + n[0] * n[0]),
                      h = Math.atan2(n[1], o),
                      l = Math.atan2(n[0], -n[2]);
                    this.mat.rotateY(l).rotateX(-h);
                  }
                  this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v), this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]), this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0), this.mat.translate(0, 0, this.pe.v);
                  var p = !this._prevMat.equals(this.mat);
                  if ((p || this.pe._mdf) && this.comp.threeDElements) {
                    var f;
                    for (e = this.comp.threeDElements.length, t = 0; t < e; t += 1) "3d" === (f = this.comp.threeDElements[t]).type && (p && (f.container.style.transform = f.container.style.webkitTransform = this.mat.toCSS()), this.pe._mdf && (f.perspectiveElem.style.perspective = f.perspectiveElem.style.webkitPerspective = this.pe.v + "px"));
                    this.mat.clone(this._prevMat);
                  }
                }
                this._isFirstFrame = !1;
              }),
              (HCameraElement.prototype.prepareFrame = function (t) {
                this.prepareProperties(t, !0);
              }),
              (HCameraElement.prototype.destroy = function () {}),
              (HCameraElement.prototype.getBaseElement = function () {
                return null;
              }),
              (HEffects.prototype.renderFrame = function () {});
            var animationManager = (function () {
                var t = {},
                  e = [],
                  r = 0,
                  i = 0,
                  s = 0,
                  a = !0,
                  n = !1;
                function o(t) {
                  for (var r = 0, s = t.target; r < i; ) e[r].animation === s && (e.splice(r, 1), (r -= 1), (i -= 1), s.isPaused || p()), (r += 1);
                }
                function h(t, r) {
                  if (!t) return null;
                  for (var s = 0; s < i; ) {
                    if (e[s].elem == t && null !== e[s].elem) return e[s].animation;
                    s += 1;
                  }
                  var a = new AnimationItem();
                  return f(a, t), a.setData(t, r), a;
                }
                function l() {
                  (s += 1), d();
                }
                function p() {
                  s -= 1;
                }
                function f(t, r) {
                  t.addEventListener("destroy", o), t.addEventListener("_active", l), t.addEventListener("_idle", p), e.push({ elem: r, animation: t }), (i += 1);
                }
                function m(t) {
                  var o,
                    h = t - r;
                  for (o = 0; o < i; o += 1) e[o].animation.advanceTime(h);
                  (r = t), s && !n ? window.requestAnimationFrame(m) : (a = !0);
                }
                function c(t) {
                  (r = t), window.requestAnimationFrame(m);
                }
                function d() {
                  !n && s && a && (window.requestAnimationFrame(c), (a = !1));
                }
                return (
                  (t.registerAnimation = h),
                  (t.loadAnimation = function (t) {
                    var e = new AnimationItem();
                    return f(e, null), e.setParams(t), e;
                  }),
                  (t.setSpeed = function (t, r) {
                    var s;
                    for (s = 0; s < i; s += 1) e[s].animation.setSpeed(t, r);
                  }),
                  (t.setDirection = function (t, r) {
                    var s;
                    for (s = 0; s < i; s += 1) e[s].animation.setDirection(t, r);
                  }),
                  (t.play = function (t) {
                    var r;
                    for (r = 0; r < i; r += 1) e[r].animation.play(t);
                  }),
                  (t.pause = function (t) {
                    var r;
                    for (r = 0; r < i; r += 1) e[r].animation.pause(t);
                  }),
                  (t.stop = function (t) {
                    var r;
                    for (r = 0; r < i; r += 1) e[r].animation.stop(t);
                  }),
                  (t.togglePause = function (t) {
                    var r;
                    for (r = 0; r < i; r += 1) e[r].animation.togglePause(t);
                  }),
                  (t.searchAnimations = function (t, e, r) {
                    var i,
                      s = [].concat([].slice.call(document.getElementsByClassName("lottie")), [].slice.call(document.getElementsByClassName("bodymovin"))),
                      a = s.length;
                    for (i = 0; i < a; i += 1) r && s[i].setAttribute("data-bm-type", r), h(s[i], t);
                    if (e && 0 === a) {
                      r || (r = "svg");
                      var n = document.getElementsByTagName("body")[0];
                      n.innerHTML = "";
                      var o = createTag("div");
                      (o.style.width = "100%"), (o.style.height = "100%"), o.setAttribute("data-bm-type", r), n.appendChild(o), h(o, t);
                    }
                  }),
                  (t.resize = function () {
                    var t;
                    for (t = 0; t < i; t += 1) e[t].animation.resize();
                  }),
                  (t.goToAndStop = function (t, r, s) {
                    var a;
                    for (a = 0; a < i; a += 1) e[a].animation.goToAndStop(t, r, s);
                  }),
                  (t.destroy = function (t) {
                    var r;
                    for (r = i - 1; r >= 0; r -= 1) e[r].animation.destroy(t);
                  }),
                  (t.freeze = function () {
                    n = !0;
                  }),
                  (t.unfreeze = function () {
                    (n = !1), d();
                  }),
                  (t.getRegisteredAnimations = function () {
                    var t,
                      r = e.length,
                      i = [];
                    for (t = 0; t < r; t += 1) i.push(e[t].animation);
                    return i;
                  }),
                  t
                );
              })(),
              AnimationItem = function () {
                (this._cbs = []), (this.name = ""), (this.path = ""), (this.isLoaded = !1), (this.currentFrame = 0), (this.currentRawFrame = 0), (this.firstFrame = 0), (this.totalFrames = 0), (this.frameRate = 0), (this.frameMult = 0), (this.playSpeed = 1), (this.playDirection = 1), (this.playCount = 0), (this.animationData = {}), (this.assets = []), (this.isPaused = !0), (this.autoplay = !1), (this.loop = !0), (this.renderer = null), (this.animationID = createElementID()), (this.assetsPath = ""), (this.timeCompleted = 0), (this.segmentPos = 0), (this.subframeEnabled = subframeEnabled), (this.segments = []), (this._idle = !0), (this._completedLoop = !1), (this.projectInterface = ProjectInterface()), (this.imagePreloader = new ImagePreloader());
              };
            extendPrototype([BaseEvent], AnimationItem),
              (AnimationItem.prototype.setParams = function (t) {
                t.context && (this.context = t.context), (t.wrapper || t.container) && (this.wrapper = t.wrapper || t.container);
                var e = t.animType ? t.animType : t.renderer ? t.renderer : "svg";
                switch (e) {
                  case "canvas":
                    this.renderer = new CanvasRenderer(this, t.rendererSettings);
                    break;
                  case "svg":
                    this.renderer = new SVGRenderer(this, t.rendererSettings);
                    break;
                  default:
                    this.renderer = new HybridRenderer(this, t.rendererSettings);
                }
                this.renderer.setProjectInterface(this.projectInterface),
                  (this.animType = e),
                  "" === t.loop || null === t.loop || (!1 === t.loop ? (this.loop = !1) : !0 === t.loop ? (this.loop = !0) : (this.loop = parseInt(t.loop))),
                  (this.autoplay = !("autoplay" in t) || t.autoplay),
                  (this.name = t.name ? t.name : ""),
                  (this.autoloadSegments = !t.hasOwnProperty("autoloadSegments") || t.autoloadSegments),
                  (this.assetsPath = t.assetsPath),
                  t.animationData
                    ? this.configAnimation(t.animationData)
                    : t.path &&
                      (-1 !== t.path.lastIndexOf("\\") ? (this.path = t.path.substr(0, t.path.lastIndexOf("\\") + 1)) : (this.path = t.path.substr(0, t.path.lastIndexOf("/") + 1)),
                      (this.fileName = t.path.substr(t.path.lastIndexOf("/") + 1)),
                      (this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf(".json"))),
                      assetLoader.load(
                        t.path,
                        this.configAnimation.bind(this),
                        function () {
                          this.trigger("data_failed");
                        }.bind(this)
                      )),
                  (this.initialSegment = t.initialSegment);
              }),
              (AnimationItem.prototype.setData = function (t, e) {
                var r = { wrapper: t, animationData: e ? ("object" == typeof e ? e : JSON.parse(e)) : null },
                  i = t.attributes;
                (r.path = i.getNamedItem("data-animation-path") ? i.getNamedItem("data-animation-path").value : i.getNamedItem("data-bm-path") ? i.getNamedItem("data-bm-path").value : i.getNamedItem("bm-path") ? i.getNamedItem("bm-path").value : ""), (r.animType = i.getNamedItem("data-anim-type") ? i.getNamedItem("data-anim-type").value : i.getNamedItem("data-bm-type") ? i.getNamedItem("data-bm-type").value : i.getNamedItem("bm-type") ? i.getNamedItem("bm-type").value : i.getNamedItem("data-bm-renderer") ? i.getNamedItem("data-bm-renderer").value : i.getNamedItem("bm-renderer") ? i.getNamedItem("bm-renderer").value : "canvas");
                var s = i.getNamedItem("data-anim-loop") ? i.getNamedItem("data-anim-loop").value : i.getNamedItem("data-bm-loop") ? i.getNamedItem("data-bm-loop").value : i.getNamedItem("bm-loop") ? i.getNamedItem("bm-loop").value : "";
                "" === s || (r.loop = "false" !== s && ("true" === s || parseInt(s)));
                var a = i.getNamedItem("data-anim-autoplay") ? i.getNamedItem("data-anim-autoplay").value : i.getNamedItem("data-bm-autoplay") ? i.getNamedItem("data-bm-autoplay").value : !i.getNamedItem("bm-autoplay") || i.getNamedItem("bm-autoplay").value;
                (r.autoplay = "false" !== a), (r.name = i.getNamedItem("data-name") ? i.getNamedItem("data-name").value : i.getNamedItem("data-bm-name") ? i.getNamedItem("data-bm-name").value : i.getNamedItem("bm-name") ? i.getNamedItem("bm-name").value : ""), "false" === (i.getNamedItem("data-anim-prerender") ? i.getNamedItem("data-anim-prerender").value : i.getNamedItem("data-bm-prerender") ? i.getNamedItem("data-bm-prerender").value : i.getNamedItem("bm-prerender") ? i.getNamedItem("bm-prerender").value : "") && (r.prerender = !1), this.setParams(r);
              }),
              (AnimationItem.prototype.includeLayers = function (t) {
                t.op > this.animationData.op && ((this.animationData.op = t.op), (this.totalFrames = Math.floor(t.op - this.animationData.ip)));
                var e,
                  r,
                  i = this.animationData.layers,
                  s = i.length,
                  a = t.layers,
                  n = a.length;
                for (r = 0; r < n; r += 1)
                  for (e = 0; e < s; ) {
                    if (i[e].id == a[r].id) {
                      i[e] = a[r];
                      break;
                    }
                    e += 1;
                  }
                if (((t.chars || t.fonts) && (this.renderer.globalData.fontManager.addChars(t.chars), this.renderer.globalData.fontManager.addFonts(t.fonts, this.renderer.globalData.defs)), t.assets)) for (s = t.assets.length, e = 0; e < s; e += 1) this.animationData.assets.push(t.assets[e]);
                (this.animationData.__complete = !1), dataManager.completeData(this.animationData, this.renderer.globalData.fontManager), this.renderer.includeLayers(t.layers), expressionsPlugin && expressionsPlugin.initExpressions(this), this.loadNextSegment();
              }),
              (AnimationItem.prototype.loadNextSegment = function () {
                var t = this.animationData.segments;
                if (!t || 0 === t.length || !this.autoloadSegments) return this.trigger("data_ready"), void (this.timeCompleted = this.totalFrames);
                var e = t.shift();
                this.timeCompleted = e.time * this.frameRate;
                var r = this.path + this.fileName + "_" + this.segmentPos + ".json";
                (this.segmentPos += 1),
                  assetLoader.load(
                    r,
                    this.includeLayers.bind(this),
                    function () {
                      this.trigger("data_failed");
                    }.bind(this)
                  );
              }),
              (AnimationItem.prototype.loadSegments = function () {
                this.animationData.segments || (this.timeCompleted = this.totalFrames), this.loadNextSegment();
              }),
              (AnimationItem.prototype.imagesLoaded = function () {
                this.trigger("loaded_images"), this.checkLoaded();
              }),
              (AnimationItem.prototype.preloadImages = function () {
                this.imagePreloader.setAssetsPath(this.assetsPath), this.imagePreloader.setPath(this.path), this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));
              }),
              (AnimationItem.prototype.configAnimation = function (t) {
                if (this.renderer)
                  try {
                    (this.animationData = t), this.initialSegment ? ((this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0])), (this.firstFrame = Math.round(this.initialSegment[0]))) : ((this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip)), (this.firstFrame = Math.round(this.animationData.ip))), this.renderer.configAnimation(t), t.assets || (t.assets = []), (this.assets = this.animationData.assets), (this.frameRate = this.animationData.fr), (this.frameMult = this.animationData.fr / 1e3), this.renderer.searchExtraCompositions(t.assets), this.trigger("config_ready"), this.preloadImages(), this.loadSegments(), this.updaFrameModifier(), this.waitForFontsLoaded();
                  } catch (e) {
                    this.triggerConfigError(e);
                  }
              }),
              (AnimationItem.prototype.waitForFontsLoaded = function () {
                this.renderer && (this.renderer.globalData.fontManager.loaded() ? this.checkLoaded() : setTimeout(this.waitForFontsLoaded.bind(this), 20));
              }),
              (AnimationItem.prototype.checkLoaded = function () {
                this.isLoaded ||
                  !this.renderer.globalData.fontManager.loaded() ||
                  (!this.imagePreloader.loaded() && "canvas" === this.renderer.rendererType) ||
                  ((this.isLoaded = !0),
                  dataManager.completeData(this.animationData, this.renderer.globalData.fontManager),
                  expressionsPlugin && expressionsPlugin.initExpressions(this),
                  this.renderer.initItems(),
                  setTimeout(
                    function () {
                      this.trigger("DOMLoaded");
                    }.bind(this),
                    0
                  ),
                  this.gotoFrame(),
                  this.autoplay && this.play());
              }),
              (AnimationItem.prototype.resize = function () {
                this.renderer.updateContainerSize();
              }),
              (AnimationItem.prototype.setSubframe = function (t) {
                this.subframeEnabled = !!t;
              }),
              (AnimationItem.prototype.gotoFrame = function () {
                (this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame), this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted && (this.currentFrame = this.timeCompleted), this.trigger("enterFrame"), this.renderFrame();
              }),
              (AnimationItem.prototype.renderFrame = function () {
                if (!1 !== this.isLoaded)
                  try {
                    this.renderer.renderFrame(this.currentFrame + this.firstFrame);
                  } catch (t) {
                    this.triggerRenderFrameError(t);
                  }
              }),
              (AnimationItem.prototype.play = function (t) {
                (t && this.name != t) || (!0 === this.isPaused && ((this.isPaused = !1), this._idle && ((this._idle = !1), this.trigger("_active"))));
              }),
              (AnimationItem.prototype.pause = function (t) {
                (t && this.name != t) || (!1 === this.isPaused && ((this.isPaused = !0), (this._idle = !0), this.trigger("_idle")));
              }),
              (AnimationItem.prototype.togglePause = function (t) {
                (t && this.name != t) || (!0 === this.isPaused ? this.play() : this.pause());
              }),
              (AnimationItem.prototype.stop = function (t) {
                (t && this.name != t) || (this.pause(), (this.playCount = 0), (this._completedLoop = !1), this.setCurrentRawFrameValue(0));
              }),
              (AnimationItem.prototype.goToAndStop = function (t, e, r) {
                (r && this.name != r) || (e ? this.setCurrentRawFrameValue(t) : this.setCurrentRawFrameValue(t * this.frameModifier), this.pause());
              }),
              (AnimationItem.prototype.goToAndPlay = function (t, e, r) {
                this.goToAndStop(t, e, r), this.play();
              }),
              (AnimationItem.prototype.advanceTime = function (t) {
                if (!0 !== this.isPaused && !1 !== this.isLoaded) {
                  var e = this.currentRawFrame + t * this.frameModifier,
                    r = !1;
                  e >= this.totalFrames - 1 && this.frameModifier > 0 ? (this.loop && this.playCount !== this.loop ? (e >= this.totalFrames ? ((this.playCount += 1), this.checkSegments(e % this.totalFrames) || (this.setCurrentRawFrameValue(e % this.totalFrames), (this._completedLoop = !0), this.trigger("loopComplete"))) : this.setCurrentRawFrameValue(e)) : this.checkSegments(e > this.totalFrames ? e % this.totalFrames : 0) || ((r = !0), (e = this.totalFrames - 1))) : e < 0 ? this.checkSegments(e % this.totalFrames) || (!this.loop || (this.playCount-- <= 0 && !0 !== this.loop) ? ((r = !0), (e = 0)) : (this.setCurrentRawFrameValue(this.totalFrames + (e % this.totalFrames)), this._completedLoop ? this.trigger("loopComplete") : (this._completedLoop = !0))) : this.setCurrentRawFrameValue(e), r && (this.setCurrentRawFrameValue(e), this.pause(), this.trigger("complete"));
                }
              }),
              (AnimationItem.prototype.adjustSegment = function (t, e) {
                (this.playCount = 0), t[1] < t[0] ? (this.frameModifier > 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(-1)), (this.timeCompleted = this.totalFrames = t[0] - t[1]), (this.firstFrame = t[1]), this.setCurrentRawFrameValue(this.totalFrames - 0.001 - e)) : t[1] > t[0] && (this.frameModifier < 0 && (this.playSpeed < 0 ? this.setSpeed(-this.playSpeed) : this.setDirection(1)), (this.timeCompleted = this.totalFrames = t[1] - t[0]), (this.firstFrame = t[0]), this.setCurrentRawFrameValue(0.001 + e)), this.trigger("segmentStart");
              }),
              (AnimationItem.prototype.setSegment = function (t, e) {
                var r = -1;
                this.isPaused && (this.currentRawFrame + this.firstFrame < t ? (r = t) : this.currentRawFrame + this.firstFrame > e && (r = e - t)), (this.firstFrame = t), (this.timeCompleted = this.totalFrames = e - t), -1 !== r && this.goToAndStop(r, !0);
              }),
              (AnimationItem.prototype.playSegments = function (t, e) {
                if ((e && (this.segments.length = 0), "object" == typeof t[0])) {
                  var r,
                    i = t.length;
                  for (r = 0; r < i; r += 1) this.segments.push(t[r]);
                } else this.segments.push(t);
                this.segments.length && e && this.adjustSegment(this.segments.shift(), 0), this.isPaused && this.play();
              }),
              (AnimationItem.prototype.resetSegments = function (t) {
                (this.segments.length = 0), this.segments.push([this.animationData.ip, this.animationData.op]), t && this.checkSegments(0);
              }),
              (AnimationItem.prototype.checkSegments = function (t) {
                return !!this.segments.length && (this.adjustSegment(this.segments.shift(), t), !0);
              }),
              (AnimationItem.prototype.destroy = function (t) {
                (t && this.name != t) || !this.renderer || (this.renderer.destroy(), this.imagePreloader.destroy(), this.trigger("destroy"), (this._cbs = null), (this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null), (this.renderer = null));
              }),
              (AnimationItem.prototype.setCurrentRawFrameValue = function (t) {
                (this.currentRawFrame = t), this.gotoFrame();
              }),
              (AnimationItem.prototype.setSpeed = function (t) {
                (this.playSpeed = t), this.updaFrameModifier();
              }),
              (AnimationItem.prototype.setDirection = function (t) {
                (this.playDirection = t < 0 ? -1 : 1), this.updaFrameModifier();
              }),
              (AnimationItem.prototype.updaFrameModifier = function () {
                this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;
              }),
              (AnimationItem.prototype.getPath = function () {
                return this.path;
              }),
              (AnimationItem.prototype.getAssetsPath = function (t) {
                var e = "";
                if (t.e) e = t.p;
                else if (this.assetsPath) {
                  var r = t.p;
                  -1 !== r.indexOf("images/") && (r = r.split("/")[1]), (e = this.assetsPath + r);
                } else (e = this.path), (e += t.u ? t.u : ""), (e += t.p);
                return e;
              }),
              (AnimationItem.prototype.getAssetData = function (t) {
                for (var e = 0, r = this.assets.length; e < r; ) {
                  if (t == this.assets[e].id) return this.assets[e];
                  e += 1;
                }
              }),
              (AnimationItem.prototype.hide = function () {
                this.renderer.hide();
              }),
              (AnimationItem.prototype.show = function () {
                this.renderer.show();
              }),
              (AnimationItem.prototype.getDuration = function (t) {
                return t ? this.totalFrames : this.totalFrames / this.frameRate;
              }),
              (AnimationItem.prototype.trigger = function (t) {
                if (this._cbs && this._cbs[t])
                  switch (t) {
                    case "enterFrame":
                      this.triggerEvent(t, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameModifier));
                      break;
                    case "loopComplete":
                      this.triggerEvent(t, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult));
                      break;
                    case "complete":
                      this.triggerEvent(t, new BMCompleteEvent(t, this.frameMult));
                      break;
                    case "segmentStart":
                      this.triggerEvent(t, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames));
                      break;
                    case "destroy":
                      this.triggerEvent(t, new BMDestroyEvent(t, this));
                      break;
                    default:
                      this.triggerEvent(t);
                  }
                "enterFrame" === t && this.onEnterFrame && this.onEnterFrame.call(this, new BMEnterFrameEvent(t, this.currentFrame, this.totalFrames, this.frameMult)), "loopComplete" === t && this.onLoopComplete && this.onLoopComplete.call(this, new BMCompleteLoopEvent(t, this.loop, this.playCount, this.frameMult)), "complete" === t && this.onComplete && this.onComplete.call(this, new BMCompleteEvent(t, this.frameMult)), "segmentStart" === t && this.onSegmentStart && this.onSegmentStart.call(this, new BMSegmentStartEvent(t, this.firstFrame, this.totalFrames)), "destroy" === t && this.onDestroy && this.onDestroy.call(this, new BMDestroyEvent(t, this));
              }),
              (AnimationItem.prototype.triggerRenderFrameError = function (t) {
                var e = new BMRenderFrameErrorEvent(t, this.currentFrame);
                this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
              }),
              (AnimationItem.prototype.triggerConfigError = function (t) {
                var e = new BMConfigErrorEvent(t, this.currentFrame);
                this.triggerEvent("error", e), this.onError && this.onError.call(this, e);
              });
            var Expressions = (function () {
              var t = {};
              return (
                (t.initExpressions = function (t) {
                  var e = 0,
                    r = [];
                  (t.renderer.compInterface = CompExpressionInterface(t.renderer)),
                    t.renderer.globalData.projectInterface.registerComposition(t.renderer),
                    (t.renderer.globalData.pushExpression = function () {
                      e += 1;
                    }),
                    (t.renderer.globalData.popExpression = function () {
                      0 == (e -= 1) &&
                        (function () {
                          var t,
                            e = r.length;
                          for (t = 0; t < e; t += 1) r[t].release();
                          r.length = 0;
                        })();
                    }),
                    (t.renderer.globalData.registerExpressionProperty = function (t) {
                      -1 === r.indexOf(t) && r.push(t);
                    });
                }),
                t
              );
            })();
            expressionsPlugin = Expressions;
            var ExpressionManager = (function () {
                var ob = {},
                  Math = BMMath,
                  window = null,
                  document = null;
                function $bm_isInstanceOfArray(t) {
                  return t.constructor === Array || t.constructor === Float32Array;
                }
                function isNumerable(t, e) {
                  return "number" === t || "boolean" === t || "string" === t || e instanceof Number;
                }
                function $bm_neg(t) {
                  var e = typeof t;
                  if ("number" === e || "boolean" === e || t instanceof Number) return -t;
                  if ($bm_isInstanceOfArray(t)) {
                    var r,
                      i = t.length,
                      s = [];
                    for (r = 0; r < i; r += 1) s[r] = -t[r];
                    return s;
                  }
                  return t.propType ? t.v : void 0;
                }
                var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, "easeIn").get,
                  easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, "easeOut").get,
                  easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, "easeInOut").get;
                function sum(t, e) {
                  var r = typeof t,
                    i = typeof e;
                  if ("string" === r || "string" === i) return t + e;
                  if (isNumerable(r, t) && isNumerable(i, e)) return t + e;
                  if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return ((t = t.slice(0))[0] = t[0] + e), t;
                  if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t + e[0]), e;
                  if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; ) ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? (o[s] = t[s] + e[s]) : (o[s] = void 0 === e[s] ? t[s] : t[s] || e[s]), (s += 1);
                    return o;
                  }
                  return 0;
                }
                var add = sum;
                function sub(t, e) {
                  var r = typeof t,
                    i = typeof e;
                  if (isNumerable(r, t) && isNumerable(i, e)) return "string" === r && (t = parseInt(t)), "string" === i && (e = parseInt(e)), t - e;
                  if ($bm_isInstanceOfArray(t) && isNumerable(i, e)) return ((t = t.slice(0))[0] = t[0] - e), t;
                  if (isNumerable(r, t) && $bm_isInstanceOfArray(e)) return ((e = e.slice(0))[0] = t - e[0]), e;
                  if ($bm_isInstanceOfArray(t) && $bm_isInstanceOfArray(e)) {
                    for (var s = 0, a = t.length, n = e.length, o = []; s < a || s < n; ) ("number" == typeof t[s] || t[s] instanceof Number) && ("number" == typeof e[s] || e[s] instanceof Number) ? (o[s] = t[s] - e[s]) : (o[s] = void 0 === e[s] ? t[s] : t[s] || e[s]), (s += 1);
                    return o;
                  }
                  return 0;
                }
                function mul(t, e) {
                  var r,
                    i,
                    s,
                    a = typeof t,
                    n = typeof e;
                  if (isNumerable(a, t) && isNumerable(n, e)) return t * e;
                  if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                    for (s = t.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t[i] * e;
                    return r;
                  }
                  if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                    for (s = e.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t * e[i];
                    return r;
                  }
                  return 0;
                }
                function div(t, e) {
                  var r,
                    i,
                    s,
                    a = typeof t,
                    n = typeof e;
                  if (isNumerable(a, t) && isNumerable(n, e)) return t / e;
                  if ($bm_isInstanceOfArray(t) && isNumerable(n, e)) {
                    for (s = t.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t[i] / e;
                    return r;
                  }
                  if (isNumerable(a, t) && $bm_isInstanceOfArray(e)) {
                    for (s = e.length, r = createTypedArray("float32", s), i = 0; i < s; i += 1) r[i] = t / e[i];
                    return r;
                  }
                  return 0;
                }
                function mod(t, e) {
                  return "string" == typeof t && (t = parseInt(t)), "string" == typeof e && (e = parseInt(e)), t % e;
                }
                var $bm_sum = sum,
                  $bm_sub = sub,
                  $bm_mul = mul,
                  $bm_div = div,
                  $bm_mod = mod;
                function clamp(t, e, r) {
                  if (e > r) {
                    var i = r;
                    (r = e), (e = i);
                  }
                  return Math.min(Math.max(t, e), r);
                }
                function radiansToDegrees(t) {
                  return t / degToRads;
                }
                var radians_to_degrees = radiansToDegrees;
                function degreesToRadians(t) {
                  return t * degToRads;
                }
                var degrees_to_radians = radiansToDegrees,
                  helperLengthArray = [0, 0, 0, 0, 0, 0];
                function length(t, e) {
                  if ("number" == typeof t || t instanceof Number) return (e = e || 0), Math.abs(t - e);
                  e || (e = helperLengthArray);
                  var r,
                    i = Math.min(t.length, e.length),
                    s = 0;
                  for (r = 0; r < i; r += 1) s += Math.pow(e[r] - t[r], 2);
                  return Math.sqrt(s);
                }
                function normalize(t) {
                  return div(t, length(t));
                }
                function rgbToHsl(t) {
                  var e,
                    r,
                    i = t[0],
                    s = t[1],
                    a = t[2],
                    n = Math.max(i, s, a),
                    o = Math.min(i, s, a),
                    h = (n + o) / 2;
                  if (n == o) e = r = 0;
                  else {
                    var l = n - o;
                    switch (((r = h > 0.5 ? l / (2 - n - o) : l / (n + o)), n)) {
                      case i:
                        e = (s - a) / l + (s < a ? 6 : 0);
                        break;
                      case s:
                        e = (a - i) / l + 2;
                        break;
                      case a:
                        e = (i - s) / l + 4;
                    }
                    e /= 6;
                  }
                  return [e, r, h, t[3]];
                }
                function hue2rgb(t, e, r) {
                  return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? t + 6 * (e - t) * r : r < 0.5 ? e : r < 2 / 3 ? t + (e - t) * (2 / 3 - r) * 6 : t;
                }
                function hslToRgb(t) {
                  var e,
                    r,
                    i,
                    s = t[0],
                    a = t[1],
                    n = t[2];
                  if (0 === a) e = r = i = n;
                  else {
                    var o = n < 0.5 ? n * (1 + a) : n + a - n * a,
                      h = 2 * n - o;
                    (e = hue2rgb(h, o, s + 1 / 3)), (r = hue2rgb(h, o, s)), (i = hue2rgb(h, o, s - 1 / 3));
                  }
                  return [e, r, i, t[3]];
                }
                function linear(t, e, r, i, s) {
                  if (((void 0 !== i && void 0 !== s) || ((i = e), (s = r), (e = 0), (r = 1)), r < e)) {
                    var a = r;
                    (r = e), (e = a);
                  }
                  if (t <= e) return i;
                  if (t >= r) return s;
                  var n = r === e ? 0 : (t - e) / (r - e);
                  if (!i.length) return i + (s - i) * n;
                  var o,
                    h = i.length,
                    l = createTypedArray("float32", h);
                  for (o = 0; o < h; o += 1) l[o] = i[o] + (s[o] - i[o]) * n;
                  return l;
                }
                function random(t, e) {
                  if ((void 0 === e && (void 0 === t ? ((t = 0), (e = 1)) : ((e = t), (t = void 0))), e.length)) {
                    var r,
                      i = e.length;
                    t || (t = createTypedArray("float32", i));
                    var s = createTypedArray("float32", i),
                      a = BMMath.random();
                    for (r = 0; r < i; r += 1) s[r] = t[r] + a * (e[r] - t[r]);
                    return s;
                  }
                  return void 0 === t && (t = 0), t + BMMath.random() * (e - t);
                }
                function createPath(t, e, r, i) {
                  var s,
                    a = t.length,
                    n = shape_pool.newElement();
                  n.setPathData(!!i, a);
                  var o,
                    h,
                    l = [0, 0];
                  for (s = 0; s < a; s += 1) (o = e && e[s] ? e[s] : l), (h = r && r[s] ? r[s] : l), n.setTripleAt(t[s][0], t[s][1], h[0] + t[s][0], h[1] + t[s][1], o[0] + t[s][0], o[1] + t[s][1], s, !0);
                  return n;
                }
                function initiateExpression(elem, data, property) {
                  var val = data.x,
                    needsVelocity = /velocity(?![\w\d])/.test(val),
                    _needsRandom = -1 !== val.indexOf("random"),
                    elemType = elem.data.ty,
                    transform,
                    $bm_transform,
                    content,
                    effect,
                    thisProperty = property;
                  (thisProperty.valueAtTime = thisProperty.getValueAtTime),
                    Object.defineProperty(thisProperty, "value", {
                      get: function () {
                        return thisProperty.v;
                      },
                    }),
                    (elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate),
                    (elem.comp.displayStartTime = 0);
                  var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                    outPoint = elem.data.op / elem.comp.globalData.frameRate,
                    width = elem.data.sw ? elem.data.sw : 0,
                    height = elem.data.sh ? elem.data.sh : 0,
                    name = elem.data.nm,
                    loopIn,
                    loop_in,
                    loopOut,
                    loop_out,
                    smooth,
                    toWorld,
                    fromWorld,
                    fromComp,
                    toComp,
                    fromCompToSurface,
                    position,
                    rotation,
                    anchorPoint,
                    scale,
                    thisLayer,
                    thisComp,
                    mask,
                    valueAtTime,
                    velocityAtTime,
                    __expression_functions = [],
                    scoped_bm_rt;
                  if (data.xf) {
                    var i,
                      len = data.xf.length;
                    for (i = 0; i < len; i += 1) __expression_functions[i] = eval("(function(){ return " + data.xf[i] + "}())");
                  }
                  var expression_function = eval("[function _expression_function(){" + val + ";scoped_bm_rt=$bm_rt}]")[0],
                    numKeys = property.kf ? data.k.length : 0,
                    active = !this.data || !0 !== this.data.hd,
                    wiggle = function (t, e) {
                      var r,
                        i,
                        s = this.pv.length ? this.pv.length : 1,
                        a = createTypedArray("float32", s);
                      var n = Math.floor(5 * time);
                      for (r = 0, i = 0; r < n; ) {
                        for (i = 0; i < s; i += 1) a[i] += -e + 2 * e * BMMath.random();
                        r += 1;
                      }
                      var o = 5 * time,
                        h = o - Math.floor(o),
                        l = createTypedArray("float32", s);
                      if (s > 1) {
                        for (i = 0; i < s; i += 1) l[i] = this.pv[i] + a[i] + (-e + 2 * e * BMMath.random()) * h;
                        return l;
                      }
                      return this.pv + a[0] + (-e + 2 * e * BMMath.random()) * h;
                    }.bind(this);
                  function loopInDuration(t, e) {
                    return loopIn(t, e, !0);
                  }
                  function loopOutDuration(t, e) {
                    return loopOut(t, e, !0);
                  }
                  thisProperty.loopIn && ((loopIn = thisProperty.loopIn.bind(thisProperty)), (loop_in = loopIn)), thisProperty.loopOut && ((loopOut = thisProperty.loopOut.bind(thisProperty)), (loop_out = loopOut)), thisProperty.smooth && (smooth = thisProperty.smooth.bind(thisProperty)), this.getValueAtTime && (valueAtTime = this.getValueAtTime.bind(this)), this.getVelocityAtTime && (velocityAtTime = this.getVelocityAtTime.bind(this));
                  var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface),
                    time,
                    velocity,
                    value,
                    text,
                    textIndex,
                    textTotal,
                    selectorValue;
                  function lookAt(t, e) {
                    var r = [e[0] - t[0], e[1] - t[1], e[2] - t[2]],
                      i = Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) / degToRads;
                    return [-Math.atan2(r[1], r[2]) / degToRads, i, 0];
                  }
                  function easeOut(t, e, r, i, s) {
                    return applyEase(easeOutBez, t, e, r, i, s);
                  }
                  function easeIn(t, e, r, i, s) {
                    return applyEase(easeInBez, t, e, r, i, s);
                  }
                  function ease(t, e, r, i, s) {
                    return applyEase(easeInOutBez, t, e, r, i, s);
                  }
                  function applyEase(t, e, r, i, s, a) {
                    void 0 === s ? ((s = r), (a = i)) : (e = (e - r) / (i - r));
                    var n = t((e = e > 1 ? 1 : e < 0 ? 0 : e));
                    if ($bm_isInstanceOfArray(s)) {
                      var o,
                        h = s.length,
                        l = createTypedArray("float32", h);
                      for (o = 0; o < h; o += 1) l[o] = (a[o] - s[o]) * n + s[o];
                      return l;
                    }
                    return (a - s) * n + s;
                  }
                  function nearestKey(t) {
                    var e,
                      r,
                      i,
                      s = data.k.length;
                    if (data.k.length && "number" != typeof data.k[0])
                      if (((r = -1), (t *= elem.comp.globalData.frameRate) < data.k[0].t)) (r = 1), (i = data.k[0].t);
                      else {
                        for (e = 0; e < s - 1; e += 1) {
                          if (t === data.k[e].t) {
                            (r = e + 1), (i = data.k[e].t);
                            break;
                          }
                          if (t > data.k[e].t && t < data.k[e + 1].t) {
                            t - data.k[e].t > data.k[e + 1].t - t ? ((r = e + 2), (i = data.k[e + 1].t)) : ((r = e + 1), (i = data.k[e].t));
                            break;
                          }
                        }
                        -1 === r && ((r = e + 1), (i = data.k[e].t));
                      }
                    else (r = 0), (i = 0);
                    var a = {};
                    return (a.index = r), (a.time = i / elem.comp.globalData.frameRate), a;
                  }
                  function key(t) {
                    var e, r, i;
                    if (!data.k.length || "number" == typeof data.k[0]) throw new Error("The property has no keyframe at index " + t);
                    (t -= 1), (e = { time: data.k[t].t / elem.comp.globalData.frameRate, value: [] });
                    var s = data.k[t].hasOwnProperty("s") ? data.k[t].s : data.k[t - 1].e;
                    for (i = s.length, r = 0; r < i; r += 1) (e[r] = s[r]), (e.value[r] = s[r]);
                    return e;
                  }
                  function framesToTime(t, e) {
                    return e || (e = elem.comp.globalData.frameRate), t / e;
                  }
                  function timeToFrames(t, e) {
                    return t || 0 === t || (t = time), e || (e = elem.comp.globalData.frameRate), t * e;
                  }
                  function seedRandom(t) {
                    BMMath.seedrandom(randSeed + t);
                  }
                  function sourceRectAtTime() {
                    return elem.sourceRectAtTime();
                  }
                  function substring(t, e) {
                    return "string" == typeof value ? (void 0 === e ? value.substring(t) : value.substring(t, e)) : "";
                  }
                  function substr(t, e) {
                    return "string" == typeof value ? (void 0 === e ? value.substr(t) : value.substr(t, e)) : "";
                  }
                  function posterizeTime(t) {
                    (time = 0 === t ? 0 : Math.floor(time * t) / t), (value = valueAtTime(time));
                  }
                  var index = elem.data.ind,
                    hasParent = !(!elem.hierarchy || !elem.hierarchy.length),
                    parent,
                    randSeed = Math.floor(1e6 * Math.random()),
                    globalData = elem.globalData;
                  function executeExpression(t) {
                    return (
                      (value = t),
                      _needsRandom && seedRandom(randSeed),
                      this.frameExpressionId === elem.globalData.frameId && "textSelector" !== this.propType
                        ? value
                        : ("textSelector" === this.propType && ((textIndex = this.textIndex), (textTotal = this.textTotal), (selectorValue = this.selectorValue)),
                          thisLayer || ((text = elem.layerInterface.text), (thisLayer = elem.layerInterface), (thisComp = elem.comp.compInterface), (toWorld = thisLayer.toWorld.bind(thisLayer)), (fromWorld = thisLayer.fromWorld.bind(thisLayer)), (fromComp = thisLayer.fromComp.bind(thisLayer)), (toComp = thisLayer.toComp.bind(thisLayer)), (mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null), (fromCompToSurface = fromComp)),
                          transform || ((transform = elem.layerInterface("ADBE Transform Group")), ($bm_transform = transform), transform && (anchorPoint = transform.anchorPoint)),
                          4 !== elemType || content || (content = thisLayer("ADBE Root Vectors Group")),
                          effect || (effect = thisLayer(4)),
                          (hasParent = !(!elem.hierarchy || !elem.hierarchy.length)) && !parent && (parent = elem.hierarchy[0].layerInterface),
                          (time = this.comp.renderedFrame / this.comp.globalData.frameRate),
                          needsVelocity && (velocity = velocityAtTime(time)),
                          expression_function(),
                          (this.frameExpressionId = elem.globalData.frameId),
                          "shape" === scoped_bm_rt.propType && (scoped_bm_rt = scoped_bm_rt.v),
                          scoped_bm_rt)
                    );
                  }
                  return executeExpression;
                }
                return (ob.initiateExpression = initiateExpression), ob;
              })(),
              expressionHelpers = (function () {
                return {
                  searchExpressions: function (t, e, r) {
                    e.x && ((r.k = !0), (r.x = !0), (r.initiateExpression = ExpressionManager.initiateExpression), r.effectsSequence.push(r.initiateExpression(t, e, r).bind(r)));
                  },
                  getSpeedAtTime: function (t) {
                    var e = this.getValueAtTime(t),
                      r = this.getValueAtTime(t + -0.01),
                      i = 0;
                    if (e.length) {
                      var s;
                      for (s = 0; s < e.length; s += 1) i += Math.pow(r[s] - e[s], 2);
                      i = 100 * Math.sqrt(i);
                    } else i = 0;
                    return i;
                  },
                  getVelocityAtTime: function (t) {
                    if (void 0 !== this.vel) return this.vel;
                    var e,
                      r,
                      i = this.getValueAtTime(t),
                      s = this.getValueAtTime(t + -0.001);
                    if (i.length) for (e = createTypedArray("float32", i.length), r = 0; r < i.length; r += 1) e[r] = (s[r] - i[r]) / -0.001;
                    else e = (s - i) / -0.001;
                    return e;
                  },
                  getValueAtTime: function (t) {
                    return (t *= this.elem.globalData.frameRate), (t -= this.offsetTime) !== this._cachingAtTime.lastFrame && ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < t ? this._cachingAtTime.lastIndex : 0), (this._cachingAtTime.value = this.interpolateValue(t, this._cachingAtTime)), (this._cachingAtTime.lastFrame = t)), this._cachingAtTime.value;
                  },
                  getStaticValueAtTime: function () {
                    return this.pv;
                  },
                  setGroupProperty: function (t) {
                    this.propertyGroup = t;
                  },
                };
              })();
            !(function () {
              function t(t, e, r) {
                if (!this.k || !this.keyframes) return this.pv;
                t = t ? t.toLowerCase() : "";
                var i,
                  s,
                  a,
                  n,
                  o,
                  h = this.comp.renderedFrame,
                  l = this.keyframes,
                  p = l[l.length - 1].t;
                if (h <= p) return this.pv;
                if ((r ? (s = p - (i = e ? Math.abs(p - elem.comp.globalData.frameRate * e) : Math.max(0, p - this.elem.data.ip))) : ((!e || e > l.length - 1) && (e = l.length - 1), (i = p - (s = l[l.length - 1 - e].t))), "pingpong" === t)) {
                  if (Math.floor((h - s) / i) % 2 != 0) return this.getValueAtTime((i - ((h - s) % i) + s) / this.comp.globalData.frameRate, 0);
                } else {
                  if ("offset" === t) {
                    var f = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                      m = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                      c = this.getValueAtTime((((h - s) % i) + s) / this.comp.globalData.frameRate, 0),
                      d = Math.floor((h - s) / i);
                    if (this.pv.length) {
                      for (n = (o = new Array(f.length)).length, a = 0; a < n; a += 1) o[a] = (m[a] - f[a]) * d + c[a];
                      return o;
                    }
                    return (m - f) * d + c;
                  }
                  if ("continue" === t) {
                    var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                      y = this.getValueAtTime((p - 0.001) / this.comp.globalData.frameRate, 0);
                    if (this.pv.length) {
                      for (n = (o = new Array(u.length)).length, a = 0; a < n; a += 1) o[a] = u[a] + ((u[a] - y[a]) * ((h - p) / this.comp.globalData.frameRate)) / 5e-4;
                      return o;
                    }
                    return u + ((h - p) / 0.001) * (u - y);
                  }
                }
                return this.getValueAtTime((((h - s) % i) + s) / this.comp.globalData.frameRate, 0);
              }
              function e(t, e, r) {
                if (!this.k) return this.pv;
                t = t ? t.toLowerCase() : "";
                var i,
                  s,
                  a,
                  n,
                  o,
                  h = this.comp.renderedFrame,
                  l = this.keyframes,
                  p = l[0].t;
                if (h >= p) return this.pv;
                if ((r ? (s = p + (i = e ? Math.abs(elem.comp.globalData.frameRate * e) : Math.max(0, this.elem.data.op - p))) : ((!e || e > l.length - 1) && (e = l.length - 1), (i = (s = l[e].t) - p)), "pingpong" === t)) {
                  if (Math.floor((p - h) / i) % 2 == 0) return this.getValueAtTime((((p - h) % i) + p) / this.comp.globalData.frameRate, 0);
                } else {
                  if ("offset" === t) {
                    var f = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                      m = this.getValueAtTime(s / this.comp.globalData.frameRate, 0),
                      c = this.getValueAtTime((i - ((p - h) % i) + p) / this.comp.globalData.frameRate, 0),
                      d = Math.floor((p - h) / i) + 1;
                    if (this.pv.length) {
                      for (n = (o = new Array(f.length)).length, a = 0; a < n; a += 1) o[a] = c[a] - (m[a] - f[a]) * d;
                      return o;
                    }
                    return c - (m - f) * d;
                  }
                  if ("continue" === t) {
                    var u = this.getValueAtTime(p / this.comp.globalData.frameRate, 0),
                      y = this.getValueAtTime((p + 0.001) / this.comp.globalData.frameRate, 0);
                    if (this.pv.length) {
                      for (n = (o = new Array(u.length)).length, a = 0; a < n; a += 1) o[a] = u[a] + ((u[a] - y[a]) * (p - h)) / 0.001;
                      return o;
                    }
                    return u + ((u - y) * (p - h)) / 0.001;
                  }
                }
                return this.getValueAtTime((i - ((p - h) % i) + p) / this.comp.globalData.frameRate, 0);
              }
              function r(t, e) {
                if (!this.k) return this.pv;
                if (((t = 0.5 * (t || 0.4)), (e = Math.floor(e || 5)) <= 1)) return this.pv;
                var r,
                  i,
                  s = this.comp.renderedFrame / this.comp.globalData.frameRate,
                  a = s - t,
                  n = e > 1 ? (s + t - a) / (e - 1) : 1,
                  o = 0,
                  h = 0;
                for (r = this.pv.length ? createTypedArray("float32", this.pv.length) : 0; o < e; ) {
                  if (((i = this.getValueAtTime(a + o * n)), this.pv.length)) for (h = 0; h < this.pv.length; h += 1) r[h] += i[h];
                  else r += i;
                  o += 1;
                }
                if (this.pv.length) for (h = 0; h < this.pv.length; h += 1) r[h] /= e;
                else r /= e;
                return r;
              }
              var i = TransformPropertyFactory.getTransformProperty;
              TransformPropertyFactory.getTransformProperty = function (t, e, r) {
                var s = i(t, e, r);
                return (
                  s.dynamicProperties.length
                    ? (s.getValueAtTime = function (t) {
                        console.warn("Transform at time not supported");
                      }.bind(s))
                    : (s.getValueAtTime = function (t) {}.bind(s)),
                  (s.setGroupProperty = expressionHelpers.setGroupProperty),
                  s
                );
              };
              var s = PropertyFactory.getProp;
              PropertyFactory.getProp = function (i, a, n, o, h) {
                var l = s(i, a, n, o, h);
                l.kf ? (l.getValueAtTime = expressionHelpers.getValueAtTime.bind(l)) : (l.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(l)), (l.setGroupProperty = expressionHelpers.setGroupProperty), (l.loopOut = t), (l.loopIn = e), (l.smooth = r), (l.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(l)), (l.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(l)), (l.numKeys = 1 === a.a ? a.k.length : 0), (l.propertyIndex = a.ix);
                var p = 0;
                return 0 !== n && (p = createTypedArray("float32", 1 === a.a ? a.k[0].s.length : a.k.length)), (l._cachingAtTime = { lastFrame: initialDefaultFrame, lastIndex: 0, value: p }), expressionHelpers.searchExpressions(i, a, l), l.k && h.addDynamicProperty(l), l;
              };
              var a = ShapePropertyFactory.getConstructorFunction(),
                n = ShapePropertyFactory.getKeyframedConstructorFunction();
              function o() {}
              (o.prototype = {
                vertices: function (t, e) {
                  this.k && this.getValue();
                  var r = this.v;
                  void 0 !== e && (r = this.getValueAtTime(e, 0));
                  var i,
                    s = r._length,
                    a = r[t],
                    n = r.v,
                    o = createSizedArray(s);
                  for (i = 0; i < s; i += 1) o[i] = "i" === t || "o" === t ? [a[i][0] - n[i][0], a[i][1] - n[i][1]] : [a[i][0], a[i][1]];
                  return o;
                },
                points: function (t) {
                  return this.vertices("v", t);
                },
                inTangents: function (t) {
                  return this.vertices("i", t);
                },
                outTangents: function (t) {
                  return this.vertices("o", t);
                },
                isClosed: function () {
                  return this.v.c;
                },
                pointOnPath: function (t, e) {
                  var r = this.v;
                  void 0 !== e && (r = this.getValueAtTime(e, 0)), this._segmentsLength || (this._segmentsLength = bez.getSegmentsLength(r));
                  for (var i, s = this._segmentsLength, a = s.lengths, n = s.totalLength * t, o = 0, h = a.length, l = 0; o < h; ) {
                    if (l + a[o].addedLength > n) {
                      var p = o,
                        f = r.c && o === h - 1 ? 0 : o + 1,
                        m = (n - l) / a[o].addedLength;
                      i = bez.getPointInSegment(r.v[p], r.v[f], r.o[p], r.i[f], m, a[o]);
                      break;
                    }
                    (l += a[o].addedLength), (o += 1);
                  }
                  return i || (i = r.c ? [r.v[0][0], r.v[0][1]] : [r.v[r._length - 1][0], r.v[r._length - 1][1]]), i;
                },
                vectorOnPath: function (t, e, r) {
                  t = 1 == t ? (this.v.c ? 0 : 0.999) : t;
                  var i = this.pointOnPath(t, e),
                    s = this.pointOnPath(t + 0.001, e),
                    a = s[0] - i[0],
                    n = s[1] - i[1],
                    o = Math.sqrt(Math.pow(a, 2) + Math.pow(n, 2));
                  return 0 === o ? [0, 0] : "tangent" === r ? [a / o, n / o] : [-n / o, a / o];
                },
                tangentOnPath: function (t, e) {
                  return this.vectorOnPath(t, e, "tangent");
                },
                normalOnPath: function (t, e) {
                  return this.vectorOnPath(t, e, "normal");
                },
                setGroupProperty: expressionHelpers.setGroupProperty,
                getValueAtTime: expressionHelpers.getStaticValueAtTime,
              }),
                extendPrototype([o], a),
                extendPrototype([o], n),
                (n.prototype.getValueAtTime = function (t) {
                  return this._cachingAtTime || (this._cachingAtTime = { shapeValue: shape_pool.clone(this.pv), lastIndex: 0, lastTime: initialDefaultFrame }), (t *= this.elem.globalData.frameRate), (t -= this.offsetTime) !== this._cachingAtTime.lastTime && ((this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < t ? this._caching.lastIndex : 0), (this._cachingAtTime.lastTime = t), this.interpolateShape(t, this._cachingAtTime.shapeValue, this._cachingAtTime)), this._cachingAtTime.shapeValue;
                }),
                (n.prototype.initiateExpression = ExpressionManager.initiateExpression);
              var h = ShapePropertyFactory.getShapeProp;
              ShapePropertyFactory.getShapeProp = function (t, e, r, i, s) {
                var a = h(t, e, r, i, s);
                return (a.propertyIndex = e.ix), (a.lock = !1), 3 === r ? expressionHelpers.searchExpressions(t, e.pt, a) : 4 === r && expressionHelpers.searchExpressions(t, e.ks, a), a.k && t.addDynamicProperty(a), a;
              };
            })(),
              (function () {
                (TextProperty.prototype.getExpressionValue = function (t, e) {
                  var r = this.calculateExpression(e);
                  if (t.t !== r) {
                    var i = {};
                    return this.copyData(i, t), (i.t = r.toString()), (i.__complete = !1), i;
                  }
                  return t;
                }),
                  (TextProperty.prototype.searchProperty = function () {
                    var t = this.searchKeyframes(),
                      e = this.searchExpressions();
                    return (this.kf = t || e), this.kf;
                  }),
                  (TextProperty.prototype.searchExpressions = function () {
                    if (this.data.d.x) return (this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this)), this.addEffect(this.getExpressionValue.bind(this)), !0;
                  });
              })();
            var ShapeExpressionInterface = (function () {
                function t(t, f, m) {
                  var c,
                    d = [],
                    u = t ? t.length : 0;
                  for (c = 0; c < u; c += 1) "gr" == t[c].ty ? d.push(e(t[c], f[c], m)) : "fl" == t[c].ty ? d.push(r(t[c], f[c], m)) : "st" == t[c].ty ? d.push(i(t[c], f[c], m)) : "tm" == t[c].ty ? d.push(s(t[c], f[c], m)) : "tr" == t[c].ty || ("el" == t[c].ty ? d.push(a(t[c], f[c], m)) : "sr" == t[c].ty ? d.push(n(t[c], f[c], m)) : "sh" == t[c].ty ? d.push(p(t[c], f[c], m)) : "rc" == t[c].ty ? d.push(o(t[c], f[c], m)) : "rd" == t[c].ty ? d.push(h(t[c], f[c], m)) : "rp" == t[c].ty && d.push(l(t[c], f[c], m)));
                  return d;
                }
                function e(e, r, i) {
                  var s = function (t) {
                    switch (t) {
                      case "ADBE Vectors Group":
                      case "Contents":
                      case 2:
                        return s.content;
                      default:
                        return s.transform;
                    }
                  };
                  s.propertyGroup = function (t) {
                    return 1 === t ? s : i(t - 1);
                  };
                  var a = (function (e, r, i) {
                      var s,
                        a = function (t) {
                          for (var e = 0, r = s.length; e < r; ) {
                            if (s[e]._name === t || s[e].mn === t || s[e].propertyIndex === t || s[e].ix === t || s[e].ind === t) return s[e];
                            e += 1;
                          }
                          if ("number" == typeof t) return s[t - 1];
                        };
                      return (
                        (a.propertyGroup = function (t) {
                          return 1 === t ? a : i(t - 1);
                        }),
                        (s = t(e.it, r.it, a.propertyGroup)),
                        (a.numProperties = s.length),
                        (a.propertyIndex = e.cix),
                        (a._name = e.nm),
                        a
                      );
                    })(e, r, s.propertyGroup),
                    n = (function (t, e, r) {
                      function i(t) {
                        return 1 == t ? s : r(--t);
                      }
                      e.transform.mProps.o.setGroupProperty(i), e.transform.mProps.p.setGroupProperty(i), e.transform.mProps.a.setGroupProperty(i), e.transform.mProps.s.setGroupProperty(i), e.transform.mProps.r.setGroupProperty(i), e.transform.mProps.sk && (e.transform.mProps.sk.setGroupProperty(i), e.transform.mProps.sa.setGroupProperty(i));
                      function s(e) {
                        return t.a.ix === e || "Anchor Point" === e ? s.anchorPoint : t.o.ix === e || "Opacity" === e ? s.opacity : t.p.ix === e || "Position" === e ? s.position : t.r.ix === e || "Rotation" === e || "ADBE Vector Rotation" === e ? s.rotation : t.s.ix === e || "Scale" === e ? s.scale : (t.sk && t.sk.ix === e) || "Skew" === e ? s.skew : (t.sa && t.sa.ix === e) || "Skew Axis" === e ? s.skewAxis : void 0;
                      }
                      return e.transform.op.setGroupProperty(i), Object.defineProperties(s, { opacity: { get: ExpressionPropertyInterface(e.transform.mProps.o) }, position: { get: ExpressionPropertyInterface(e.transform.mProps.p) }, anchorPoint: { get: ExpressionPropertyInterface(e.transform.mProps.a) }, scale: { get: ExpressionPropertyInterface(e.transform.mProps.s) }, rotation: { get: ExpressionPropertyInterface(e.transform.mProps.r) }, skew: { get: ExpressionPropertyInterface(e.transform.mProps.sk) }, skewAxis: { get: ExpressionPropertyInterface(e.transform.mProps.sa) }, _name: { value: t.nm } }), (s.ty = "tr"), (s.mn = t.mn), (s.propertyGroup = r), s;
                    })(e.it[e.it.length - 1], r.it[r.it.length - 1], s.propertyGroup);
                  return (
                    (s.content = a),
                    (s.transform = n),
                    Object.defineProperty(s, "_name", {
                      get: function () {
                        return e.nm;
                      },
                    }),
                    (s.numProperties = e.np),
                    (s.propertyIndex = e.ix),
                    (s.nm = e.nm),
                    (s.mn = e.mn),
                    s
                  );
                }
                function r(t, e, r) {
                  function i(t) {
                    return "Color" === t || "color" === t ? i.color : "Opacity" === t || "opacity" === t ? i.opacity : void 0;
                  }
                  return Object.defineProperties(i, { color: { get: ExpressionPropertyInterface(e.c) }, opacity: { get: ExpressionPropertyInterface(e.o) }, _name: { value: t.nm }, mn: { value: t.mn } }), e.c.setGroupProperty(r), e.o.setGroupProperty(r), i;
                }
                function i(t, e, r) {
                  function i(t) {
                    return 1 === t ? ob : r(t - 1);
                  }
                  function s(t) {
                    return 1 === t ? h : i(t - 1);
                  }
                  function a(r) {
                    Object.defineProperty(h, t.d[r].nm, { get: ExpressionPropertyInterface(e.d.dataProps[r].p) });
                  }
                  var n,
                    o = t.d ? t.d.length : 0,
                    h = {};
                  for (n = 0; n < o; n += 1) a(n), e.d.dataProps[n].p.setGroupProperty(s);
                  function l(t) {
                    return "Color" === t || "color" === t ? l.color : "Opacity" === t || "opacity" === t ? l.opacity : "Stroke Width" === t || "stroke width" === t ? l.strokeWidth : void 0;
                  }
                  return (
                    Object.defineProperties(l, {
                      color: { get: ExpressionPropertyInterface(e.c) },
                      opacity: { get: ExpressionPropertyInterface(e.o) },
                      strokeWidth: { get: ExpressionPropertyInterface(e.w) },
                      dash: {
                        get: function () {
                          return h;
                        },
                      },
                      _name: { value: t.nm },
                      mn: { value: t.mn },
                    }),
                    e.c.setGroupProperty(i),
                    e.o.setGroupProperty(i),
                    e.w.setGroupProperty(i),
                    l
                  );
                }
                function s(t, e, r) {
                  function i(t) {
                    return 1 == t ? s : r(--t);
                  }
                  function s(e) {
                    return e === t.e.ix || "End" === e || "end" === e ? s.end : e === t.s.ix ? s.start : e === t.o.ix ? s.offset : void 0;
                  }
                  return (s.propertyIndex = t.ix), e.s.setGroupProperty(i), e.e.setGroupProperty(i), e.o.setGroupProperty(i), (s.propertyIndex = t.ix), (s.propertyGroup = r), Object.defineProperties(s, { start: { get: ExpressionPropertyInterface(e.s) }, end: { get: ExpressionPropertyInterface(e.e) }, offset: { get: ExpressionPropertyInterface(e.o) }, _name: { value: t.nm } }), (s.mn = t.mn), s;
                }
                function a(t, e, r) {
                  function i(t) {
                    return 1 == t ? a : r(--t);
                  }
                  a.propertyIndex = t.ix;
                  var s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                  function a(e) {
                    return t.p.ix === e ? a.position : t.s.ix === e ? a.size : void 0;
                  }
                  return s.s.setGroupProperty(i), s.p.setGroupProperty(i), Object.defineProperties(a, { size: { get: ExpressionPropertyInterface(s.s) }, position: { get: ExpressionPropertyInterface(s.p) }, _name: { value: t.nm } }), (a.mn = t.mn), a;
                }
                function n(t, e, r) {
                  function i(t) {
                    return 1 == t ? a : r(--t);
                  }
                  var s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                  function a(e) {
                    return t.p.ix === e ? a.position : t.r.ix === e ? a.rotation : t.pt.ix === e ? a.points : t.or.ix === e || "ADBE Vector Star Outer Radius" === e ? a.outerRadius : t.os.ix === e ? a.outerRoundness : !t.ir || (t.ir.ix !== e && "ADBE Vector Star Inner Radius" !== e) ? (t.is && t.is.ix === e ? a.innerRoundness : void 0) : a.innerRadius;
                  }
                  return (a.propertyIndex = t.ix), s.or.setGroupProperty(i), s.os.setGroupProperty(i), s.pt.setGroupProperty(i), s.p.setGroupProperty(i), s.r.setGroupProperty(i), t.ir && (s.ir.setGroupProperty(i), s.is.setGroupProperty(i)), Object.defineProperties(a, { position: { get: ExpressionPropertyInterface(s.p) }, rotation: { get: ExpressionPropertyInterface(s.r) }, points: { get: ExpressionPropertyInterface(s.pt) }, outerRadius: { get: ExpressionPropertyInterface(s.or) }, outerRoundness: { get: ExpressionPropertyInterface(s.os) }, innerRadius: { get: ExpressionPropertyInterface(s.ir) }, innerRoundness: { get: ExpressionPropertyInterface(s.is) }, _name: { value: t.nm } }), (a.mn = t.mn), a;
                }
                function o(t, e, r) {
                  function i(t) {
                    return 1 == t ? a : r(--t);
                  }
                  var s = "tm" === e.sh.ty ? e.sh.prop : e.sh;
                  function a(e) {
                    return t.p.ix === e ? a.position : t.r.ix === e ? a.roundness : t.s.ix === e || "Size" === e || "ADBE Vector Rect Size" === e ? a.size : void 0;
                  }
                  return (a.propertyIndex = t.ix), s.p.setGroupProperty(i), s.s.setGroupProperty(i), s.r.setGroupProperty(i), Object.defineProperties(a, { position: { get: ExpressionPropertyInterface(s.p) }, roundness: { get: ExpressionPropertyInterface(s.r) }, size: { get: ExpressionPropertyInterface(s.s) }, _name: { value: t.nm } }), (a.mn = t.mn), a;
                }
                function h(t, e, r) {
                  var i = e;
                  function s(e) {
                    if (t.r.ix === e || "Round Corners 1" === e) return s.radius;
                  }
                  return (
                    (s.propertyIndex = t.ix),
                    i.rd.setGroupProperty(function (t) {
                      return 1 == t ? s : r(--t);
                    }),
                    Object.defineProperties(s, { radius: { get: ExpressionPropertyInterface(i.rd) }, _name: { value: t.nm } }),
                    (s.mn = t.mn),
                    s
                  );
                }
                function l(t, e, r) {
                  function i(t) {
                    return 1 == t ? a : r(--t);
                  }
                  var s = e;
                  function a(e) {
                    return t.c.ix === e || "Copies" === e ? a.copies : t.o.ix === e || "Offset" === e ? a.offset : void 0;
                  }
                  return (a.propertyIndex = t.ix), s.c.setGroupProperty(i), s.o.setGroupProperty(i), Object.defineProperties(a, { copies: { get: ExpressionPropertyInterface(s.c) }, offset: { get: ExpressionPropertyInterface(s.o) }, _name: { value: t.nm } }), (a.mn = t.mn), a;
                }
                function p(t, e, r) {
                  var i = e.sh;
                  function s(t) {
                    if ("Shape" === t || "shape" === t || "Path" === t || "path" === t || "ADBE Vector Shape" === t || 2 === t) return s.path;
                  }
                  return (
                    i.setGroupProperty(function (t) {
                      return 1 == t ? s : r(--t);
                    }),
                    Object.defineProperties(s, {
                      path: {
                        get: function () {
                          return i.k && i.getValue(), i;
                        },
                      },
                      shape: {
                        get: function () {
                          return i.k && i.getValue(), i;
                        },
                      },
                      _name: { value: t.nm },
                      ix: { value: t.ix },
                      propertyIndex: { value: t.ix },
                      mn: { value: t.mn },
                    }),
                    s
                  );
                }
                return function (e, r, i) {
                  var s;
                  function a(t) {
                    if ("number" == typeof t) return s[t - 1];
                    for (var e = 0, r = s.length; e < r; ) {
                      if (s[e]._name === t) return s[e];
                      e += 1;
                    }
                  }
                  return (a.propertyGroup = i), (s = t(e, r, a)), (a.numProperties = s.length), a;
                };
              })(),
              TextExpressionInterface = function (t) {
                var e;
                function r() {}
                return (
                  Object.defineProperty(r, "sourceText", {
                    get: function () {
                      t.textProperty.getValue();
                      var r = t.textProperty.currentData.t;
                      return void 0 !== r && ((t.textProperty.currentData.t = void 0), ((e = new String(r)).value = r || new String(r))), e;
                    },
                  }),
                  r
                );
              },
              LayerExpressionInterface = (function () {
                function t(t, e) {
                  var r = new Matrix();
                  if ((r.reset(), this._elem.finalTransform.mProp.applyToMatrix(r), this._elem.hierarchy && this._elem.hierarchy.length)) {
                    var i,
                      s = this._elem.hierarchy.length;
                    for (i = 0; i < s; i += 1) this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(r);
                    return r.applyToPointArray(t[0], t[1], t[2] || 0);
                  }
                  return r.applyToPointArray(t[0], t[1], t[2] || 0);
                }
                function e(t, e) {
                  var r = new Matrix();
                  if ((r.reset(), this._elem.finalTransform.mProp.applyToMatrix(r), this._elem.hierarchy && this._elem.hierarchy.length)) {
                    var i,
                      s = this._elem.hierarchy.length;
                    for (i = 0; i < s; i += 1) this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(r);
                    return r.inversePoint(t);
                  }
                  return r.inversePoint(t);
                }
                function r(t) {
                  var e = new Matrix();
                  if ((e.reset(), this._elem.finalTransform.mProp.applyToMatrix(e), this._elem.hierarchy && this._elem.hierarchy.length)) {
                    var r,
                      i = this._elem.hierarchy.length;
                    for (r = 0; r < i; r += 1) this._elem.hierarchy[r].finalTransform.mProp.applyToMatrix(e);
                    return e.inversePoint(t);
                  }
                  return e.inversePoint(t);
                }
                function i() {
                  return [1, 1, 1, 1];
                }
                return function (s) {
                  var a;
                  function n(t) {
                    switch (t) {
                      case "ADBE Root Vectors Group":
                      case "Contents":
                      case 2:
                        return n.shapeInterface;
                      case 1:
                      case 6:
                      case "Transform":
                      case "transform":
                      case "ADBE Transform Group":
                        return a;
                      case 4:
                      case "ADBE Effect Parade":
                      case "effects":
                      case "Effects":
                        return n.effect;
                    }
                  }
                  (n.toWorld = t), (n.fromWorld = e), (n.toComp = t), (n.fromComp = r), (n.sampleImage = i), (n.sourceRectAtTime = s.sourceRectAtTime.bind(s)), (n._elem = s);
                  var o = getDescriptor((a = TransformExpressionInterface(s.finalTransform.mProp)), "anchorPoint");
                  return (
                    Object.defineProperties(n, {
                      hasParent: {
                        get: function () {
                          return s.hierarchy.length;
                        },
                      },
                      parent: {
                        get: function () {
                          return s.hierarchy[0].layerInterface;
                        },
                      },
                      rotation: getDescriptor(a, "rotation"),
                      scale: getDescriptor(a, "scale"),
                      position: getDescriptor(a, "position"),
                      opacity: getDescriptor(a, "opacity"),
                      anchorPoint: o,
                      anchor_point: o,
                      transform: {
                        get: function () {
                          return a;
                        },
                      },
                      active: {
                        get: function () {
                          return s.isInRange;
                        },
                      },
                    }),
                    (n.startTime = s.data.st),
                    (n.index = s.data.ind),
                    (n.source = s.data.refId),
                    (n.height = 0 === s.data.ty ? s.data.h : 100),
                    (n.width = 0 === s.data.ty ? s.data.w : 100),
                    (n.inPoint = s.data.ip / s.comp.globalData.frameRate),
                    (n.outPoint = s.data.op / s.comp.globalData.frameRate),
                    (n._name = s.data.nm),
                    (n.registerMaskInterface = function (t) {
                      n.mask = new MaskManagerInterface(t, s);
                    }),
                    (n.registerEffectsInterface = function (t) {
                      n.effect = t;
                    }),
                    n
                  );
                };
              })(),
              CompExpressionInterface = function (t) {
                function e(e) {
                  for (var r = 0, i = t.layers.length; r < i; ) {
                    if (t.layers[r].nm === e || t.layers[r].ind === e) return t.elements[r].layerInterface;
                    r += 1;
                  }
                  return null;
                }
                return Object.defineProperty(e, "_name", { value: t.data.nm }), (e.layer = e), (e.pixelAspect = 1), (e.height = t.data.h || t.globalData.compSize.h), (e.width = t.data.w || t.globalData.compSize.w), (e.pixelAspect = 1), (e.frameDuration = 1 / t.globalData.frameRate), (e.displayStartTime = 0), (e.numLayers = t.layers.length), e;
              },
              TransformExpressionInterface = function (t) {
                function e(t) {
                  switch (t) {
                    case "scale":
                    case "Scale":
                    case "ADBE Scale":
                    case 6:
                      return e.scale;
                    case "rotation":
                    case "Rotation":
                    case "ADBE Rotation":
                    case "ADBE Rotate Z":
                    case 10:
                      return e.rotation;
                    case "ADBE Rotate X":
                      return e.xRotation;
                    case "ADBE Rotate Y":
                      return e.yRotation;
                    case "position":
                    case "Position":
                    case "ADBE Position":
                    case 2:
                      return e.position;
                    case "ADBE Position_0":
                      return e.xPosition;
                    case "ADBE Position_1":
                      return e.yPosition;
                    case "ADBE Position_2":
                      return e.zPosition;
                    case "anchorPoint":
                    case "AnchorPoint":
                    case "Anchor Point":
                    case "ADBE AnchorPoint":
                    case 1:
                      return e.anchorPoint;
                    case "opacity":
                    case "Opacity":
                    case 11:
                      return e.opacity;
                  }
                }
                if ((Object.defineProperty(e, "rotation", { get: ExpressionPropertyInterface(t.r || t.rz) }), Object.defineProperty(e, "zRotation", { get: ExpressionPropertyInterface(t.rz || t.r) }), Object.defineProperty(e, "xRotation", { get: ExpressionPropertyInterface(t.rx) }), Object.defineProperty(e, "yRotation", { get: ExpressionPropertyInterface(t.ry) }), Object.defineProperty(e, "scale", { get: ExpressionPropertyInterface(t.s) }), t.p)) var r = ExpressionPropertyInterface(t.p);
                return (
                  Object.defineProperty(e, "position", {
                    get: function () {
                      return t.p ? r() : [t.px.v, t.py.v, t.pz ? t.pz.v : 0];
                    },
                  }),
                  Object.defineProperty(e, "xPosition", { get: ExpressionPropertyInterface(t.px) }),
                  Object.defineProperty(e, "yPosition", { get: ExpressionPropertyInterface(t.py) }),
                  Object.defineProperty(e, "zPosition", { get: ExpressionPropertyInterface(t.pz) }),
                  Object.defineProperty(e, "anchorPoint", { get: ExpressionPropertyInterface(t.a) }),
                  Object.defineProperty(e, "opacity", { get: ExpressionPropertyInterface(t.o) }),
                  Object.defineProperty(e, "skew", { get: ExpressionPropertyInterface(t.sk) }),
                  Object.defineProperty(e, "skewAxis", { get: ExpressionPropertyInterface(t.sa) }),
                  Object.defineProperty(e, "orientation", { get: ExpressionPropertyInterface(t.or) }),
                  e
                );
              },
              ProjectInterface = (function () {
                function t(t) {
                  this.compositions.push(t);
                }
                return function () {
                  function e(t) {
                    for (var e = 0, r = this.compositions.length; e < r; ) {
                      if (this.compositions[e].data && this.compositions[e].data.nm === t) return this.compositions[e].prepareFrame && this.compositions[e].data.xt && this.compositions[e].prepareFrame(this.currentFrame), this.compositions[e].compInterface;
                      e += 1;
                    }
                  }
                  return (e.compositions = []), (e.currentFrame = 0), (e.registerComposition = t), e;
                };
              })(),
              EffectsExpressionInterface = (function () {
                function t(r, i, s, a) {
                  var n,
                    o = [],
                    h = r.ef.length;
                  for (n = 0; n < h; n += 1) 5 === r.ef[n].ty ? o.push(t(r.ef[n], i.effectElements[n], i.effectElements[n].propertyGroup, a)) : o.push(e(i.effectElements[n], r.ef[n].ty, a, l));
                  function l(t) {
                    return 1 === t ? p : s(t - 1);
                  }
                  var p = function (t) {
                    for (var e = r.ef, i = 0, s = e.length; i < s; ) {
                      if (t === e[i].nm || t === e[i].mn || t === e[i].ix) return 5 === e[i].ty ? o[i] : o[i]();
                      i += 1;
                    }
                    return o[0]();
                  };
                  return (
                    (p.propertyGroup = l),
                    "ADBE Color Control" === r.mn &&
                      Object.defineProperty(p, "color", {
                        get: function () {
                          return o[0]();
                        },
                      }),
                    Object.defineProperty(p, "numProperties", {
                      get: function () {
                        return r.np;
                      },
                    }),
                    (p.active = p.enabled = 0 !== r.en),
                    p
                  );
                }
                function e(t, e, r, i) {
                  var s = ExpressionPropertyInterface(t.p);
                  return (
                    t.p.setGroupProperty && t.p.setGroupProperty(i),
                    function () {
                      return 10 === e ? r.comp.compInterface(t.p.v) : s();
                    }
                  );
                }
                return {
                  createEffectsInterface: function (e, r) {
                    if (e.effectsManager) {
                      var i,
                        s = [],
                        a = e.data.ef,
                        n = e.effectsManager.effectElements.length;
                      for (i = 0; i < n; i += 1) s.push(t(a[i], e.effectsManager.effectElements[i], r, e));
                      return function (t) {
                        for (var r = e.data.ef || [], i = 0, a = r.length; i < a; ) {
                          if (t === r[i].nm || t === r[i].mn || t === r[i].ix) return s[i];
                          i += 1;
                        }
                      };
                    }
                  },
                };
              })(),
              MaskManagerInterface = (function () {
                function t(t, e) {
                  (this._mask = t), (this._data = e);
                }
                Object.defineProperty(t.prototype, "maskPath", {
                  get: function () {
                    return this._mask.prop.k && this._mask.prop.getValue(), this._mask.prop;
                  },
                }),
                  Object.defineProperty(t.prototype, "maskOpacity", {
                    get: function () {
                      return this._mask.op.k && this._mask.op.getValue(), 100 * this._mask.op.v;
                    },
                  });
                return function (e, r) {
                  var i,
                    s = createSizedArray(e.viewData.length),
                    a = e.viewData.length;
                  for (i = 0; i < a; i += 1) s[i] = new t(e.viewData[i], e.masksProperties[i]);
                  return function (t) {
                    for (i = 0; i < a; ) {
                      if (e.masksProperties[i].nm === t) return s[i];
                      i += 1;
                    }
                  };
                };
              })(),
              ExpressionPropertyInterface = (function () {
                var t = { pv: 0, v: 0, mult: 1 },
                  e = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
                function r(t, e, r) {
                  Object.defineProperty(t, "velocity", {
                    get: function () {
                      return e.getVelocityAtTime(e.comp.currentFrame);
                    },
                  }),
                    (t.numKeys = e.keyframes ? e.keyframes.length : 0),
                    (t.key = function (i) {
                      if (t.numKeys) {
                        var s = "";
                        s = "s" in e.keyframes[i - 1] ? e.keyframes[i - 1].s : "e" in e.keyframes[i - 2] ? e.keyframes[i - 2].e : e.keyframes[i - 2].s;
                        var a = "unidimensional" === r ? new Number(s) : Object.assign({}, s);
                        return (a.time = e.keyframes[i - 1].t / e.elem.comp.globalData.frameRate), a;
                      }
                      return 0;
                    }),
                    (t.valueAtTime = e.getValueAtTime),
                    (t.speedAtTime = e.getSpeedAtTime),
                    (t.velocityAtTime = e.getVelocityAtTime),
                    (t.propertyGroup = e.propertyGroup);
                }
                function i() {
                  return t;
                }
                return function (s) {
                  return s
                    ? "unidimensional" === s.propType
                      ? (function (e) {
                          (e && "pv" in e) || (e = t);
                          var i = 1 / e.mult,
                            s = e.pv * i,
                            a = new Number(s);
                          return (
                            (a.value = s),
                            r(a, e, "unidimensional"),
                            function () {
                              return e.k && e.getValue(), (s = e.v * i), a.value !== s && (((a = new Number(s)).value = s), r(a, e, "unidimensional")), a;
                            }
                          );
                        })(s)
                      : (function (t) {
                          (t && "pv" in t) || (t = e);
                          var i = 1 / t.mult,
                            s = t.pv.length,
                            a = createTypedArray("float32", s),
                            n = createTypedArray("float32", s);
                          return (
                            (a.value = n),
                            r(a, t, "multidimensional"),
                            function () {
                              t.k && t.getValue();
                              for (var e = 0; e < s; e += 1) a[e] = n[e] = t.v[e] * i;
                              return a;
                            }
                          );
                        })(s)
                    : i;
                };
              })(),
              TextExpressionSelectorProp,
              propertyGetTextProp;
            function SliderEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
            }
            function AngleEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
            }
            function ColorEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);
            }
            function PointEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 1, 0, r);
            }
            function LayerIndexEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
            }
            function MaskIndexEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
            }
            function CheckboxEffect(t, e, r) {
              this.p = PropertyFactory.getProp(e, t.v, 0, 0, r);
            }
            function NoValueEffect() {
              this.p = {};
            }
            function EffectsManager() {}
            function EffectsManager(t, e) {
              var r = t.ef || [];
              this.effectElements = [];
              var i,
                s,
                a = r.length;
              for (i = 0; i < a; i++) (s = new GroupEffect(r[i], e)), this.effectElements.push(s);
            }
            function GroupEffect(t, e) {
              this.init(t, e);
            }
            (TextExpressionSelectorProp = (function () {
              function t(t, e) {
                return (this.textIndex = t + 1), (this.textTotal = e), (this.v = this.getValue() * this.mult), this.v;
              }
              return function (e, r) {
                (this.pv = 1), (this.comp = e.comp), (this.elem = e), (this.mult = 0.01), (this.propType = "textSelector"), (this.textTotal = r.totalChars), (this.selectorValue = 100), (this.lastValue = [1, 1, 1]), (this.k = !0), (this.x = !0), (this.getValue = ExpressionManager.initiateExpression.bind(this)(e, r, this)), (this.getMult = t), (this.getVelocityAtTime = expressionHelpers.getVelocityAtTime), this.kf ? (this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this)) : (this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this)), (this.setGroupProperty = expressionHelpers.setGroupProperty);
              };
            })()),
              (propertyGetTextProp = TextSelectorProp.getTextSelectorProp),
              (TextSelectorProp.getTextSelectorProp = function (t, e, r) {
                return 1 === e.t ? new TextExpressionSelectorProp(t, e, r) : propertyGetTextProp(t, e, r);
              }),
              extendPrototype([DynamicPropertyContainer], GroupEffect),
              (GroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties),
              (GroupEffect.prototype.init = function (t, e) {
                (this.data = t), (this.effectElements = []), this.initDynamicPropertyContainer(e);
                var r,
                  i,
                  s = this.data.ef.length,
                  a = this.data.ef;
                for (r = 0; r < s; r += 1) {
                  switch (((i = null), a[r].ty)) {
                    case 0:
                      i = new SliderEffect(a[r], e, this);
                      break;
                    case 1:
                      i = new AngleEffect(a[r], e, this);
                      break;
                    case 2:
                      i = new ColorEffect(a[r], e, this);
                      break;
                    case 3:
                      i = new PointEffect(a[r], e, this);
                      break;
                    case 4:
                    case 7:
                      i = new CheckboxEffect(a[r], e, this);
                      break;
                    case 10:
                      i = new LayerIndexEffect(a[r], e, this);
                      break;
                    case 11:
                      i = new MaskIndexEffect(a[r], e, this);
                      break;
                    case 5:
                      i = new EffectsManager(a[r], e, this);
                      break;
                    default:
                      i = new NoValueEffect(a[r], e, this);
                  }
                  i && this.effectElements.push(i);
                }
              });
            var lottie = {},
              _isFrozen = !1;
            function setLocationHref(t) {
              locationHref = t;
            }
            function searchAnimations() {
              !0 === standalone ? animationManager.searchAnimations(animationData, standalone, renderer) : animationManager.searchAnimations();
            }
            function setSubframeRendering(t) {
              subframeEnabled = t;
            }
            function loadAnimation(t) {
              return !0 === standalone && (t.animationData = JSON.parse(animationData)), animationManager.loadAnimation(t);
            }
            function setQuality(t) {
              if ("string" == typeof t)
                switch (t) {
                  case "high":
                    defaultCurveSegments = 200;
                    break;
                  case "medium":
                    defaultCurveSegments = 50;
                    break;
                  case "low":
                    defaultCurveSegments = 10;
                }
              else !isNaN(t) && t > 1 && (defaultCurveSegments = t);
              roundValues(!(defaultCurveSegments >= 50));
            }
            function inBrowser() {
              return "undefined" != typeof navigator;
            }
            function installPlugin(t, e) {
              "expressions" === t && (expressionsPlugin = e);
            }
            function getFactory(t) {
              switch (t) {
                case "propertyFactory":
                  return PropertyFactory;
                case "shapePropertyFactory":
                  return ShapePropertyFactory;
                case "matrix":
                  return Matrix;
              }
            }
            function checkReady() {
              "complete" === document.readyState && (clearInterval(readyStateCheckInterval), searchAnimations());
            }
            function getQueryVariable(t) {
              for (var e = queryString.split("&"), r = 0; r < e.length; r++) {
                var i = e[r].split("=");
                if (decodeURIComponent(i[0]) == t) return decodeURIComponent(i[1]);
              }
            }
            (lottie.play = animationManager.play),
              (lottie.pause = animationManager.pause),
              (lottie.setLocationHref = setLocationHref),
              (lottie.togglePause = animationManager.togglePause),
              (lottie.setSpeed = animationManager.setSpeed),
              (lottie.setDirection = animationManager.setDirection),
              (lottie.stop = animationManager.stop),
              (lottie.searchAnimations = searchAnimations),
              (lottie.registerAnimation = animationManager.registerAnimation),
              (lottie.loadAnimation = loadAnimation),
              (lottie.setSubframeRendering = setSubframeRendering),
              (lottie.resize = animationManager.resize),
              (lottie.goToAndStop = animationManager.goToAndStop),
              (lottie.destroy = animationManager.destroy),
              (lottie.setQuality = setQuality),
              (lottie.inBrowser = inBrowser),
              (lottie.installPlugin = installPlugin),
              (lottie.freeze = animationManager.freeze),
              (lottie.unfreeze = animationManager.unfreeze),
              (lottie.getRegisteredAnimations = animationManager.getRegisteredAnimations),
              (lottie.__getFactory = getFactory),
              (lottie.version = "5.6.6");
            var standalone = "__[STANDALONE]__",
              animationData = "__[ANIMATIONDATA]__",
              renderer = "";
            if (standalone) {
              var scripts = document.getElementsByTagName("script"),
                index = scripts.length - 1,
                myScript = scripts[index] || { src: "" },
                queryString = myScript.src.replace(/^[^\?]+\??/, "");
              renderer = getQueryVariable("renderer");
            }
            var readyStateCheckInterval = setInterval(checkReady, 100);
            return lottie;
          });
      },
      {},
    ],
    C4qV: [
      function (require, module, exports) {
        var global = arguments[3];
        var t = arguments[3];
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.default = void 0);
        var e = (function () {
            if ("undefined" != typeof Map) return Map;
            function t(t, e) {
              var n = -1;
              return (
                t.some(function (t, r) {
                  return t[0] === e && ((n = r), !0);
                }),
                n
              );
            }
            return (function () {
              function e() {
                this.__entries__ = [];
              }
              return (
                Object.defineProperty(e.prototype, "size", {
                  get: function () {
                    return this.__entries__.length;
                  },
                  enumerable: !0,
                  configurable: !0,
                }),
                (e.prototype.get = function (e) {
                  var n = t(this.__entries__, e),
                    r = this.__entries__[n];
                  return r && r[1];
                }),
                (e.prototype.set = function (e, n) {
                  var r = t(this.__entries__, e);
                  ~r ? (this.__entries__[r][1] = n) : this.__entries__.push([e, n]);
                }),
                (e.prototype.delete = function (e) {
                  var n = this.__entries__,
                    r = t(n, e);
                  ~r && n.splice(r, 1);
                }),
                (e.prototype.has = function (e) {
                  return !!~t(this.__entries__, e);
                }),
                (e.prototype.clear = function () {
                  this.__entries__.splice(0);
                }),
                (e.prototype.forEach = function (t, e) {
                  void 0 === e && (e = null);
                  for (var n = 0, r = this.__entries__; n < r.length; n++) {
                    var i = r[n];
                    t.call(e, i[1], i[0]);
                  }
                }),
                e
              );
            })();
          })(),
          n = "undefined" != typeof window && "undefined" != typeof document && window.document === document,
          r = void 0 !== t && t.Math === Math ? t : "undefined" != typeof self && self.Math === Math ? self : "undefined" != typeof window && window.Math === Math ? window : Function("return this")(),
          i =
            "function" == typeof requestAnimationFrame
              ? requestAnimationFrame.bind(r)
              : function (t) {
                  return setTimeout(function () {
                    return t(Date.now());
                  }, 1e3 / 60);
                },
          o = 2;
        function s(t, e) {
          var n = !1,
            r = !1,
            s = 0;
          function c() {
            n && ((n = !1), t()), r && h();
          }
          function a() {
            i(c);
          }
          function h() {
            var t = Date.now();
            if (n) {
              if (t - s < o) return;
              r = !0;
            } else (n = !0), (r = !1), setTimeout(a, e);
            s = t;
          }
          return h;
        }
        var c = 20,
          a = ["top", "right", "bottom", "left", "width", "height", "size", "weight"],
          h = "undefined" != typeof MutationObserver,
          u = (function () {
            function t() {
              (this.connected_ = !1), (this.mutationEventsAdded_ = !1), (this.mutationsObserver_ = null), (this.observers_ = []), (this.onTransitionEnd_ = this.onTransitionEnd_.bind(this)), (this.refresh = s(this.refresh.bind(this), c));
            }
            return (
              (t.prototype.addObserver = function (t) {
                ~this.observers_.indexOf(t) || this.observers_.push(t), this.connected_ || this.connect_();
              }),
              (t.prototype.removeObserver = function (t) {
                var e = this.observers_,
                  n = e.indexOf(t);
                ~n && e.splice(n, 1), !e.length && this.connected_ && this.disconnect_();
              }),
              (t.prototype.refresh = function () {
                this.updateObservers_() && this.refresh();
              }),
              (t.prototype.updateObservers_ = function () {
                var t = this.observers_.filter(function (t) {
                  return t.gatherActive(), t.hasActive();
                });
                return (
                  t.forEach(function (t) {
                    return t.broadcastActive();
                  }),
                  t.length > 0
                );
              }),
              (t.prototype.connect_ = function () {
                n && !this.connected_ && (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), h ? ((this.mutationsObserver_ = new MutationObserver(this.refresh)), this.mutationsObserver_.observe(document, { attributes: !0, childList: !0, characterData: !0, subtree: !0 })) : (document.addEventListener("DOMSubtreeModified", this.refresh), (this.mutationEventsAdded_ = !0)), (this.connected_ = !0));
              }),
              (t.prototype.disconnect_ = function () {
                n && this.connected_ && (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), (this.mutationsObserver_ = null), (this.mutationEventsAdded_ = !1), (this.connected_ = !1));
              }),
              (t.prototype.onTransitionEnd_ = function (t) {
                var e = t.propertyName,
                  n = void 0 === e ? "" : e;
                a.some(function (t) {
                  return !!~n.indexOf(t);
                }) && this.refresh();
              }),
              (t.getInstance = function () {
                return this.instance_ || (this.instance_ = new t()), this.instance_;
              }),
              (t.instance_ = null),
              t
            );
          })(),
          f = function (t, e) {
            for (var n = 0, r = Object.keys(e); n < r.length; n++) {
              var i = r[n];
              Object.defineProperty(t, i, { value: e[i], enumerable: !1, writable: !1, configurable: !0 });
            }
            return t;
          },
          d = function (t) {
            return (t && t.ownerDocument && t.ownerDocument.defaultView) || r;
          },
          p = E(0, 0, 0, 0);
        function v(t) {
          return parseFloat(t) || 0;
        }
        function _(t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
          return e.reduce(function (e, n) {
            return e + v(t["border-" + n + "-width"]);
          }, 0);
        }
        function l(t) {
          for (var e = {}, n = 0, r = ["top", "right", "bottom", "left"]; n < r.length; n++) {
            var i = r[n],
              o = t["padding-" + i];
            e[i] = v(o);
          }
          return e;
        }
        function b(t) {
          var e = t.getBBox();
          return E(0, 0, e.width, e.height);
        }
        function m(t) {
          var e = t.clientWidth,
            n = t.clientHeight;
          if (!e && !n) return p;
          var r = d(t).getComputedStyle(t),
            i = l(r),
            o = i.left + i.right,
            s = i.top + i.bottom,
            c = v(r.width),
            a = v(r.height);
          if (("border-box" === r.boxSizing && (Math.round(c + o) !== e && (c -= _(r, "left", "right") + o), Math.round(a + s) !== n && (a -= _(r, "top", "bottom") + s)), !w(t))) {
            var h = Math.round(c + o) - e,
              u = Math.round(a + s) - n;
            1 !== Math.abs(h) && (c -= h), 1 !== Math.abs(u) && (a -= u);
          }
          return E(i.left, i.top, c, a);
        }
        var y =
          "undefined" != typeof SVGGraphicsElement
            ? function (t) {
                return t instanceof d(t).SVGGraphicsElement;
              }
            : function (t) {
                return t instanceof d(t).SVGElement && "function" == typeof t.getBBox;
              };
        function w(t) {
          return t === d(t).document.documentElement;
        }
        function g(t) {
          return n ? (y(t) ? b(t) : m(t)) : p;
        }
        function O(t) {
          var e = t.x,
            n = t.y,
            r = t.width,
            i = t.height,
            o = "undefined" != typeof DOMRectReadOnly ? DOMRectReadOnly : Object,
            s = Object.create(o.prototype);
          return f(s, { x: e, y: n, width: r, height: i, top: n, right: e + r, bottom: i + n, left: e }), s;
        }
        function E(t, e, n, r) {
          return { x: t, y: e, width: n, height: r };
        }
        var M = (function () {
            function t(t) {
              (this.broadcastWidth = 0), (this.broadcastHeight = 0), (this.contentRect_ = E(0, 0, 0, 0)), (this.target = t);
            }
            return (
              (t.prototype.isActive = function () {
                var t = g(this.target);
                return (this.contentRect_ = t), t.width !== this.broadcastWidth || t.height !== this.broadcastHeight;
              }),
              (t.prototype.broadcastRect = function () {
                var t = this.contentRect_;
                return (this.broadcastWidth = t.width), (this.broadcastHeight = t.height), t;
              }),
              t
            );
          })(),
          A = (function () {
            return function (t, e) {
              var n = O(e);
              f(this, { target: t, contentRect: n });
            };
          })(),
          x = (function () {
            function t(t, n, r) {
              if (((this.activeObservations_ = []), (this.observations_ = new e()), "function" != typeof t)) throw new TypeError("The callback provided as parameter 1 is not a function.");
              (this.callback_ = t), (this.controller_ = n), (this.callbackCtx_ = r);
            }
            return (
              (t.prototype.observe = function (t) {
                if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
                if ("undefined" != typeof Element && Element instanceof Object) {
                  if (!(t instanceof d(t).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                  var e = this.observations_;
                  e.has(t) || (e.set(t, new M(t)), this.controller_.addObserver(this), this.controller_.refresh());
                }
              }),
              (t.prototype.unobserve = function (t) {
                if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
                if ("undefined" != typeof Element && Element instanceof Object) {
                  if (!(t instanceof d(t).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                  var e = this.observations_;
                  e.has(t) && (e.delete(t), e.size || this.controller_.removeObserver(this));
                }
              }),
              (t.prototype.disconnect = function () {
                this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);
              }),
              (t.prototype.gatherActive = function () {
                var t = this;
                this.clearActive(),
                  this.observations_.forEach(function (e) {
                    e.isActive() && t.activeObservations_.push(e);
                  });
              }),
              (t.prototype.broadcastActive = function () {
                if (this.hasActive()) {
                  var t = this.callbackCtx_,
                    e = this.activeObservations_.map(function (t) {
                      return new A(t.target, t.broadcastRect());
                    });
                  this.callback_.call(t, e, t), this.clearActive();
                }
              }),
              (t.prototype.clearActive = function () {
                this.activeObservations_.splice(0);
              }),
              (t.prototype.hasActive = function () {
                return this.activeObservations_.length > 0;
              }),
              t
            );
          })(),
          T = "undefined" != typeof WeakMap ? new WeakMap() : new e(),
          R = (function () {
            return function t(e) {
              if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function.");
              if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
              var n = u.getInstance(),
                r = new x(e, n, this);
              T.set(this, r);
            };
          })();
        ["observe", "unobserve", "disconnect"].forEach(function (t) {
          R.prototype[t] = function () {
            var e;
            return (e = T.get(this))[t].apply(e, arguments);
          };
        });
        var D = void 0 !== r.ResizeObserver ? r.ResizeObserver : R,
          j = D;
        exports.default = j;
      },
      {},
    ],
    jFKs: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.default = void 0);
        var n = require("lit-element");
        function e() {
          const n = r([
            "\n* {\n  box-sizing: border-box;\n}\n\n:host {\n  --lottie-player-toolbar-height: 35px;\n  --lottie-player-toolbar-background-color: transparent;\n  --lottie-player-toolbar-icon-color: #999;\n  --lottie-player-toolbar-icon-hover-color: #222;\n  --lottie-player-toolbar-icon-active-color: #555;\n  --lottie-player-seeker-track-color: #CCC;\n  --lottie-player-seeker-thumb-color: rgba(0, 107, 120, 0.8);\n\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n.main {\n  box-sizing: border-box;\n  display: inline-grid;\n  grid-auto-columns: auto;\n  grid-template-rows: auto;\n  position: relative;\n  height: inherit;\n  width: inherit;\n}\n\n.main.controls {\n  grid-template-rows: 1fr var(--lottie-player-toolbar-height);\n}\n\n.animation {\n  overflow: hidden;\n  height: calc(1fr - var(--lottie-player-toolbar-height));\n}\n\n.toolbar {\n  display: grid;\n  grid-template-columns: 32px 32px 1fr 32px 32px;\n  align-items: center;\n  justify-items: center;\n  background-color: var(--lottie-player-toolbar-background-color);\n}\n\n.toolbar button {\n  cursor: pointer;\n  fill: var(--lottie-player-toolbar-icon-color);\n  display: flex;\n  background: none;\n  border: 0;\n  padding: 0;\n  outline: none;\n  height: 100%;\n}\n\n.toolbar button:hover {\n  fill: var(--lottie-player-toolbar-icon-hover-color);\n}\n\n.toolbar button.active {\n  fill: var(--lottie-player-toolbar-icon-active-color);\n}\n\n.toolbar button svg {\n}\n\n.toolbar button.disabled svg {\n  display: none;\n}\n\n.toolbar a {\n  filter: grayscale(100%);\n  display: flex;\n  transition: filter .5s, opacity 0.5s;\n  opacity: 0.4;\n  height: 100%;\n  align-items: center;\n}\n\n.toolbar a:hover {\n  filter: none;\n  display: flex;\n  opacity: 1;\n}\n\n.toolbar a svg {\n}\n\n.seeker {\n  -webkit-appearance: none;\n  width: 95%;\n  outline: none;\n}\n\n.seeker::-webkit-slider-runnable-track {\n  width: 100%;\n  height: 5px;\n  cursor: pointer;\n  background: var(--lottie-player-seeker-track-color);\n  border-radius: 3px;\n}\n.seeker::-webkit-slider-thumb {\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n  background: var(--lottie-player-seeker-thumb-color);\n  cursor: pointer;\n  -webkit-appearance: none;\n  margin-top: -5px;\n}\n.seeker:focus::-webkit-slider-runnable-track {\n  background: #999;\n}\n.seeker::-moz-range-track {\n  width: 100%;\n  height: 5px;\n  cursor: pointer;\n  background: var(--lottie-player-seeker-track-color);\n  border-radius: 3px;\n}\n.seeker::-moz-range-thumb {\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n  background: var(--lottie-player-seeker-thumb-color);\n  cursor: pointer;\n}\n.seeker::-ms-track {\n  width: 100%;\n  height: 5px;\n  cursor: pointer;\n  background: transparent;\n  border-color: transparent;\n  color: transparent;\n}\n.seeker::-ms-fill-lower {\n  background: var(--lottie-player-seeker-track-color);\n  border-radius: 3px;\n}\n.seeker::-ms-fill-upper {\n  background: var(--lottie-player-seeker-track-color);\n  border-radius: 3px;\n}\n.seeker::-ms-thumb {\n  border: 0;\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n  background: var(--lottie-player-seeker-thumb-color);\n  cursor: pointer;\n}\n.seeker:focus::-ms-fill-lower {\n  background: var(--lottie-player-seeker-track-color);\n}\n.seeker:focus::-ms-fill-upper {\n  background: var(--lottie-player-seeker-track-color);\n}\n\n.error {\n  display: flex;\n  justify-content: center;\n  height: 100%;\n  align-items: center;\n}\n",
          ]);
          return (
            (e = function () {
              return n;
            }),
            n
          );
        }
        function r(n, e) {
          return e || (e = n.slice(0)), Object.freeze(Object.defineProperties(n, { raw: { value: Object.freeze(e) } }));
        }
        var o = (0, n.css)(e());
        exports.default = o;
      },
      { "lit-element": "bhxD" },
    ],
    M8c7: [
      function (require, module, exports) {
        "use strict";
        Object.defineProperty(exports, "__esModule", { value: !0 }), (exports.parseSrc = f), (exports.LottiePlayer = exports.PlayerEvents = exports.PlayMode = exports.PlayerState = void 0);
        var t = require("lit-element"),
          e = s(require("lottie-web/build/player/lottie")),
          i = r(require("resize-observer-polyfill")),
          o = r(require("./lottie-player.styles"));
        function r(t) {
          return t && t.__esModule ? t : { default: t };
        }
        function n() {
          if ("function" != typeof WeakMap) return null;
          var t = new WeakMap();
          return (
            (n = function () {
              return t;
            }),
            t
          );
        }
        function s(t) {
          if (t && t.__esModule) return t;
          if (null === t || ("object" != typeof t && "function" != typeof t)) return { default: t };
          var e = n();
          if (e && e.has(t)) return e.get(t);
          var i = {},
            o = Object.defineProperty && Object.getOwnPropertyDescriptor;
          for (var r in t)
            if (Object.prototype.hasOwnProperty.call(t, r)) {
              var s = o ? Object.getOwnPropertyDescriptor(t, r) : null;
              s && (s.get || s.set) ? Object.defineProperty(i, r, s) : (i[r] = t[r]);
            }
          return (i.default = t), e && e.set(t, i), i;
        }
        function a() {
          const t = d(['<div class="error">⚠️</div>']);
          return (
            (a = function () {
              return t;
            }),
            t
          );
        }
        function h() {
          const t = d(["\n      <div class=", '>\n        <div class="animation" style=', ">\n          ", "\n        </div>\n        ", "\n      </div>"]);
          return (
            (h = function () {
              return t;
            }),
            t
          );
        }
        function l() {
          const t = d(['<svg width="24" height="24"><path d="M8.016 5.016L18.985 12 8.016 18.984V5.015z"/></svg>']);
          return (
            (l = function () {
              return t;
            }),
            t
          );
        }
        function p() {
          const t = d(['<svg width="24" height="24"><path d="M14.016 5.016H18v13.969h-3.984V5.016zM6 18.984V5.015h3.984v13.969H6z"/></svg>']);
          return (
            (p = function () {
              return t;
            }),
            t
          );
        }
        function c() {
          const t = d([
            '\n      <div class="toolbar">\n        <button @click=',
            " class=",
            ">\n          ",
            "\n        </button>\n        <button @click=",
            " class=",
            '>\n          <svg width="24" height="24"><path d="M6 6h12v12H6V6z" /></svg>\n        </button>\n        <input class="seeker" type="range" min="0" step="1" max="100" .value=',
            "\n          @input=",
            "\n          @mousedown=",
            "\n          @mouseup=",
            "\n        />\n        <button @click=",
            " class=",
            '>\n          <svg width="24" height="24">\n            <path d="M17.016 17.016v-4.031h1.969v6h-12v3l-3.984-3.984 3.984-3.984v3h10.031zM6.984 6.984v4.031H5.015v-6h12v-3l3.984 3.984-3.984 3.984v-3H6.984z"/>\n          </svg>\n        </button>\n        <a href="https://www.lottiefiles.com/" target="_blank">\n          <svg width="24" height="24" viewBox="0 0 320 320" fill-rule="nonzero"><rect fill="#adadad" x=".5" y=".5" width="100%" height="100%" rx="26.73"/><path d="M251.304 65.44a16.55 16.55 0 0 1 13.927 18.789c-1.333 9.04-9.73 15.292-18.762 13.954-15.992-2.37-39.95 22.534-66.77 73.74-34.24 65.37-66.113 96.517-99.667 94.032-9.102-.674-15.93-8.612-15.258-17.723s8.592-15.96 17.695-15.286c16.57 1.227 40.908-24.737 67.97-76.4 34.46-65.79 66.764-96.157 100.866-91.105z" fill="#fff"/></svg>\n        </a>\n      </div>\n    ',
          ]);
          return (
            (c = function () {
              return t;
            }),
            t
          );
        }
        function d(t, e) {
          return e || (e = t.slice(0)), Object.freeze(Object.defineProperties(t, { raw: { value: Object.freeze(e) } }));
        }
        var u,
          v,
          y,
          g = function (t, e, i, o) {
            var r,
              n = arguments.length,
              s = n < 3 ? e : null === o ? (o = Object.getOwnPropertyDescriptor(e, i)) : o;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(t, e, i, o);
            else for (var a = t.length - 1; a >= 0; a--) (r = t[a]) && (s = (n < 3 ? r(s) : n > 3 ? r(e, i, s) : r(e, i)) || s);
            return n > 3 && s && Object.defineProperty(e, i, s), s;
          };
        function f(t) {
          if ("object" == typeof t) return t;
          try {
            return JSON.parse(t);
          } catch (e) {
            return new URL(t, window.location.href).toString();
          }
        }
        (exports.PlayerState = u),
          (function (t) {
            (t.Loading = "loading"), (t.Playing = "playing"), (t.Paused = "paused"), (t.Stopped = "stopped"), (t.Frozen = "frozen"), (t.Error = "error");
          })(u || (exports.PlayerState = u = {})),
          (exports.PlayMode = v),
          (function (t) {
            (t.Normal = "normal"), (t.Bounce = "bounce");
          })(v || (exports.PlayMode = v = {})),
          (exports.PlayerEvents = y),
          (function (t) {
            (t.Load = "load"), (t.Error = "error"), (t.Ready = "ready"), (t.Play = "play"), (t.Pause = "pause"), (t.Stop = "stop"), (t.Freeze = "freeze"), (t.Loop = "loop"), (t.Complete = "complete"), (t.Frame = "frame");
          })(y || (exports.PlayerEvents = y = {}));
        let m = class extends t.LitElement {
          constructor() {
            super(...arguments), (this.mode = v.Normal), (this.autoplay = !1), (this.background = "transparent"), (this.controls = !1), (this.direction = 1), (this.hover = !1), (this.loop = !1), (this.renderer = "svg"), (this.speed = 1), (this.currentState = u.Loading), (this.intermission = 1), (this._io = void 0), (this._ro = void 0), (this._counter = 0);
          }
          _onVisibilityChange() {
            !0 === document.hidden && this.currentState === u.Playing ? this.freeze() : this.currentState === u.Frozen && this.play();
          }
          _handleSeekChange(t) {
            if (!this._lottie || isNaN(t.target.value)) return;
            const e = (t.target.value / 100) * this._lottie.totalFrames;
            this.seek(e);
          }
          load(t) {
            if (!this.shadowRoot) return;
            const i = { container: this.container, loop: !1, autoplay: !1, renderer: this.renderer, rendererSettings: { scaleMode: "noScale", preserveAspectRatio: "xMinYMin meet", clearCanvas: !1, progressiveLoad: !0, hideOnTransparent: !0 } };
            try {
              const r = f(t),
                n = "string" == typeof r ? "path" : "animationData";
              this._lottie && this._lottie.destroy(), (this._lottie = e.loadAnimation(Object.assign(Object.assign({}, i), { [n]: r })));
            } catch (o) {
              return (this.currentState = u.Error), void this.dispatchEvent(new CustomEvent(y.Error));
            }
            this._lottie &&
              (this._lottie.addEventListener("enterFrame", () => {
                (this.seeker = (this._lottie.currentFrame / this._lottie.totalFrames) * 100), this.dispatchEvent(new CustomEvent(y.Frame, { detail: { frame: this._lottie.currentFrame, seeker: this.seeker } }));
              }),
              this._lottie.addEventListener("complete", () => {
                this.currentState === u.Playing
                  ? !this.loop || (this.count && this._counter >= this.count)
                    ? this.dispatchEvent(new CustomEvent(y.Complete))
                    : this.mode === v.Bounce
                    ? (this.count && (this._counter += 0.5),
                      setTimeout(() => {
                        this.dispatchEvent(new CustomEvent(y.Loop)), this.currentState === u.Playing && (this._lottie.setDirection(-1 * this._lottie.playDirection), this._lottie.play());
                      }, this.intermission))
                    : (this.count && (this._counter += 1),
                      window.setTimeout(() => {
                        this.dispatchEvent(new CustomEvent(y.Loop)), this.currentState === u.Playing && (this._lottie.stop(), this._lottie.play());
                      }, this.intermission))
                  : this.dispatchEvent(new CustomEvent(y.Complete));
              }),
              this._lottie.addEventListener("DOMLoaded", () => {
                this.dispatchEvent(new CustomEvent(y.Ready));
              }),
              this._lottie.addEventListener("data_ready", () => {
                this.dispatchEvent(new CustomEvent(y.Load));
              }),
              this._lottie.addEventListener("data_failed", () => {
                (this.currentState = u.Error), this.dispatchEvent(new CustomEvent(y.Error));
              }),
              this.container.addEventListener("mouseenter", () => {
                this.hover && this.currentState !== u.Playing && this.play();
              }),
              this.container.addEventListener("mouseleave", () => {
                this.hover && this.currentState === u.Playing && this.stop();
              }),
              this.setSpeed(this.speed),
              this.setDirection(this.direction),
              this.autoplay && this.play());
          }
          getLottie() {
            return this._lottie;
          }
          play() {
            this._lottie && (this._lottie.play(), (this.currentState = u.Playing), this.dispatchEvent(new CustomEvent(y.Play)));
          }
          pause() {
            this._lottie && (this._lottie.pause(), (this.currentState = u.Paused), this.dispatchEvent(new CustomEvent(y.Pause)));
          }
          stop() {
            this._lottie && ((this._counter = 0), this._lottie.stop(), (this.currentState = u.Stopped), this.dispatchEvent(new CustomEvent(y.Stop)));
          }
          seek(t) {
            if (!this._lottie) return;
            const e = t.toString().match(/^([0-9]+)(%?)$/);
            if (!e) return;
            const i = "%" === e[2] ? (this._lottie.totalFrames * Number(e[1])) / 100 : Number(e[1]);
            (this.seeker = i), this.currentState === u.Playing ? this._lottie.goToAndPlay(i, !0) : (this._lottie.goToAndStop(i, !0), this._lottie.pause());
          }
          snapshot(t = !0) {
            if (!this.shadowRoot) return;
            const e = this.shadowRoot.querySelector(".animation svg"),
              i = new XMLSerializer().serializeToString(e);
            if (t) {
              const t = document.createElement("a");
              (t.href = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(i)), (t.download = "download_" + this.seeker + ".svg"), document.body.appendChild(t), t.click(), document.body.removeChild(t);
            }
            return i;
          }
          freeze() {
            this._lottie && (this._lottie.pause(), (this.currentState = u.Frozen), this.dispatchEvent(new CustomEvent(y.Freeze)));
          }
          setSpeed(t = 1) {
            this._lottie && this._lottie.setSpeed(t);
          }
          setDirection(t) {
            this._lottie && this._lottie.setDirection(t);
          }
          setLooping(t) {
            this._lottie && ((this.loop = t), (this._lottie.loop = t));
          }
          togglePlay() {
            return this.currentState === u.Playing ? this.pause() : this.play();
          }
          toggleLooping() {
            this.setLooping(!this.loop);
          }
          resize() {
            this._lottie && this._lottie.resize();
          }
          static get styles() {
            return o.default;
          }
          firstUpdated() {
            "IntersectionObserver" in window &&
              ((this._io = new IntersectionObserver((t) => {
                t[0].isIntersecting ? this.currentState === u.Frozen && this.play() : this.currentState === u.Playing && this.freeze();
              })),
              this._io.observe(this.container)),
              "ResizeObserver" in window &&
                ((this._ro = new i.default(() => {
                  this.resize();
                })),
                this._ro.observe(this.container)),
              void 0 !== document.hidden && document.addEventListener("visibilitychange", () => this._onVisibilityChange()),
              this.src && this.load(this.src);
          }
          disconnectedCallback() {
            this._io && (this._io.disconnect(), (this._io = void 0)), this._ro && (this._ro.disconnect(), (this._ro = void 0)), document.removeEventListener("visibilitychange", () => this._onVisibilityChange());
          }
          renderControls() {
            const e = this.currentState === u.Playing,
              i = this.currentState === u.Paused,
              o = this.currentState === u.Stopped;
            return (0, t.html)(
              c(),
              this.togglePlay,
              e || i ? "active" : "",
              e ? (0, t.html)(p()) : (0, t.html)(l()),
              this.stop,
              o ? "active" : "",
              this.seeker,
              this._handleSeekChange,
              () => {
                (this._prevState = this.currentState), this.freeze();
              },
              () => {
                this._prevState === u.Playing && this.play();
              },
              this.toggleLooping,
              this.loop ? "active" : ""
            );
          }
          render() {
            const e = this.controls ? "main controls" : "main";
            return (0, t.html)(h(), e, "background:" + this.background, this.currentState === u.Error ? (0, t.html)(a()) : void 0, this.controls ? this.renderControls() : void 0);
          }
        };
        (exports.LottiePlayer = m),
          g([(0, t.query)(".animation")], m.prototype, "container", void 0),
          g([(0, t.property)()], m.prototype, "mode", void 0),
          g([(0, t.property)({ type: Boolean })], m.prototype, "autoplay", void 0),
          g([(0, t.property)({ type: String, reflect: !0 })], m.prototype, "background", void 0),
          g([(0, t.property)({ type: Boolean })], m.prototype, "controls", void 0),
          g([(0, t.property)({ type: Number })], m.prototype, "count", void 0),
          g([(0, t.property)({ type: Number })], m.prototype, "direction", void 0),
          g([(0, t.property)({ type: Boolean })], m.prototype, "hover", void 0),
          g([(0, t.property)({ type: Boolean, reflect: !0 })], m.prototype, "loop", void 0),
          g([(0, t.property)({ type: String })], m.prototype, "renderer", void 0),
          g([(0, t.property)({ type: Number })], m.prototype, "speed", void 0),
          g([(0, t.property)({ type: String })], m.prototype, "src", void 0),
          g([(0, t.property)({ type: String })], m.prototype, "currentState", void 0),
          g([(0, t.property)()], m.prototype, "seeker", void 0),
          g([(0, t.property)()], m.prototype, "intermission", void 0),
          (exports.LottiePlayer = m = g([(0, t.customElement)("lottie-player")], m));
      },
      { "lit-element": "bhxD", "lottie-web/build/player/lottie": "xaRr", "resize-observer-polyfill": "C4qV", "./lottie-player.styles": "jFKs" },
    ],
  },
  {},
  ["M8c7"],
  null
);
//# sourceMappingURL=/lottie-player.js.map

/**
 * Owl Carousel v2.3.4
 * Copyright 2013-2018 David Deutsch
 * Licensed under: SEE LICENSE IN https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE
 */
/**
 * Owl carousel
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 * @todo Lazy Load Icon
 * @todo prevent animationend bubling
 * @todo itemsScaleUp
 * @todo Test Zepto
 * @todo stagePadding calculate wrong active classes
 */
;(function($, window, document, undefined) {

	/**
	 * Creates a carousel.
	 * @class The Owl Carousel.
	 * @public
	 * @param {HTMLElement|jQuery} element - The element to create the carousel for.
	 * @param {Object} [options] - The options
	 */
	function Owl(element, options) {

		/**
		 * Current settings for the carousel.
		 * @public
		 */
		this.settings = null;

		/**
		 * Current options set by the caller including defaults.
		 * @public
		 */
		this.options = $.extend({}, Owl.Defaults, options);

		/**
		 * Plugin element.
		 * @public
		 */
		this.$element = $(element);

		/**
		 * Proxied event handlers.
		 * @protected
		 */
		this._handlers = {};

		/**
		 * References to the running plugins of this carousel.
		 * @protected
		 */
		this._plugins = {};

		/**
		 * Currently suppressed events to prevent them from being retriggered.
		 * @protected
		 */
		this._supress = {};

		/**
		 * Absolute current position.
		 * @protected
		 */
		this._current = null;

		/**
		 * Animation speed in milliseconds.
		 * @protected
		 */
		this._speed = null;

		/**
		 * Coordinates of all items in pixel.
		 * @todo The name of this member is missleading.
		 * @protected
		 */
		this._coordinates = [];

		/**
		 * Current breakpoint.
		 * @todo Real media queries would be nice.
		 * @protected
		 */
		this._breakpoint = null;

		/**
		 * Current width of the plugin element.
		 */
		this._width = null;

		/**
		 * All real items.
		 * @protected
		 */
		this._items = [];

		/**
		 * All cloned items.
		 * @protected
		 */
		this._clones = [];

		/**
		 * Merge values of all items.
		 * @todo Maybe this could be part of a plugin.
		 * @protected
		 */
		this._mergers = [];

		/**
		 * Widths of all items.
		 */
		this._widths = [];

		/**
		 * Invalidated parts within the update process.
		 * @protected
		 */
		this._invalidated = {};

		/**
		 * Ordered list of workers for the update process.
		 * @protected
		 */
		this._pipe = [];

		/**
		 * Current state information for the drag operation.
		 * @todo #261
		 * @protected
		 */
		this._drag = {
			time: null,
			target: null,
			pointer: null,
			stage: {
				start: null,
				current: null
			},
			direction: null
		};

		/**
		 * Current state information and their tags.
		 * @type {Object}
		 * @protected
		 */
		this._states = {
			current: {},
			tags: {
				'initializing': [ 'busy' ],
				'animating': [ 'busy' ],
				'dragging': [ 'interacting' ]
			}
		};

		$.each([ 'onResize', 'onThrottledResize' ], $.proxy(function(i, handler) {
			this._handlers[handler] = $.proxy(this[handler], this);
		}, this));

		$.each(Owl.Plugins, $.proxy(function(key, plugin) {
			this._plugins[key.charAt(0).toLowerCase() + key.slice(1)]
				= new plugin(this);
		}, this));

		$.each(Owl.Workers, $.proxy(function(priority, worker) {
			this._pipe.push({
				'filter': worker.filter,
				'run': $.proxy(worker.run, this)
			});
		}, this));

		this.setup();
		this.initialize();
	}

	/**
	 * Default options for the carousel.
	 * @public
	 */
	Owl.Defaults = {
		items: 3,
		loop: false,
		center: false,
		rewind: false,
		checkVisibility: true,

		mouseDrag: true,
		touchDrag: true,
		pullDrag: true,
		freeDrag: false,

		margin: 0,
		stagePadding: 0,

		merge: false,
		mergeFit: true,
		autoWidth: false,

		startPosition: 0,
		rtl: false,

		smartSpeed: 250,
		fluidSpeed: false,
		dragEndSpeed: false,

		responsive: {},
		responsiveRefreshRate: 200,
		responsiveBaseElement: window,

		fallbackEasing: 'swing',
		slideTransition: '',

		info: false,

		nestedItemSelector: false,
		itemElement: 'div',
		stageElement: 'div',

		refreshClass: 'owl-refresh',
		loadedClass: 'owl-loaded',
		loadingClass: 'owl-loading',
		rtlClass: 'owl-rtl',
		responsiveClass: 'owl-responsive',
		dragClass: 'owl-drag',
		itemClass: 'owl-item',
		stageClass: 'owl-stage',
		stageOuterClass: 'owl-stage-outer',
		grabClass: 'owl-grab'
	};

	/**
	 * Enumeration for width.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
	Owl.Width = {
		Default: 'default',
		Inner: 'inner',
		Outer: 'outer'
	};

	/**
	 * Enumeration for types.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
	Owl.Type = {
		Event: 'event',
		State: 'state'
	};

	/**
	 * Contains all registered plugins.
	 * @public
	 */
	Owl.Plugins = {};

	/**
	 * List of workers involved in the update process.
	 */
	Owl.Workers = [ {
		filter: [ 'width', 'settings' ],
		run: function() {
			this._width = this.$element.width();
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			cache.current = this._items && this._items[this.relative(this._current)];
		}
	}, {
		filter: [ 'items', 'settings' ],
		run: function() {
			this.$stage.children('.cloned').remove();
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var margin = this.settings.margin || '',
				grid = !this.settings.autoWidth,
				rtl = this.settings.rtl,
				css = {
					'width': 'auto',
					'margin-left': rtl ? margin : '',
					'margin-right': rtl ? '' : margin
				};

			!grid && this.$stage.children().css(css);

			cache.css = css;
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,
				merge = null,
				iterator = this._items.length,
				grid = !this.settings.autoWidth,
				widths = [];

			cache.items = {
				merge: false,
				width: width
			};

			while (iterator--) {
				merge = this._mergers[iterator];
				merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;

				cache.items.merge = merge > 1 || cache.items.merge;

				widths[iterator] = !grid ? this._items[iterator].width() : width * merge;
			}

			this._widths = widths;
		}
	}, {
		filter: [ 'items', 'settings' ],
		run: function() {
			var clones = [],
				items = this._items,
				settings = this.settings,
				// TODO: Should be computed from number of min width items in stage
				view = Math.max(settings.items * 2, 4),
				size = Math.ceil(items.length / 2) * 2,
				repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0,
				append = '',
				prepend = '';

			repeat /= 2;

			while (repeat > 0) {
				// Switch to only using appended clones
				clones.push(this.normalize(clones.length / 2, true));
				append = append + items[clones[clones.length - 1]][0].outerHTML;
				clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));
				prepend = items[clones[clones.length - 1]][0].outerHTML + prepend;
				repeat -= 1;
			}

			this._clones = clones;

			$(append).addClass('cloned').appendTo(this.$stage);
			$(prepend).addClass('cloned').prependTo(this.$stage);
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function() {
			var rtl = this.settings.rtl ? 1 : -1,
				size = this._clones.length + this._items.length,
				iterator = -1,
				previous = 0,
				current = 0,
				coordinates = [];

			while (++iterator < size) {
				previous = coordinates[iterator - 1] || 0;
				current = this._widths[this.relative(iterator)] + this.settings.margin;
				coordinates.push(previous + current * rtl);
			}

			this._coordinates = coordinates;
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function() {
			var padding = this.settings.stagePadding,
				coordinates = this._coordinates,
				css = {
					'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,
					'padding-left': padding || '',
					'padding-right': padding || ''
				};

			this.$stage.css(css);
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var iterator = this._coordinates.length,
				grid = !this.settings.autoWidth,
				items = this.$stage.children();

			if (grid && cache.items.merge) {
				while (iterator--) {
					cache.css.width = this._widths[this.relative(iterator)];
					items.eq(iterator).css(cache.css);
				}
			} else if (grid) {
				cache.css.width = cache.items.width;
				items.css(cache.css);
			}
		}
	}, {
		filter: [ 'items' ],
		run: function() {
			this._coordinates.length < 1 && this.$stage.removeAttr('style');
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			cache.current = cache.current ? this.$stage.children().index(cache.current) : 0;
			cache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));
			this.reset(cache.current);
		}
	}, {
		filter: [ 'position' ],
		run: function() {
			this.animate(this.coordinates(this._current));
		}
	}, {
		filter: [ 'width', 'position', 'items', 'settings' ],
		run: function() {
			var rtl = this.settings.rtl ? 1 : -1,
				padding = this.settings.stagePadding * 2,
				begin = this.coordinates(this.current()) + padding,
				end = begin + this.width() * rtl,
				inner, outer, matches = [], i, n;

			for (i = 0, n = this._coordinates.length; i < n; i++) {
				inner = this._coordinates[i - 1] || 0;
				outer = Math.abs(this._coordinates[i]) + padding * rtl;

				if ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))
					|| (this.op(outer, '<', begin) && this.op(outer, '>', end))) {
					matches.push(i);
				}
			}

			this.$stage.children('.active').removeClass('active');
			this.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');

			this.$stage.children('.center').removeClass('center');
			if (this.settings.center) {
				this.$stage.children().eq(this.current()).addClass('center');
			}
		}
	} ];

	/**
	 * Create the stage DOM element
	 */
	Owl.prototype.initializeStage = function() {
		this.$stage = this.$element.find('.' + this.settings.stageClass);

		// if the stage is already in the DOM, grab it and skip stage initialization
		if (this.$stage.length) {
			return;
		}

		this.$element.addClass(this.options.loadingClass);

		// create stage
		this.$stage = $('<' + this.settings.stageElement + '>', {
			"class": this.settings.stageClass
		}).wrap( $( '<div/>', {
			"class": this.settings.stageOuterClass
		}));

		// append stage
		this.$element.append(this.$stage.parent());
	};

	/**
	 * Create item DOM elements
	 */
	Owl.prototype.initializeItems = function() {
		var $items = this.$element.find('.owl-item');

		// if the items are already in the DOM, grab them and skip item initialization
		if ($items.length) {
			this._items = $items.get().map(function(item) {
				return $(item);
			});

			this._mergers = this._items.map(function() {
				return 1;
			});

			this.refresh();

			return;
		}

		// append content
		this.replace(this.$element.children().not(this.$stage.parent()));

		// check visibility
		if (this.isVisible()) {
			// update view
			this.refresh();
		} else {
			// invalidate width
			this.invalidate('width');
		}

		this.$element
			.removeClass(this.options.loadingClass)
			.addClass(this.options.loadedClass);
	};

	/**
	 * Initializes the carousel.
	 * @protected
	 */
	Owl.prototype.initialize = function() {
		this.enter('initializing');
		this.trigger('initialize');

		this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);

		if (this.settings.autoWidth && !this.is('pre-loading')) {
			var imgs, nestedSelector, width;
			imgs = this.$element.find('img');
			nestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;
			width = this.$element.children(nestedSelector).width();

			if (imgs.length && width <= 0) {
				this.preloadAutoWidthImages(imgs);
			}
		}

		this.initializeStage();
		this.initializeItems();

		// register event handlers
		this.registerEventHandlers();

		this.leave('initializing');
		this.trigger('initialized');
	};

	/**
	 * @returns {Boolean} visibility of $element
	 *                    if you know the carousel will always be visible you can set `checkVisibility` to `false` to
	 *                    prevent the expensive browser layout forced reflow the $element.is(':visible') does
	 */
	Owl.prototype.isVisible = function() {
		return this.settings.checkVisibility
			? this.$element.is(':visible')
			: true;
	};

	/**
	 * Setups the current settings.
	 * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?
	 * @todo Support for media queries by using `matchMedia` would be nice.
	 * @public
	 */
	Owl.prototype.setup = function() {
		var viewport = this.viewport(),
			overwrites = this.options.responsive,
			match = -1,
			settings = null;

		if (!overwrites) {
			settings = $.extend({}, this.options);
		} else {
			$.each(overwrites, function(breakpoint) {
				if (breakpoint <= viewport && breakpoint > match) {
					match = Number(breakpoint);
				}
			});

			settings = $.extend({}, this.options, overwrites[match]);
			if (typeof settings.stagePadding === 'function') {
				settings.stagePadding = settings.stagePadding();
			}
			delete settings.responsive;

			// responsive class
			if (settings.responsiveClass) {
				this.$element.attr('class',
					this.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\S+\\s', 'g'), '$1' + match)
				);
			}
		}

		this.trigger('change', { property: { name: 'settings', value: settings } });
		this._breakpoint = match;
		this.settings = settings;
		this.invalidate('settings');
		this.trigger('changed', { property: { name: 'settings', value: this.settings } });
	};

	/**
	 * Updates option logic if necessery.
	 * @protected
	 */
	Owl.prototype.optionsLogic = function() {
		if (this.settings.autoWidth) {
			this.settings.stagePadding = false;
			this.settings.merge = false;
		}
	};

	/**
	 * Prepares an item before add.
	 * @todo Rename event parameter `content` to `item`.
	 * @protected
	 * @returns {jQuery|HTMLElement} - The item container.
	 */
	Owl.prototype.prepare = function(item) {
		var event = this.trigger('prepare', { content: item });

		if (!event.data) {
			event.data = $('<' + this.settings.itemElement + '/>')
				.addClass(this.options.itemClass).append(item)
		}

		this.trigger('prepared', { content: event.data });

		return event.data;
	};

	/**
	 * Updates the view.
	 * @public
	 */
	Owl.prototype.update = function() {
		var i = 0,
			n = this._pipe.length,
			filter = $.proxy(function(p) { return this[p] }, this._invalidated),
			cache = {};

		while (i < n) {
			if (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {
				this._pipe[i].run(cache);
			}
			i++;
		}

		this._invalidated = {};

		!this.is('valid') && this.enter('valid');
	};

	/**
	 * Gets the width of the view.
	 * @public
	 * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.
	 * @returns {Number} - The width of the view in pixel.
	 */
	Owl.prototype.width = function(dimension) {
		dimension = dimension || Owl.Width.Default;
		switch (dimension) {
			case Owl.Width.Inner:
			case Owl.Width.Outer:
				return this._width;
			default:
				return this._width - this.settings.stagePadding * 2 + this.settings.margin;
		}
	};

	/**
	 * Refreshes the carousel primarily for adaptive purposes.
	 * @public
	 */
	Owl.prototype.refresh = function() {
		this.enter('refreshing');
		this.trigger('refresh');

		this.setup();

		this.optionsLogic();

		this.$element.addClass(this.options.refreshClass);

		this.update();

		this.$element.removeClass(this.options.refreshClass);

		this.leave('refreshing');
		this.trigger('refreshed');
	};

	/**
	 * Checks window `resize` event.
	 * @protected
	 */
	Owl.prototype.onThrottledResize = function() {
		window.clearTimeout(this.resizeTimer);
		this.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);
	};

	/**
	 * Checks window `resize` event.
	 * @protected
	 */
	Owl.prototype.onResize = function() {
		if (!this._items.length) {
			return false;
		}

		if (this._width === this.$element.width()) {
			return false;
		}

		if (!this.isVisible()) {
			return false;
		}

		this.enter('resizing');

		if (this.trigger('resize').isDefaultPrevented()) {
			this.leave('resizing');
			return false;
		}

		this.invalidate('width');

		this.refresh();

		this.leave('resizing');
		this.trigger('resized');
	};

	/**
	 * Registers event handlers.
	 * @todo Check `msPointerEnabled`
	 * @todo #261
	 * @protected
	 */
	Owl.prototype.registerEventHandlers = function() {
		if ($.support.transition) {
			this.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));
		}

		if (this.settings.responsive !== false) {
			this.on(window, 'resize', this._handlers.onThrottledResize);
		}

		if (this.settings.mouseDrag) {
			this.$element.addClass(this.options.dragClass);
			this.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));
			this.$stage.on('dragstart.owl.core selectstart.owl.core', function() { return false });
		}

		if (this.settings.touchDrag){
			this.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));
			this.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));
		}
	};

	/**
	 * Handles `touchstart` and `mousedown` events.
	 * @todo Horizontal swipe threshold as option
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragStart = function(event) {
		var stage = null;

		if (event.which === 3) {
			return;
		}

		if ($.support.transform) {
			stage = this.$stage.css('transform').replace(/.*\(|\)| /g, '').split(',');
			stage = {
				x: stage[stage.length === 16 ? 12 : 4],
				y: stage[stage.length === 16 ? 13 : 5]
			};
		} else {
			stage = this.$stage.position();
			stage = {
				x: this.settings.rtl ?
					stage.left + this.$stage.width() - this.width() + this.settings.margin :
					stage.left,
				y: stage.top
			};
		}

		if (this.is('animating')) {
			$.support.transform ? this.animate(stage.x) : this.$stage.stop()
			this.invalidate('position');
		}

		this.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');

		this.speed(0);

		this._drag.time = new Date().getTime();
		this._drag.target = $(event.target);
		this._drag.stage.start = stage;
		this._drag.stage.current = stage;
		this._drag.pointer = this.pointer(event);

		$(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));

		$(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function(event) {
			var delta = this.difference(this._drag.pointer, this.pointer(event));

			$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));

			if (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {
				return;
			}

			event.preventDefault();

			this.enter('dragging');
			this.trigger('drag');
		}, this));
	};

	/**
	 * Handles the `touchmove` and `mousemove` events.
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragMove = function(event) {
		var minimum = null,
			maximum = null,
			pull = null,
			delta = this.difference(this._drag.pointer, this.pointer(event)),
			stage = this.difference(this._drag.stage.start, delta);

		if (!this.is('dragging')) {
			return;
		}

		event.preventDefault();

		if (this.settings.loop) {
			minimum = this.coordinates(this.minimum());
			maximum = this.coordinates(this.maximum() + 1) - minimum;
			stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;
		} else {
			minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());
			maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());
			pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;
			stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);
		}

		this._drag.stage.current = stage;

		this.animate(stage.x);
	};

	/**
	 * Handles the `touchend` and `mouseup` events.
	 * @todo #261
	 * @todo Threshold for click event
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragEnd = function(event) {
		var delta = this.difference(this._drag.pointer, this.pointer(event)),
			stage = this._drag.stage.current,
			direction = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';

		$(document).off('.owl.core');

		this.$element.removeClass(this.options.grabClass);

		if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {
			this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);
			this.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));
			this.invalidate('position');
			this.update();

			this._drag.direction = direction;

			if (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {
				this._drag.target.one('click.owl.core', function() { return false; });
			}
		}

		if (!this.is('dragging')) {
			return;
		}

		this.leave('dragging');
		this.trigger('dragged');
	};

	/**
	 * Gets absolute position of the closest item for a coordinate.
	 * @todo Setting `freeDrag` makes `closest` not reusable. See #165.
	 * @protected
	 * @param {Number} coordinate - The coordinate in pixel.
	 * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.
	 * @return {Number} - The absolute position of the closest item.
	 */
	Owl.prototype.closest = function(coordinate, direction) {
		var position = -1,
			pull = 30,
			width = this.width(),
			coordinates = this.coordinates();

		if (!this.settings.freeDrag) {
			// check closest item
			$.each(coordinates, $.proxy(function(index, value) {
				// on a left pull, check on current index
				if (direction === 'left' && coordinate > value - pull && coordinate < value + pull) {
					position = index;
				// on a right pull, check on previous index
				// to do so, subtract width from value and set position = index + 1
				} else if (direction === 'right' && coordinate > value - width - pull && coordinate < value - width + pull) {
					position = index + 1;
				} else if (this.op(coordinate, '<', value)
					&& this.op(coordinate, '>', coordinates[index + 1] !== undefined ? coordinates[index + 1] : value - width)) {
					position = direction === 'left' ? index + 1 : index;
				}
				return position === -1;
			}, this));
		}

		if (!this.settings.loop) {
			// non loop boundries
			if (this.op(coordinate, '>', coordinates[this.minimum()])) {
				position = coordinate = this.minimum();
			} else if (this.op(coordinate, '<', coordinates[this.maximum()])) {
				position = coordinate = this.maximum();
			}
		}

		return position;
	};

	/**
	 * Animates the stage.
	 * @todo #270
	 * @public
	 * @param {Number} coordinate - The coordinate in pixels.
	 */
	Owl.prototype.animate = function(coordinate) {
		var animate = this.speed() > 0;

		this.is('animating') && this.onTransitionEnd();

		if (animate) {
			this.enter('animating');
			this.trigger('translate');
		}

		if ($.support.transform3d && $.support.transition) {
			this.$stage.css({
				transform: 'translate3d(' + coordinate + 'px,0px,0px)',
				transition: (this.speed() / 1000) + 's' + (
					this.settings.slideTransition ? ' ' + this.settings.slideTransition : ''
				)
			});
		} else if (animate) {
			this.$stage.animate({
				left: coordinate + 'px'
			}, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));
		} else {
			this.$stage.css({
				left: coordinate + 'px'
			});
		}
	};

	/**
	 * Checks whether the carousel is in a specific state or not.
	 * @param {String} state - The state to check.
	 * @returns {Boolean} - The flag which indicates if the carousel is busy.
	 */
	Owl.prototype.is = function(state) {
		return this._states.current[state] && this._states.current[state] > 0;
	};

	/**
	 * Sets the absolute position of the current item.
	 * @public
	 * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.
	 * @returns {Number} - The absolute position of the current item.
	 */
	Owl.prototype.current = function(position) {
		if (position === undefined) {
			return this._current;
		}

		if (this._items.length === 0) {
			return undefined;
		}

		position = this.normalize(position);

		if (this._current !== position) {
			var event = this.trigger('change', { property: { name: 'position', value: position } });

			if (event.data !== undefined) {
				position = this.normalize(event.data);
			}

			this._current = position;

			this.invalidate('position');

			this.trigger('changed', { property: { name: 'position', value: this._current } });
		}

		return this._current;
	};

	/**
	 * Invalidates the given part of the update routine.
	 * @param {String} [part] - The part to invalidate.
	 * @returns {Array.<String>} - The invalidated parts.
	 */
	Owl.prototype.invalidate = function(part) {
		if ($.type(part) === 'string') {
			this._invalidated[part] = true;
			this.is('valid') && this.leave('valid');
		}
		return $.map(this._invalidated, function(v, i) { return i });
	};

	/**
	 * Resets the absolute position of the current item.
	 * @public
	 * @param {Number} position - The absolute position of the new item.
	 */
	Owl.prototype.reset = function(position) {
		position = this.normalize(position);

		if (position === undefined) {
			return;
		}

		this._speed = 0;
		this._current = position;

		this.suppress([ 'translate', 'translated' ]);

		this.animate(this.coordinates(position));

		this.release([ 'translate', 'translated' ]);
	};

	/**
	 * Normalizes an absolute or a relative position of an item.
	 * @public
	 * @param {Number} position - The absolute or relative position to normalize.
	 * @param {Boolean} [relative=false] - Whether the given position is relative or not.
	 * @returns {Number} - The normalized position.
	 */
	Owl.prototype.normalize = function(position, relative) {
		var n = this._items.length,
			m = relative ? 0 : this._clones.length;

		if (!this.isNumeric(position) || n < 1) {
			position = undefined;
		} else if (position < 0 || position >= n + m) {
			position = ((position - m / 2) % n + n) % n + m / 2;
		}

		return position;
	};

	/**
	 * Converts an absolute position of an item into a relative one.
	 * @public
	 * @param {Number} position - The absolute position to convert.
	 * @returns {Number} - The converted position.
	 */
	Owl.prototype.relative = function(position) {
		position -= this._clones.length / 2;
		return this.normalize(position, true);
	};

	/**
	 * Gets the maximum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
	Owl.prototype.maximum = function(relative) {
		var settings = this.settings,
			maximum = this._coordinates.length,
			iterator,
			reciprocalItemsWidth,
			elementWidth;

		if (settings.loop) {
			maximum = this._clones.length / 2 + this._items.length - 1;
		} else if (settings.autoWidth || settings.merge) {
			iterator = this._items.length;
			if (iterator) {
				reciprocalItemsWidth = this._items[--iterator].width();
				elementWidth = this.$element.width();
				while (iterator--) {
					reciprocalItemsWidth += this._items[iterator].width() + this.settings.margin;
					if (reciprocalItemsWidth > elementWidth) {
						break;
					}
				}
			}
			maximum = iterator + 1;
		} else if (settings.center) {
			maximum = this._items.length - 1;
		} else {
			maximum = this._items.length - settings.items;
		}

		if (relative) {
			maximum -= this._clones.length / 2;
		}

		return Math.max(maximum, 0);
	};

	/**
	 * Gets the minimum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
	Owl.prototype.minimum = function(relative) {
		return relative ? 0 : this._clones.length / 2;
	};

	/**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
	Owl.prototype.items = function(position) {
		if (position === undefined) {
			return this._items.slice();
		}

		position = this.normalize(position, true);
		return this._items[position];
	};

	/**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
	Owl.prototype.mergers = function(position) {
		if (position === undefined) {
			return this._mergers.slice();
		}

		position = this.normalize(position, true);
		return this._mergers[position];
	};

	/**
	 * Gets the absolute positions of clones for an item.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.
	 */
	Owl.prototype.clones = function(position) {
		var odd = this._clones.length / 2,
			even = odd + this._items.length,
			map = function(index) { return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2 };

		if (position === undefined) {
			return $.map(this._clones, function(v, i) { return map(i) });
		}

		return $.map(this._clones, function(v, i) { return v === position ? map(i) : null });
	};

	/**
	 * Sets the current animation speed.
	 * @public
	 * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.
	 * @returns {Number} - The current animation speed in milliseconds.
	 */
	Owl.prototype.speed = function(speed) {
		if (speed !== undefined) {
			this._speed = speed;
		}

		return this._speed;
	};

	/**
	 * Gets the coordinate of an item.
	 * @todo The name of this method is missleanding.
	 * @public
	 * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.
	 * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.
	 */
	Owl.prototype.coordinates = function(position) {
		var multiplier = 1,
			newPosition = position - 1,
			coordinate;

		if (position === undefined) {
			return $.map(this._coordinates, $.proxy(function(coordinate, index) {
				return this.coordinates(index);
			}, this));
		}

		if (this.settings.center) {
			if (this.settings.rtl) {
				multiplier = -1;
				newPosition = position + 1;
			}

			coordinate = this._coordinates[position];
			coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;
		} else {
			coordinate = this._coordinates[newPosition] || 0;
		}

		coordinate = Math.ceil(coordinate);

		return coordinate;
	};

	/**
	 * Calculates the speed for a translation.
	 * @protected
	 * @param {Number} from - The absolute position of the start item.
	 * @param {Number} to - The absolute position of the target item.
	 * @param {Number} [factor=undefined] - The time factor in milliseconds.
	 * @returns {Number} - The time in milliseconds for the translation.
	 */
	Owl.prototype.duration = function(from, to, factor) {
		if (factor === 0) {
			return 0;
		}

		return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));
	};

	/**
	 * Slides to the specified item.
	 * @public
	 * @param {Number} position - The position of the item.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.to = function(position, speed) {
		var current = this.current(),
			revert = null,
			distance = position - this.relative(current),
			direction = (distance > 0) - (distance < 0),
			items = this._items.length,
			minimum = this.minimum(),
			maximum = this.maximum();

		if (this.settings.loop) {
			if (!this.settings.rewind && Math.abs(distance) > items / 2) {
				distance += direction * -1 * items;
			}

			position = current + distance;
			revert = ((position - minimum) % items + items) % items + minimum;

			if (revert !== position && revert - distance <= maximum && revert - distance > 0) {
				current = revert - distance;
				position = revert;
				this.reset(current);
			}
		} else if (this.settings.rewind) {
			maximum += 1;
			position = (position % maximum + maximum) % maximum;
		} else {
			position = Math.max(minimum, Math.min(maximum, position));
		}

		this.speed(this.duration(current, position, speed));
		this.current(position);

		if (this.isVisible()) {
			this.update();
		}
	};

	/**
	 * Slides to the next item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.next = function(speed) {
		speed = speed || false;
		this.to(this.relative(this.current()) + 1, speed);
	};

	/**
	 * Slides to the previous item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.prev = function(speed) {
		speed = speed || false;
		this.to(this.relative(this.current()) - 1, speed);
	};

	/**
	 * Handles the end of an animation.
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onTransitionEnd = function(event) {

		// if css2 animation then event object is undefined
		if (event !== undefined) {
			event.stopPropagation();

			// Catch only owl-stage transitionEnd event
			if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {
				return false;
			}
		}

		this.leave('animating');
		this.trigger('translated');
	};

	/**
	 * Gets viewport width.
	 * @protected
	 * @return {Number} - The width in pixel.
	 */
	Owl.prototype.viewport = function() {
		var width;
		if (this.options.responsiveBaseElement !== window) {
			width = $(this.options.responsiveBaseElement).width();
		} else if (window.innerWidth) {
			width = window.innerWidth;
		} else if (document.documentElement && document.documentElement.clientWidth) {
			width = document.documentElement.clientWidth;
		} else {
			console.warn('Can not detect viewport width.');
		}
		return width;
	};

	/**
	 * Replaces the current content.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The new content.
	 */
	Owl.prototype.replace = function(content) {
		this.$stage.empty();
		this._items = [];

		if (content) {
			content = (content instanceof jQuery) ? content : $(content);
		}

		if (this.settings.nestedItemSelector) {
			content = content.find('.' + this.settings.nestedItemSelector);
		}

		content.filter(function() {
			return this.nodeType === 1;
		}).each($.proxy(function(index, item) {
			item = this.prepare(item);
			this.$stage.append(item);
			this._items.push(item);
			this._mergers.push(item.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		}, this));

		this.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);

		this.invalidate('items');
	};

	/**
	 * Adds an item.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The item content to add.
	 * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.
	 */
	Owl.prototype.add = function(content, position) {
		var current = this.relative(this._current);

		position = position === undefined ? this._items.length : this.normalize(position, true);
		content = content instanceof jQuery ? content : $(content);

		this.trigger('add', { content: content, position: position });

		content = this.prepare(content);

		if (this._items.length === 0 || position === this._items.length) {
			this._items.length === 0 && this.$stage.append(content);
			this._items.length !== 0 && this._items[position - 1].after(content);
			this._items.push(content);
			this._mergers.push(content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		} else {
			this._items[position].before(content);
			this._items.splice(position, 0, content);
			this._mergers.splice(position, 0, content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		}

		this._items[current] && this.reset(this._items[current].index());

		this.invalidate('items');

		this.trigger('added', { content: content, position: position });
	};

	/**
	 * Removes an item by its position.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {Number} position - The relative position of the item to remove.
	 */
	Owl.prototype.remove = function(position) {
		position = this.normalize(position, true);

		if (position === undefined) {
			return;
		}

		this.trigger('remove', { content: this._items[position], position: position });

		this._items[position].remove();
		this._items.splice(position, 1);
		this._mergers.splice(position, 1);

		this.invalidate('items');

		this.trigger('removed', { content: null, position: position });
	};

	/**
	 * Preloads images with auto width.
	 * @todo Replace by a more generic approach
	 * @protected
	 */
	Owl.prototype.preloadAutoWidthImages = function(images) {
		images.each($.proxy(function(i, element) {
			this.enter('pre-loading');
			element = $(element);
			$(new Image()).one('load', $.proxy(function(e) {
				element.attr('src', e.target.src);
				element.css('opacity', 1);
				this.leave('pre-loading');
				!this.is('pre-loading') && !this.is('initializing') && this.refresh();
			}, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));
		}, this));
	};

	/**
	 * Destroys the carousel.
	 * @public
	 */
	Owl.prototype.destroy = function() {

		this.$element.off('.owl.core');
		this.$stage.off('.owl.core');
		$(document).off('.owl.core');

		if (this.settings.responsive !== false) {
			window.clearTimeout(this.resizeTimer);
			this.off(window, 'resize', this._handlers.onThrottledResize);
		}

		for (var i in this._plugins) {
			this._plugins[i].destroy();
		}

		this.$stage.children('.cloned').remove();

		this.$stage.unwrap();
		this.$stage.children().contents().unwrap();
		this.$stage.children().unwrap();
		this.$stage.remove();
		this.$element
			.removeClass(this.options.refreshClass)
			.removeClass(this.options.loadingClass)
			.removeClass(this.options.loadedClass)
			.removeClass(this.options.rtlClass)
			.removeClass(this.options.dragClass)
			.removeClass(this.options.grabClass)
			.attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\S+\\s', 'g'), ''))
			.removeData('owl.carousel');
	};

	/**
	 * Operators to calculate right-to-left and left-to-right.
	 * @protected
	 * @param {Number} [a] - The left side operand.
	 * @param {String} [o] - The operator.
	 * @param {Number} [b] - The right side operand.
	 */
	Owl.prototype.op = function(a, o, b) {
		var rtl = this.settings.rtl;
		switch (o) {
			case '<':
				return rtl ? a > b : a < b;
			case '>':
				return rtl ? a < b : a > b;
			case '>=':
				return rtl ? a <= b : a >= b;
			case '<=':
				return rtl ? a >= b : a <= b;
			default:
				break;
		}
	};

	/**
	 * Attaches to an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The event handler to attach.
	 * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.
	 */
	Owl.prototype.on = function(element, event, listener, capture) {
		if (element.addEventListener) {
			element.addEventListener(event, listener, capture);
		} else if (element.attachEvent) {
			element.attachEvent('on' + event, listener);
		}
	};

	/**
	 * Detaches from an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The attached event handler to detach.
	 * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.
	 */
	Owl.prototype.off = function(element, event, listener, capture) {
		if (element.removeEventListener) {
			element.removeEventListener(event, listener, capture);
		} else if (element.detachEvent) {
			element.detachEvent('on' + event, listener);
		}
	};

	/**
	 * Triggers a public event.
	 * @todo Remove `status`, `relatedTarget` should be used instead.
	 * @protected
	 * @param {String} name - The event name.
	 * @param {*} [data=null] - The event data.
	 * @param {String} [namespace=carousel] - The event namespace.
	 * @param {String} [state] - The state which is associated with the event.
	 * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.
	 * @returns {Event} - The event arguments.
	 */
	Owl.prototype.trigger = function(name, data, namespace, state, enter) {
		var status = {
			item: { count: this._items.length, index: this.current() }
		}, handler = $.camelCase(
			$.grep([ 'on', name, namespace ], function(v) { return v })
				.join('-').toLowerCase()
		), event = $.Event(
			[ name, 'owl', namespace || 'carousel' ].join('.').toLowerCase(),
			$.extend({ relatedTarget: this }, status, data)
		);

		if (!this._supress[name]) {
			$.each(this._plugins, function(name, plugin) {
				if (plugin.onTrigger) {
					plugin.onTrigger(event);
				}
			});

			this.register({ type: Owl.Type.Event, name: name });
			this.$element.trigger(event);

			if (this.settings && typeof this.settings[handler] === 'function') {
				this.settings[handler].call(this, event);
			}
		}

		return event;
	};

	/**
	 * Enters a state.
	 * @param name - The state name.
	 */
	Owl.prototype.enter = function(name) {
		$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
			if (this._states.current[name] === undefined) {
				this._states.current[name] = 0;
			}

			this._states.current[name]++;
		}, this));
	};

	/**
	 * Leaves a state.
	 * @param name - The state name.
	 */
	Owl.prototype.leave = function(name) {
		$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
			this._states.current[name]--;
		}, this));
	};

	/**
	 * Registers an event or state.
	 * @public
	 * @param {Object} object - The event or state to register.
	 */
	Owl.prototype.register = function(object) {
		if (object.type === Owl.Type.Event) {
			if (!$.event.special[object.name]) {
				$.event.special[object.name] = {};
			}

			if (!$.event.special[object.name].owl) {
				var _default = $.event.special[object.name]._default;
				$.event.special[object.name]._default = function(e) {
					if (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {
						return _default.apply(this, arguments);
					}
					return e.namespace && e.namespace.indexOf('owl') > -1;
				};
				$.event.special[object.name].owl = true;
			}
		} else if (object.type === Owl.Type.State) {
			if (!this._states.tags[object.name]) {
				this._states.tags[object.name] = object.tags;
			} else {
				this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);
			}

			this._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function(tag, i) {
				return $.inArray(tag, this._states.tags[object.name]) === i;
			}, this));
		}
	};

	/**
	 * Suppresses events.
	 * @protected
	 * @param {Array.<String>} events - The events to suppress.
	 */
	Owl.prototype.suppress = function(events) {
		$.each(events, $.proxy(function(index, event) {
			this._supress[event] = true;
		}, this));
	};

	/**
	 * Releases suppressed events.
	 * @protected
	 * @param {Array.<String>} events - The events to release.
	 */
	Owl.prototype.release = function(events) {
		$.each(events, $.proxy(function(index, event) {
			delete this._supress[event];
		}, this));
	};

	/**
	 * Gets unified pointer coordinates from event.
	 * @todo #261
	 * @protected
	 * @param {Event} - The `mousedown` or `touchstart` event.
	 * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.
	 */
	Owl.prototype.pointer = function(event) {
		var result = { x: null, y: null };

		event = event.originalEvent || event || window.event;

		event = event.touches && event.touches.length ?
			event.touches[0] : event.changedTouches && event.changedTouches.length ?
				event.changedTouches[0] : event;

		if (event.pageX) {
			result.x = event.pageX;
			result.y = event.pageY;
		} else {
			result.x = event.clientX;
			result.y = event.clientY;
		}

		return result;
	};

	/**
	 * Determines if the input is a Number or something that can be coerced to a Number
	 * @protected
	 * @param {Number|String|Object|Array|Boolean|RegExp|Function|Symbol} - The input to be tested
	 * @returns {Boolean} - An indication if the input is a Number or can be coerced to a Number
	 */
	Owl.prototype.isNumeric = function(number) {
		return !isNaN(parseFloat(number));
	};

	/**
	 * Gets the difference of two vectors.
	 * @todo #261
	 * @protected
	 * @param {Object} - The first vector.
	 * @param {Object} - The second vector.
	 * @returns {Object} - The difference.
	 */
	Owl.prototype.difference = function(first, second) {
		return {
			x: first.x - second.x,
			y: first.y - second.y
		};
	};

	/**
	 * The jQuery Plugin for the Owl Carousel
	 * @todo Navigation plugin `next` and `prev`
	 * @public
	 */
	$.fn.owlCarousel = function(option) {
		var args = Array.prototype.slice.call(arguments, 1);

		return this.each(function() {
			var $this = $(this),
				data = $this.data('owl.carousel');

			if (!data) {
				data = new Owl(this, typeof option == 'object' && option);
				$this.data('owl.carousel', data);

				$.each([
					'next', 'prev', 'to', 'destroy', 'refresh', 'replace', 'add', 'remove'
				], function(i, event) {
					data.register({ type: Owl.Type.Event, name: event });
					data.$element.on(event + '.owl.carousel.core', $.proxy(function(e) {
						if (e.namespace && e.relatedTarget !== this) {
							this.suppress([ event ]);
							data[event].apply(this, [].slice.call(arguments, 1));
							this.release([ event ]);
						}
					}, data));
				});
			}

			if (typeof option == 'string' && option.charAt(0) !== '_') {
				data[option].apply(data, args);
			}
		});
	};

	/**
	 * The constructor for the jQuery Plugin
	 * @public
	 */
	$.fn.owlCarousel.Constructor = Owl;

})(window.Zepto || window.jQuery, window, document);

/**
 * AutoRefresh Plugin
 * @version 2.3.4
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the auto refresh plugin.
	 * @class The Auto Refresh Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var AutoRefresh = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Refresh interval.
		 * @protected
		 * @type {number}
		 */
		this._interval = null;

		/**
		 * Whether the element is currently visible or not.
		 * @protected
		 * @type {Boolean}
		 */
		this._visible = null;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoRefresh) {
					this.watch();
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	AutoRefresh.Defaults = {
		autoRefresh: true,
		autoRefreshInterval: 500
	};

	/**
	 * Watches the element.
	 */
	AutoRefresh.prototype.watch = function() {
		if (this._interval) {
			return;
		}

		this._visible = this._core.isVisible();
		this._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);
	};

	/**
	 * Refreshes the element.
	 */
	AutoRefresh.prototype.refresh = function() {
		if (this._core.isVisible() === this._visible) {
			return;
		}

		this._visible = !this._visible;

		this._core.$element.toggleClass('owl-hidden', !this._visible);

		this._visible && (this._core.invalidate('width') && this._core.refresh());
	};

	/**
	 * Destroys the plugin.
	 */
	AutoRefresh.prototype.destroy = function() {
		var handler, property;

		window.clearInterval(this._interval);

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;

})(window.Zepto || window.jQuery, window, document);

/**
 * Lazy Plugin
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the lazy plugin.
	 * @class The Lazy Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Lazy = function(carousel) {

		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Already loaded items.
		 * @protected
		 * @type {Array.<jQuery>}
		 */
		this._loaded = [];

		/**
		 * Event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel change.owl.carousel resized.owl.carousel': $.proxy(function(e) {
				if (!e.namespace) {
					return;
				}

				if (!this._core.settings || !this._core.settings.lazyLoad) {
					return;
				}

				if ((e.property && e.property.name == 'position') || e.type == 'initialized') {
					var settings = this._core.settings,
						n = (settings.center && Math.ceil(settings.items / 2) || settings.items),
						i = ((settings.center && n * -1) || 0),
						position = (e.property && e.property.value !== undefined ? e.property.value : this._core.current()) + i,
						clones = this._core.clones().length,
						load = $.proxy(function(i, v) { this.load(v) }, this);
					//TODO: Need documentation for this new option
					if (settings.lazyLoadEager > 0) {
						n += settings.lazyLoadEager;
						// If the carousel is looping also preload images that are to the "left"
						if (settings.loop) {
              position -= settings.lazyLoadEager;
              n++;
            }
					}

					while (i++ < n) {
						this.load(clones / 2 + this._core.relative(position));
						clones && $.each(this._core.clones(this._core.relative(position)), load);
						position++;
					}
				}
			}, this)
		};

		// set the default options
		this._core.options = $.extend({}, Lazy.Defaults, this._core.options);

		// register event handler
		this._core.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	Lazy.Defaults = {
		lazyLoad: false,
		lazyLoadEager: 0
	};

	/**
	 * Loads all resources of an item at the specified position.
	 * @param {Number} position - The absolute position of the item.
	 * @protected
	 */
	Lazy.prototype.load = function(position) {
		var $item = this._core.$stage.children().eq(position),
			$elements = $item && $item.find('.owl-lazy');

		if (!$elements || $.inArray($item.get(0), this._loaded) > -1) {
			return;
		}

		$elements.each($.proxy(function(index, element) {
			var $element = $(element), image,
                url = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src') || $element.attr('data-srcset');

			this._core.trigger('load', { element: $element, url: url }, 'lazy');

			if ($element.is('img')) {
				$element.one('load.owl.lazy', $.proxy(function() {
					$element.css('opacity', 1);
					this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
				}, this)).attr('src', url);
            } else if ($element.is('source')) {
                $element.one('load.owl.lazy', $.proxy(function() {
                    this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
                }, this)).attr('srcset', url);
			} else {
				image = new Image();
				image.onload = $.proxy(function() {
					$element.css({
						'background-image': 'url("' + url + '")',
						'opacity': '1'
					});
					this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
				}, this);
				image.src = url;
			}
		}, this));

		this._loaded.push($item.get(0));
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Lazy.prototype.destroy = function() {
		var handler, property;

		for (handler in this.handlers) {
			this._core.$element.off(handler, this.handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;

})(window.Zepto || window.jQuery, window, document);

/**
 * AutoHeight Plugin
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the auto height plugin.
	 * @class The Auto Height Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var AutoHeight = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		this._previousHeight = null;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight) {
					this.update();
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight && e.property.name === 'position'){
					this.update();
				}
			}, this),
			'loaded.owl.lazy': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight
					&& e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {
					this.update();
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);
		this._intervalId = null;
		var refThis = this;

		// These changes have been taken from a PR by gavrochelegnou proposed in #1575
		// and have been made compatible with the latest jQuery version
		$(window).on('load', function() {
			if (refThis._core.settings.autoHeight) {
				refThis.update();
			}
		});

		// Autoresize the height of the carousel when window is resized
		// When carousel has images, the height is dependent on the width
		// and should also change on resize
		$(window).resize(function() {
			if (refThis._core.settings.autoHeight) {
				if (refThis._intervalId != null) {
					clearTimeout(refThis._intervalId);
				}

				refThis._intervalId = setTimeout(function() {
					refThis.update();
				}, 250);
			}
		});

	};

	/**
	 * Default options.
	 * @public
	 */
	AutoHeight.Defaults = {
		autoHeight: false,
		autoHeightClass: 'owl-height'
	};

	/**
	 * Updates the view.
	 */
	AutoHeight.prototype.update = function() {
		var start = this._core._current,
			end = start + this._core.settings.items,
			lazyLoadEnabled = this._core.settings.lazyLoad,
			visible = this._core.$stage.children().toArray().slice(start, end),
			heights = [],
			maxheight = 0;

		$.each(visible, function(index, item) {
			heights.push($(item).height());
		});

		maxheight = Math.max.apply(null, heights);

		if (maxheight <= 1 && lazyLoadEnabled && this._previousHeight) {
			maxheight = this._previousHeight;
		}

		this._previousHeight = maxheight;

		this._core.$stage.parent()
			.height(maxheight)
			.addClass(this._core.settings.autoHeightClass);
	};

	AutoHeight.prototype.destroy = function() {
		var handler, property;

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] !== 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;

})(window.Zepto || window.jQuery, window, document);

/**
 * Video Plugin
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the video plugin.
	 * @class The Video Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Video = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Cache all video URLs.
		 * @protected
		 * @type {Object}
		 */
		this._videos = {};

		/**
		 * Current playing item.
		 * @protected
		 * @type {jQuery}
		 */
		this._playing = null;

		/**
		 * All event handlers.
		 * @todo The cloned content removale is too late
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					this._core.register({ type: 'state', name: 'playing', tags: [ 'interacting' ] });
				}
			}, this),
			'resize.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.video && this.isInFullScreen()) {
					e.preventDefault();
				}
			}, this),
			'refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.is('resizing')) {
					this._core.$stage.find('.cloned .owl-video-frame').remove();
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'position' && this._playing) {
					this.stop();
				}
			}, this),
			'prepared.owl.carousel': $.proxy(function(e) {
				if (!e.namespace) {
					return;
				}

				var $element = $(e.content).find('.owl-video');

				if ($element.length) {
					$element.css('display', 'none');
					this.fetch($element, $(e.content));
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Video.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);

		this._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function(e) {
			this.play(e);
		}, this));
	};

	/**
	 * Default options.
	 * @public
	 */
	Video.Defaults = {
		video: false,
		videoHeight: false,
		videoWidth: false
	};

	/**
	 * Gets the video ID and the type (YouTube/Vimeo/vzaar only).
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {jQuery} item - The item containing the video.
	 */
	Video.prototype.fetch = function(target, item) {
			var type = (function() {
					if (target.attr('data-vimeo-id')) {
						return 'vimeo';
					} else if (target.attr('data-vzaar-id')) {
						return 'vzaar'
					} else {
						return 'youtube';
					}
				})(),
				id = target.attr('data-vimeo-id') || target.attr('data-youtube-id') || target.attr('data-vzaar-id'),
				width = target.attr('data-width') || this._core.settings.videoWidth,
				height = target.attr('data-height') || this._core.settings.videoHeight,
				url = target.attr('href');

		if (url) {

			/*
					Parses the id's out of the following urls (and probably more):
					https://www.youtube.com/watch?v=:id
					https://youtu.be/:id
					https://vimeo.com/:id
					https://vimeo.com/channels/:channel/:id
					https://vimeo.com/groups/:group/videos/:id
					https://app.vzaar.com/videos/:id

					Visual example: https://regexper.com/#(http%3A%7Chttps%3A%7C)%5C%2F%5C%2F(player.%7Cwww.%7Capp.)%3F(vimeo%5C.com%7Cyoutu(be%5C.com%7C%5C.be%7Cbe%5C.googleapis%5C.com)%7Cvzaar%5C.com)%5C%2F(video%5C%2F%7Cvideos%5C%2F%7Cembed%5C%2F%7Cchannels%5C%2F.%2B%5C%2F%7Cgroups%5C%2F.%2B%5C%2F%7Cwatch%5C%3Fv%3D%7Cv%5C%2F)%3F(%5BA-Za-z0-9._%25-%5D*)(%5C%26%5CS%2B)%3F
			*/

			id = url.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);

			if (id[3].indexOf('youtu') > -1) {
				type = 'youtube';
			} else if (id[3].indexOf('vimeo') > -1) {
				type = 'vimeo';
			} else if (id[3].indexOf('vzaar') > -1) {
				type = 'vzaar';
			} else {
				throw new Error('Video URL not supported.');
			}
			id = id[6];
		} else {
			throw new Error('Missing video URL.');
		}

		this._videos[url] = {
			type: type,
			id: id,
			width: width,
			height: height
		};

		item.attr('data-video', url);

		this.thumbnail(target, this._videos[url]);
	};

	/**
	 * Creates video thumbnail.
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {Object} info - The video info object.
	 * @see `fetch`
	 */
	Video.prototype.thumbnail = function(target, video) {
		var tnLink,
			icon,
			path,
			dimensions = video.width && video.height ? 'width:' + video.width + 'px;height:' + video.height + 'px;' : '',
			customTn = target.find('img'),
			srcType = 'src',
			lazyClass = '',
			settings = this._core.settings,
			create = function(path) {
				icon = '<div class="owl-video-play-icon"></div>';

				if (settings.lazyLoad) {
					tnLink = $('<div/>',{
						"class": 'owl-video-tn ' + lazyClass,
						"srcType": path
					});
				} else {
					tnLink = $( '<div/>', {
						"class": "owl-video-tn",
						"style": 'opacity:1;background-image:url(' + path + ')'
					});
				}
				target.after(tnLink);
				target.after(icon);
			};

		// wrap video content into owl-video-wrapper div
		target.wrap( $( '<div/>', {
			"class": "owl-video-wrapper",
			"style": dimensions
		}));

		if (this._core.settings.lazyLoad) {
			srcType = 'data-src';
			lazyClass = 'owl-lazy';
		}

		// custom thumbnail
		if (customTn.length) {
			create(customTn.attr(srcType));
			customTn.remove();
			return false;
		}

		if (video.type === 'youtube') {
			path = "//img.youtube.com/vi/" + video.id + "/hqdefault.jpg";
			create(path);
		} else if (video.type === 'vimeo') {
			$.ajax({
				type: 'GET',
				url: '//vimeo.com/api/v2/video/' + video.id + '.json',
				jsonp: 'callback',
				dataType: 'jsonp',
				success: function(data) {
					path = data[0].thumbnail_large;
					create(path);
				}
			});
		} else if (video.type === 'vzaar') {
			$.ajax({
				type: 'GET',
				url: '//vzaar.com/api/videos/' + video.id + '.json',
				jsonp: 'callback',
				dataType: 'jsonp',
				success: function(data) {
					path = data.framegrab_url;
					create(path);
				}
			});
		}
	};

	/**
	 * Stops the current video.
	 * @public
	 */
	Video.prototype.stop = function() {
		this._core.trigger('stop', null, 'video');
		this._playing.find('.owl-video-frame').remove();
		this._playing.removeClass('owl-video-playing');
		this._playing = null;
		this._core.leave('playing');
		this._core.trigger('stopped', null, 'video');
	};

	/**
	 * Starts the current video.
	 * @public
	 * @param {Event} event - The event arguments.
	 */
	Video.prototype.play = function(event) {
		var target = $(event.target),
			item = target.closest('.' + this._core.settings.itemClass),
			video = this._videos[item.attr('data-video')],
			width = video.width || '100%',
			height = video.height || this._core.$stage.height(),
			html,
			iframe;

		if (this._playing) {
			return;
		}

		this._core.enter('playing');
		this._core.trigger('play', null, 'video');

		item = this._core.items(this._core.relative(item.index()));

		this._core.reset(item.index());

		html = $( '<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>' );
		html.attr( 'height', height );
		html.attr( 'width', width );
		if (video.type === 'youtube') {
			html.attr( 'src', '//www.youtube.com/embed/' + video.id + '?autoplay=1&rel=0&v=' + video.id );
		} else if (video.type === 'vimeo') {
			html.attr( 'src', '//player.vimeo.com/video/' + video.id + '?autoplay=1' );
		} else if (video.type === 'vzaar') {
			html.attr( 'src', '//view.vzaar.com/' + video.id + '/player?autoplay=true' );
		}

		iframe = $(html).wrap( '<div class="owl-video-frame" />' ).insertAfter(item.find('.owl-video'));

		this._playing = item.addClass('owl-video-playing');
	};

	/**
	 * Checks whether an video is currently in full screen mode or not.
	 * @todo Bad style because looks like a readonly method but changes members.
	 * @protected
	 * @returns {Boolean}
	 */
	Video.prototype.isInFullScreen = function() {
		var element = document.fullscreenElement || document.mozFullScreenElement ||
				document.webkitFullscreenElement;

		return element && $(element).parent().hasClass('owl-video-frame');
	};

	/**
	 * Destroys the plugin.
	 */
	Video.prototype.destroy = function() {
		var handler, property;

		this._core.$element.off('click.owl.video');

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Video = Video;

})(window.Zepto || window.jQuery, window, document);

/**
 * Animate Plugin
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the animate plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
	var Animate = function(scope) {
		this.core = scope;
		this.core.options = $.extend({}, Animate.Defaults, this.core.options);
		this.swapping = true;
		this.previous = undefined;
		this.next = undefined;

		this.handlers = {
			'change.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name == 'position') {
					this.previous = this.core.current();
					this.next = e.property.value;
				}
			}, this),
			'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					this.swapping = e.type == 'translated';
				}
			}, this),
			'translate.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {
					this.swap();
				}
			}, this)
		};

		this.core.$element.on(this.handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	Animate.Defaults = {
		animateOut: false,
		animateIn: false
	};

	/**
	 * Toggles the animation classes whenever an translations starts.
	 * @protected
	 * @returns {Boolean|undefined}
	 */
	Animate.prototype.swap = function() {

		if (this.core.settings.items !== 1) {
			return;
		}

		if (!$.support.animation || !$.support.transition) {
			return;
		}

		this.core.speed(0);

		var left,
			clear = $.proxy(this.clear, this),
			previous = this.core.$stage.children().eq(this.previous),
			next = this.core.$stage.children().eq(this.next),
			incoming = this.core.settings.animateIn,
			outgoing = this.core.settings.animateOut;

		if (this.core.current() === this.previous) {
			return;
		}

		if (outgoing) {
			left = this.core.coordinates(this.previous) - this.core.coordinates(this.next);
			previous.one($.support.animation.end, clear)
				.css( { 'left': left + 'px' } )
				.addClass('animated owl-animated-out')
				.addClass(outgoing);
		}

		if (incoming) {
			next.one($.support.animation.end, clear)
				.addClass('animated owl-animated-in')
				.addClass(incoming);
		}
	};

	Animate.prototype.clear = function(e) {
		$(e.target).css( { 'left': '' } )
			.removeClass('animated owl-animated-out owl-animated-in')
			.removeClass(this.core.settings.animateIn)
			.removeClass(this.core.settings.animateOut);
		this.core.onTransitionEnd();
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Animate.prototype.destroy = function() {
		var handler, property;

		for (handler in this.handlers) {
			this.core.$element.off(handler, this.handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Animate = Animate;

})(window.Zepto || window.jQuery, window, document);

/**
 * Autoplay Plugin
 * @version 2.3.4
 * @author Bartosz Wojciechowski
 * @author Artus Kolanowski
 * @author David Deutsch
 * @author Tom De Caluwé
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the autoplay plugin.
	 * @class The Autoplay Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
	var Autoplay = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * The autoplay timeout id.
		 * @type {Number}
		 */
		this._call = null;

		/**
		 * Depending on the state of the plugin, this variable contains either
		 * the start time of the timer or the current timer value if it's
		 * paused. Since we start in a paused state we initialize the timer
		 * value.
		 * @type {Number}
		 */
		this._time = 0;

		/**
		 * Stores the timeout currently used.
		 * @type {Number}
		 */
		this._timeout = 0;

		/**
		 * Indicates whenever the autoplay is paused.
		 * @type {Boolean}
		 */
		this._paused = true;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'settings') {
					if (this._core.settings.autoplay) {
						this.play();
					} else {
						this.stop();
					}
				} else if (e.namespace && e.property.name === 'position' && this._paused) {
					// Reset the timer. This code is triggered when the position
					// of the carousel was changed through user interaction.
					this._time = 0;
				}
			}, this),
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoplay) {
					this.play();
				}
			}, this),
			'play.owl.autoplay': $.proxy(function(e, t, s) {
				if (e.namespace) {
					this.play(t, s);
				}
			}, this),
			'stop.owl.autoplay': $.proxy(function(e) {
				if (e.namespace) {
					this.stop();
				}
			}, this),
			'mouseover.owl.autoplay': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.pause();
				}
			}, this),
			'mouseleave.owl.autoplay': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.play();
				}
			}, this),
			'touchstart.owl.core': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.pause();
				}
			}, this),
			'touchend.owl.core': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause) {
					this.play();
				}
			}, this)
		};

		// register event handlers
		this._core.$element.on(this._handlers);

		// set default options
		this._core.options = $.extend({}, Autoplay.Defaults, this._core.options);
	};

	/**
	 * Default options.
	 * @public
	 */
	Autoplay.Defaults = {
		autoplay: false,
		autoplayTimeout: 5000,
		autoplayHoverPause: false,
		autoplaySpeed: false
	};

	/**
	 * Transition to the next slide and set a timeout for the next transition.
	 * @private
	 * @param {Number} [speed] - The animation speed for the animations.
	 */
	Autoplay.prototype._next = function(speed) {
		this._call = window.setTimeout(
			$.proxy(this._next, this, speed),
			this._timeout * (Math.round(this.read() / this._timeout) + 1) - this.read()
		);

		if (this._core.is('interacting') || document.hidden) {
			return;
		}
		this._core.next(speed || this._core.settings.autoplaySpeed);
	}

	/**
	 * Reads the current timer value when the timer is playing.
	 * @public
	 */
	Autoplay.prototype.read = function() {
		return new Date().getTime() - this._time;
	};

	/**
	 * Starts the autoplay.
	 * @public
	 * @param {Number} [timeout] - The interval before the next animation starts.
	 * @param {Number} [speed] - The animation speed for the animations.
	 */
	Autoplay.prototype.play = function(timeout, speed) {
		var elapsed;

		if (!this._core.is('rotating')) {
			this._core.enter('rotating');
		}

		timeout = timeout || this._core.settings.autoplayTimeout;

		// Calculate the elapsed time since the last transition. If the carousel
		// wasn't playing this calculation will yield zero.
		elapsed = Math.min(this._time % (this._timeout || timeout), timeout);

		if (this._paused) {
			// Start the clock.
			this._time = this.read();
			this._paused = false;
		} else {
			// Clear the active timeout to allow replacement.
			window.clearTimeout(this._call);
		}

		// Adjust the origin of the timer to match the new timeout value.
		this._time += this.read() % timeout - elapsed;

		this._timeout = timeout;
		this._call = window.setTimeout($.proxy(this._next, this, speed), timeout - elapsed);
	};

	/**
	 * Stops the autoplay.
	 * @public
	 */
	Autoplay.prototype.stop = function() {
		if (this._core.is('rotating')) {
			// Reset the clock.
			this._time = 0;
			this._paused = true;

			window.clearTimeout(this._call);
			this._core.leave('rotating');
		}
	};

	/**
	 * Pauses the autoplay.
	 * @public
	 */
	Autoplay.prototype.pause = function() {
		if (this._core.is('rotating') && !this._paused) {
			// Pause the clock.
			this._time = this.read();
			this._paused = true;

			window.clearTimeout(this._call);
		}
	};

	/**
	 * Destroys the plugin.
	 */
	Autoplay.prototype.destroy = function() {
		var handler, property;

		this.stop();

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;

})(window.Zepto || window.jQuery, window, document);

/**
 * Navigation Plugin
 * @version 2.3.4
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {
	'use strict';

	/**
	 * Creates the navigation plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} carousel - The Owl Carousel.
	 */
	var Navigation = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Indicates whether the plugin is initialized or not.
		 * @protected
		 * @type {Boolean}
		 */
		this._initialized = false;

		/**
		 * The current paging indexes.
		 * @protected
		 * @type {Array}
		 */
		this._pages = [];

		/**
		 * All DOM elements of the user interface.
		 * @protected
		 * @type {Object}
		 */
		this._controls = {};

		/**
		 * Markup for an indicator.
		 * @protected
		 * @type {Array.<String>}
		 */
		this._templates = [];

		/**
		 * The carousel element.
		 * @type {jQuery}
		 */
		this.$element = this._core.$element;

		/**
		 * Overridden methods of the carousel.
		 * @protected
		 * @type {Object}
		 */
		this._overrides = {
			next: this._core.next,
			prev: this._core.prev,
			to: this._core.to
		};

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'prepared.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.push('<div class="' + this._core.settings.dotClass + '">' +
						$(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot') + '</div>');
				}
			}, this),
			'added.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.splice(e.position, 0, this._templates.pop());
				}
			}, this),
			'remove.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.splice(e.position, 1);
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name == 'position') {
					this.draw();
				}
			}, this),
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && !this._initialized) {
					this._core.trigger('initialize', null, 'navigation');
					this.initialize();
					this.update();
					this.draw();
					this._initialized = true;
					this._core.trigger('initialized', null, 'navigation');
				}
			}, this),
			'refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._initialized) {
					this._core.trigger('refresh', null, 'navigation');
					this.update();
					this.draw();
					this._core.trigger('refreshed', null, 'navigation');
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Navigation.Defaults, this._core.options);

		// register event handlers
		this.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 * @todo Rename `slideBy` to `navBy`
	 */
	Navigation.Defaults = {
		nav: false,
		navText: [
			'<span aria-label="' + 'Previous' + '">&#x2039;</span>',
			'<span aria-label="' + 'Next' + '">&#x203a;</span>'
		],
		navSpeed: false,
		navElement: 'button type="button" role="presentation"',
		navContainer: false,
		navContainerClass: 'owl-nav',
		navClass: [
			'owl-prev',
			'owl-next'
		],
		slideBy: 1,
		dotClass: 'owl-dot',
		dotsClass: 'owl-dots',
		dots: true,
		dotsEach: false,
		dotsData: false,
		dotsSpeed: false,
		dotsContainer: false
	};

	/**
	 * Initializes the layout of the plugin and extends the carousel.
	 * @protected
	 */
	Navigation.prototype.initialize = function() {
		var override,
			settings = this._core.settings;

		// create DOM structure for relative navigation
		this._controls.$relative = (settings.navContainer ? $(settings.navContainer)
			: $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');

		this._controls.$previous = $('<' + settings.navElement + '>')
			.addClass(settings.navClass[0])
			.html(settings.navText[0])
			.prependTo(this._controls.$relative)
			.on('click', $.proxy(function(e) {
				this.prev(settings.navSpeed);
			}, this));
		this._controls.$next = $('<' + settings.navElement + '>')
			.addClass(settings.navClass[1])
			.html(settings.navText[1])
			.appendTo(this._controls.$relative)
			.on('click', $.proxy(function(e) {
				this.next(settings.navSpeed);
			}, this));

		// create DOM structure for absolute navigation
		if (!settings.dotsData) {
			this._templates = [ $('<button role="button">')
				.addClass(settings.dotClass)
				.append($('<span>'))
				.prop('outerHTML') ];
		}

		this._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer)
			: $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');

		this._controls.$absolute.on('click', 'button', $.proxy(function(e) {
			var index = $(e.target).parent().is(this._controls.$absolute)
				? $(e.target).index() : $(e.target).parent().index();

			e.preventDefault();

			this.to(index, settings.dotsSpeed);
		}, this));

		/*$el.on('focusin', function() {
			$(document).off(".carousel");

			$(document).on('keydown.carousel', function(e) {
				if(e.keyCode == 37) {
					$el.trigger('prev.owl')
				}
				if(e.keyCode == 39) {
					$el.trigger('next.owl')
				}
			});
		});*/

		// override public methods of the carousel
		for (override in this._overrides) {
			this._core[override] = $.proxy(this[override], this);
		}
	};

	/**
	 * Destroys the plugin.
	 * @protected
	 */
	Navigation.prototype.destroy = function() {
		var handler, control, property, override, settings;
		settings = this._core.settings;

		for (handler in this._handlers) {
			this.$element.off(handler, this._handlers[handler]);
		}
		for (control in this._controls) {
			if (control === '$relative' && settings.navContainer) {
				this._controls[control].html('');
			} else {
				this._controls[control].remove();
			}
		}
		for (override in this.overides) {
			this._core[override] = this._overrides[override];
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	/**
	 * Updates the internal state.
	 * @protected
	 */
	Navigation.prototype.update = function() {
		var i, j, k,
			lower = this._core.clones().length / 2,
			upper = lower + this._core.items().length,
			maximum = this._core.maximum(true),
			settings = this._core.settings,
			size = settings.center || settings.autoWidth || settings.dotsData
				? 1 : settings.dotsEach || settings.items;

		if (settings.slideBy !== 'page') {
			settings.slideBy = Math.min(settings.slideBy, settings.items);
		}

		if (settings.dots || settings.slideBy == 'page') {
			this._pages = [];

			for (i = lower, j = 0, k = 0; i < upper; i++) {
				if (j >= size || j === 0) {
					this._pages.push({
						start: Math.min(maximum, i - lower),
						end: i - lower + size - 1
					});
					if (Math.min(maximum, i - lower) === maximum) {
						break;
					}
					j = 0, ++k;
				}
				j += this._core.mergers(this._core.relative(i));
			}
		}
	};

	/**
	 * Draws the user interface.
	 * @todo The option `dotsData` wont work.
	 * @protected
	 */
	Navigation.prototype.draw = function() {
		var difference,
			settings = this._core.settings,
			disabled = this._core.items().length <= settings.items,
			index = this._core.relative(this._core.current()),
			loop = settings.loop || settings.rewind;

		this._controls.$relative.toggleClass('disabled', !settings.nav || disabled);

		if (settings.nav) {
			this._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));
			this._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));
		}

		this._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);

		if (settings.dots) {
			difference = this._pages.length - this._controls.$absolute.children().length;

			if (settings.dotsData && difference !== 0) {
				this._controls.$absolute.html(this._templates.join(''));
			} else if (difference > 0) {
				this._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));
			} else if (difference < 0) {
				this._controls.$absolute.children().slice(difference).remove();
			}

			this._controls.$absolute.find('.active').removeClass('active');
			this._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');
		}
	};

	/**
	 * Extends event data.
	 * @protected
	 * @param {Event} event - The event object which gets thrown.
	 */
	Navigation.prototype.onTrigger = function(event) {
		var settings = this._core.settings;

		event.page = {
			index: $.inArray(this.current(), this._pages),
			count: this._pages.length,
			size: settings && (settings.center || settings.autoWidth || settings.dotsData
				? 1 : settings.dotsEach || settings.items)
		};
	};

	/**
	 * Gets the current page position of the carousel.
	 * @protected
	 * @returns {Number}
	 */
	Navigation.prototype.current = function() {
		var current = this._core.relative(this._core.current());
		return $.grep(this._pages, $.proxy(function(page, index) {
			return page.start <= current && page.end >= current;
		}, this)).pop();
	};

	/**
	 * Gets the current succesor/predecessor position.
	 * @protected
	 * @returns {Number}
	 */
	Navigation.prototype.getPosition = function(successor) {
		var position, length,
			settings = this._core.settings;

		if (settings.slideBy == 'page') {
			position = $.inArray(this.current(), this._pages);
			length = this._pages.length;
			successor ? ++position : --position;
			position = this._pages[((position % length) + length) % length].start;
		} else {
			position = this._core.relative(this._core.current());
			length = this._core.items().length;
			successor ? position += settings.slideBy : position -= settings.slideBy;
		}

		return position;
	};

	/**
	 * Slides to the next item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
	Navigation.prototype.next = function(speed) {
		$.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);
	};

	/**
	 * Slides to the previous item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
	Navigation.prototype.prev = function(speed) {
		$.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);
	};

	/**
	 * Slides to the specified item or page.
	 * @public
	 * @param {Number} position - The position of the item or page.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.
	 */
	Navigation.prototype.to = function(position, speed, standard) {
		var length;

		if (!standard && this._pages.length) {
			length = this._pages.length;
			$.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);
		} else {
			$.proxy(this._overrides.to, this._core)(position, speed);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;

})(window.Zepto || window.jQuery, window, document);

/**
 * Hash Plugin
 * @version 2.3.4
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {
	'use strict';

	/**
	 * Creates the hash plugin.
	 * @class The Hash Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Hash = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Hash index for the items.
		 * @protected
		 * @type {Object}
		 */
		this._hashes = {};

		/**
		 * The carousel element.
		 * @type {jQuery}
		 */
		this.$element = this._core.$element;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.startPosition === 'URLHash') {
					$(window).trigger('hashchange.owl.navigation');
				}
			}, this),
			'prepared.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					var hash = $(e.content).find('[data-hash]').addBack('[data-hash]').attr('data-hash');

					if (!hash) {
						return;
					}

					this._hashes[hash] = e.content;
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'position') {
					var current = this._core.items(this._core.relative(this._core.current())),
						hash = $.map(this._hashes, function(item, hash) {
							return item === current ? hash : null;
						}).join();

					if (!hash || window.location.hash.slice(1) === hash) {
						return;
					}

					window.location.hash = hash;
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Hash.Defaults, this._core.options);

		// register the event handlers
		this.$element.on(this._handlers);

		// register event listener for hash navigation
		$(window).on('hashchange.owl.navigation', $.proxy(function(e) {
			var hash = window.location.hash.substring(1),
				items = this._core.$stage.children(),
				position = this._hashes[hash] && items.index(this._hashes[hash]);

			if (position === undefined || position === this._core.current()) {
				return;
			}

			this._core.to(this._core.relative(position), false, true);
		}, this));
	};

	/**
	 * Default options.
	 * @public
	 */
	Hash.Defaults = {
		URLhashListener: false
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Hash.prototype.destroy = function() {
		var handler, property;

		$(window).off('hashchange.owl.navigation');

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Hash = Hash;

})(window.Zepto || window.jQuery, window, document);

/**
 * Support Plugin
 *
 * @version 2.3.4
 * @author Vivid Planet Software GmbH
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	var style = $('<support>').get(0).style,
		prefixes = 'Webkit Moz O ms'.split(' '),
		events = {
			transition: {
				end: {
					WebkitTransition: 'webkitTransitionEnd',
					MozTransition: 'transitionend',
					OTransition: 'oTransitionEnd',
					transition: 'transitionend'
				}
			},
			animation: {
				end: {
					WebkitAnimation: 'webkitAnimationEnd',
					MozAnimation: 'animationend',
					OAnimation: 'oAnimationEnd',
					animation: 'animationend'
				}
			}
		},
		tests = {
			csstransforms: function() {
				return !!test('transform');
			},
			csstransforms3d: function() {
				return !!test('perspective');
			},
			csstransitions: function() {
				return !!test('transition');
			},
			cssanimations: function() {
				return !!test('animation');
			}
		};

	function test(property, prefixed) {
		var result = false,
			upper = property.charAt(0).toUpperCase() + property.slice(1);

		$.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function(i, property) {
			if (style[property] !== undefined) {
				result = prefixed ? property : true;
				return false;
			}
		});

		return result;
	}

	function prefixed(property) {
		return test(property, true);
	}

	if (tests.csstransitions()) {
		/* jshint -W053 */
		$.support.transition = new String(prefixed('transition'))
		$.support.transition.end = events.transition.end[ $.support.transition ];
	}

	if (tests.cssanimations()) {
		/* jshint -W053 */
		$.support.animation = new String(prefixed('animation'))
		$.support.animation.end = events.animation.end[ $.support.animation ];
	}

	if (tests.csstransforms()) {
		/* jshint -W053 */
		$.support.transform = new String(prefixed('transform'));
		$.support.transform3d = tests.csstransforms3d();
	}

})(window.Zepto || window.jQuery, window, document);

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.window = global.window || {}));
}(this, (function (exports) { 'use strict';

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  /*!
   * Observer 3.11.3
   * https://greensock.com
   *
   * @license Copyright 2008-2022, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */
  var gsap,
      _coreInitted,
      _clamp,
      _win,
      _doc,
      _docEl,
      _body,
      _isTouch,
      _pointerType,
      ScrollTrigger,
      _root,
      _normalizer,
      _eventTypes,
      _getGSAP = function _getGSAP() {
    return gsap || typeof window !== "undefined" && (gsap = window.gsap) && gsap.registerPlugin && gsap;
  },
      _startup = 1,
      _observers = [],
      _scrollers = [],
      _proxies = [],
      _getTime = Date.now,
      _bridge = function _bridge(name, value) {
    return value;
  },
      _integrate = function _integrate() {
    var core = ScrollTrigger.core,
        data = core.bridge || {},
        scrollers = core._scrollers,
        proxies = core._proxies;
    scrollers.push.apply(scrollers, _scrollers);
    proxies.push.apply(proxies, _proxies);
    _scrollers = scrollers;
    _proxies = proxies;

    _bridge = function _bridge(name, value) {
      return data[name](value);
    };
  },
      _getProxyProp = function _getProxyProp(element, property) {
    return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];
  },
      _isViewport = function _isViewport(el) {
    return !!~_root.indexOf(el);
  },
      _addListener = function _addListener(element, type, func, nonPassive, capture) {
    return element.addEventListener(type, func, {
      passive: !nonPassive,
      capture: !!capture
    });
  },
      _removeListener = function _removeListener(element, type, func, capture) {
    return element.removeEventListener(type, func, !!capture);
  },
      _scrollLeft = "scrollLeft",
      _scrollTop = "scrollTop",
      _onScroll = function _onScroll() {
    return _normalizer && _normalizer.isPressed || _scrollers.cache++;
  },
      _scrollCacheFunc = function _scrollCacheFunc(f, doNotCache) {
    var cachingFunc = function cachingFunc(value) {
      if (value || value === 0) {
        _startup && (_win.history.scrollRestoration = "manual");
        var isNormalizing = _normalizer && _normalizer.isPressed;
        value = cachingFunc.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0);
        f(value);
        cachingFunc.cacheID = _scrollers.cache;
        isNormalizing && _bridge("ss", value);
      } else if (doNotCache || _scrollers.cache !== cachingFunc.cacheID || _bridge("ref")) {
        cachingFunc.cacheID = _scrollers.cache;
        cachingFunc.v = f();
      }

      return cachingFunc.v + cachingFunc.offset;
    };

    cachingFunc.offset = 0;
    return f && cachingFunc;
  },
      _horizontal = {
    s: _scrollLeft,
    p: "left",
    p2: "Left",
    os: "right",
    os2: "Right",
    d: "width",
    d2: "Width",
    a: "x",
    sc: _scrollCacheFunc(function (value) {
      return arguments.length ? _win.scrollTo(value, _vertical.sc()) : _win.pageXOffset || _doc[_scrollLeft] || _docEl[_scrollLeft] || _body[_scrollLeft] || 0;
    })
  },
      _vertical = {
    s: _scrollTop,
    p: "top",
    p2: "Top",
    os: "bottom",
    os2: "Bottom",
    d: "height",
    d2: "Height",
    a: "y",
    op: _horizontal,
    sc: _scrollCacheFunc(function (value) {
      return arguments.length ? _win.scrollTo(_horizontal.sc(), value) : _win.pageYOffset || _doc[_scrollTop] || _docEl[_scrollTop] || _body[_scrollTop] || 0;
    })
  },
      _getTarget = function _getTarget(t) {
    return gsap.utils.toArray(t)[0] || (typeof t === "string" && gsap.config().nullTargetWarn !== false ? console.warn("Element not found:", t) : null);
  },
      _getScrollFunc = function _getScrollFunc(element, _ref) {
    var s = _ref.s,
        sc = _ref.sc;
    _isViewport(element) && (element = _doc.scrollingElement || _docEl);

    var i = _scrollers.indexOf(element),
        offset = sc === _vertical.sc ? 1 : 2;

    !~i && (i = _scrollers.push(element) - 1);
    _scrollers[i + offset] || element.addEventListener("scroll", _onScroll);
    var prev = _scrollers[i + offset],
        func = prev || (_scrollers[i + offset] = _scrollCacheFunc(_getProxyProp(element, s), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function (value) {
      return arguments.length ? element[s] = value : element[s];
    })));
    func.target = element;
    prev || (func.smooth = gsap.getProperty(element, "scrollBehavior") === "smooth");
    return func;
  },
      _getVelocityProp = function _getVelocityProp(value, minTimeRefresh, useDelta) {
    var v1 = value,
        v2 = value,
        t1 = _getTime(),
        t2 = t1,
        min = minTimeRefresh || 50,
        dropToZeroTime = Math.max(500, min * 3),
        update = function update(value, force) {
      var t = _getTime();

      if (force || t - t1 > min) {
        v2 = v1;
        v1 = value;
        t2 = t1;
        t1 = t;
      } else if (useDelta) {
        v1 += value;
      } else {
        v1 = v2 + (value - v2) / (t - t2) * (t1 - t2);
      }
    },
        reset = function reset() {
      v2 = v1 = useDelta ? 0 : v1;
      t2 = t1 = 0;
    },
        getVelocity = function getVelocity(latestValue) {
      var tOld = t2,
          vOld = v2,
          t = _getTime();

      (latestValue || latestValue === 0) && latestValue !== v1 && update(latestValue);
      return t1 === t2 || t - t2 > dropToZeroTime ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t : t1) - tOld) * 1000;
    };

    return {
      update: update,
      reset: reset,
      getVelocity: getVelocity
    };
  },
      _getEvent = function _getEvent(e, preventDefault) {
    preventDefault && !e._gsapAllow && e.preventDefault();
    return e.changedTouches ? e.changedTouches[0] : e;
  },
      _getAbsoluteMax = function _getAbsoluteMax(a) {
    var max = Math.max.apply(Math, a),
        min = Math.min.apply(Math, a);
    return Math.abs(max) >= Math.abs(min) ? max : min;
  },
      _setScrollTrigger = function _setScrollTrigger() {
    ScrollTrigger = gsap.core.globals().ScrollTrigger;
    ScrollTrigger && ScrollTrigger.core && _integrate();
  },
      _initCore = function _initCore(core) {
    gsap = core || _getGSAP();

    if (gsap && typeof document !== "undefined" && document.body) {
      _win = window;
      _doc = document;
      _docEl = _doc.documentElement;
      _body = _doc.body;
      _root = [_win, _doc, _docEl, _body];
      _clamp = gsap.utils.clamp;
      _pointerType = "onpointerenter" in _body ? "pointer" : "mouse";
      _isTouch = Observer.isTouch = _win.matchMedia && _win.matchMedia("(hover: none), (pointer: coarse)").matches ? 1 : "ontouchstart" in _win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0;
      _eventTypes = Observer.eventTypes = ("ontouchstart" in _docEl ? "touchstart,touchmove,touchcancel,touchend" : !("onpointerdown" in _docEl) ? "mousedown,mousemove,mouseup,mouseup" : "pointerdown,pointermove,pointercancel,pointerup").split(",");
      setTimeout(function () {
        return _startup = 0;
      }, 500);

      _setScrollTrigger();

      _coreInitted = 1;
    }

    return _coreInitted;
  };

  _horizontal.op = _vertical;
  _scrollers.cache = 0;
  var Observer = function () {
    function Observer(vars) {
      this.init(vars);
    }

    var _proto = Observer.prototype;

    _proto.init = function init(vars) {
      _coreInitted || _initCore(gsap) || console.warn("Please gsap.registerPlugin(Observer)");
      ScrollTrigger || _setScrollTrigger();
      var tolerance = vars.tolerance,
          dragMinimum = vars.dragMinimum,
          type = vars.type,
          target = vars.target,
          lineHeight = vars.lineHeight,
          debounce = vars.debounce,
          preventDefault = vars.preventDefault,
          onStop = vars.onStop,
          onStopDelay = vars.onStopDelay,
          ignore = vars.ignore,
          wheelSpeed = vars.wheelSpeed,
          event = vars.event,
          onDragStart = vars.onDragStart,
          onDragEnd = vars.onDragEnd,
          onDrag = vars.onDrag,
          onPress = vars.onPress,
          onRelease = vars.onRelease,
          onRight = vars.onRight,
          onLeft = vars.onLeft,
          onUp = vars.onUp,
          onDown = vars.onDown,
          onChangeX = vars.onChangeX,
          onChangeY = vars.onChangeY,
          onChange = vars.onChange,
          onToggleX = vars.onToggleX,
          onToggleY = vars.onToggleY,
          onHover = vars.onHover,
          onHoverEnd = vars.onHoverEnd,
          onMove = vars.onMove,
          ignoreCheck = vars.ignoreCheck,
          isNormalizer = vars.isNormalizer,
          onGestureStart = vars.onGestureStart,
          onGestureEnd = vars.onGestureEnd,
          onWheel = vars.onWheel,
          onEnable = vars.onEnable,
          onDisable = vars.onDisable,
          onClick = vars.onClick,
          scrollSpeed = vars.scrollSpeed,
          capture = vars.capture,
          allowClicks = vars.allowClicks,
          lockAxis = vars.lockAxis,
          onLockAxis = vars.onLockAxis;
      this.target = target = _getTarget(target) || _docEl;
      this.vars = vars;
      ignore && (ignore = gsap.utils.toArray(ignore));
      tolerance = tolerance || 1e-9;
      dragMinimum = dragMinimum || 0;
      wheelSpeed = wheelSpeed || 1;
      scrollSpeed = scrollSpeed || 1;
      type = type || "wheel,touch,pointer";
      debounce = debounce !== false;
      lineHeight || (lineHeight = parseFloat(_win.getComputedStyle(_body).lineHeight) || 22);

      var id,
          onStopDelayedCall,
          dragged,
          moved,
          wheeled,
          locked,
          axis,
          self = this,
          prevDeltaX = 0,
          prevDeltaY = 0,
          scrollFuncX = _getScrollFunc(target, _horizontal),
          scrollFuncY = _getScrollFunc(target, _vertical),
          scrollX = scrollFuncX(),
          scrollY = scrollFuncY(),
          limitToTouch = ~type.indexOf("touch") && !~type.indexOf("pointer") && _eventTypes[0] === "pointerdown",
          isViewport = _isViewport(target),
          ownerDoc = target.ownerDocument || _doc,
          deltaX = [0, 0, 0],
          deltaY = [0, 0, 0],
          onClickTime = 0,
          clickCapture = function clickCapture() {
        return onClickTime = _getTime();
      },
          _ignoreCheck = function _ignoreCheck(e, isPointerOrTouch) {
        return (self.event = e) && ignore && ~ignore.indexOf(e.target) || isPointerOrTouch && limitToTouch && e.pointerType !== "touch" || ignoreCheck && ignoreCheck(e, isPointerOrTouch);
      },
          onStopFunc = function onStopFunc() {
        self._vx.reset();

        self._vy.reset();

        onStopDelayedCall.pause();
        onStop && onStop(self);
      },
          update = function update() {
        var dx = self.deltaX = _getAbsoluteMax(deltaX),
            dy = self.deltaY = _getAbsoluteMax(deltaY),
            changedX = Math.abs(dx) >= tolerance,
            changedY = Math.abs(dy) >= tolerance;

        onChange && (changedX || changedY) && onChange(self, dx, dy, deltaX, deltaY);

        if (changedX) {
          onRight && self.deltaX > 0 && onRight(self);
          onLeft && self.deltaX < 0 && onLeft(self);
          onChangeX && onChangeX(self);
          onToggleX && self.deltaX < 0 !== prevDeltaX < 0 && onToggleX(self);
          prevDeltaX = self.deltaX;
          deltaX[0] = deltaX[1] = deltaX[2] = 0;
        }

        if (changedY) {
          onDown && self.deltaY > 0 && onDown(self);
          onUp && self.deltaY < 0 && onUp(self);
          onChangeY && onChangeY(self);
          onToggleY && self.deltaY < 0 !== prevDeltaY < 0 && onToggleY(self);
          prevDeltaY = self.deltaY;
          deltaY[0] = deltaY[1] = deltaY[2] = 0;
        }

        if (moved || dragged) {
          onMove && onMove(self);

          if (dragged) {
            onDrag(self);
            dragged = false;
          }

          moved = false;
        }

        locked && !(locked = false) && onLockAxis && onLockAxis(self);

        if (wheeled) {
          onWheel(self);
          wheeled = false;
        }

        id = 0;
      },
          onDelta = function onDelta(x, y, index) {
        deltaX[index] += x;
        deltaY[index] += y;

        self._vx.update(x);

        self._vy.update(y);

        debounce ? id || (id = requestAnimationFrame(update)) : update();
      },
          onTouchOrPointerDelta = function onTouchOrPointerDelta(x, y) {
        if (lockAxis && !axis) {
          self.axis = axis = Math.abs(x) > Math.abs(y) ? "x" : "y";
          locked = true;
        }

        if (axis !== "y") {
          deltaX[2] += x;

          self._vx.update(x, true);
        }

        if (axis !== "x") {
          deltaY[2] += y;

          self._vy.update(y, true);
        }

        debounce ? id || (id = requestAnimationFrame(update)) : update();
      },
          _onDrag = function _onDrag(e) {
        if (_ignoreCheck(e, 1)) {
          return;
        }

        e = _getEvent(e, preventDefault);
        var x = e.clientX,
            y = e.clientY,
            dx = x - self.x,
            dy = y - self.y,
            isDragging = self.isDragging;
        self.x = x;
        self.y = y;

        if (isDragging || Math.abs(self.startX - x) >= dragMinimum || Math.abs(self.startY - y) >= dragMinimum) {
          onDrag && (dragged = true);
          isDragging || (self.isDragging = true);
          onTouchOrPointerDelta(dx, dy);
          isDragging || onDragStart && onDragStart(self);
        }
      },
          _onPress = self.onPress = function (e) {
        if (_ignoreCheck(e, 1)) {
          return;
        }

        self.axis = axis = null;
        onStopDelayedCall.pause();
        self.isPressed = true;
        e = _getEvent(e);
        prevDeltaX = prevDeltaY = 0;
        self.startX = self.x = e.clientX;
        self.startY = self.y = e.clientY;

        self._vx.reset();

        self._vy.reset();

        _addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, true);

        self.deltaX = self.deltaY = 0;
        onPress && onPress(self);
      },
          _onRelease = function _onRelease(e) {
        if (_ignoreCheck(e, 1)) {
          return;
        }

        _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);

        var wasDragging = self.isDragging && (Math.abs(self.x - self.startX) > 3 || Math.abs(self.y - self.startY) > 3),
            eventData = _getEvent(e);

        if (!wasDragging) {
          self._vx.reset();

          self._vy.reset();

          if (preventDefault && allowClicks) {
            gsap.delayedCall(0.08, function () {
              if (_getTime() - onClickTime > 300 && !e.defaultPrevented) {
                if (e.target.click) {
                  e.target.click();
                } else if (ownerDoc.createEvent) {
                  var syntheticEvent = ownerDoc.createEvent("MouseEvents");
                  syntheticEvent.initMouseEvent("click", true, true, _win, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);
                  e.target.dispatchEvent(syntheticEvent);
                }
              }
            });
          }
        }

        self.isDragging = self.isGesturing = self.isPressed = false;
        onStop && !isNormalizer && onStopDelayedCall.restart(true);
        onDragEnd && wasDragging && onDragEnd(self);
        onRelease && onRelease(self, wasDragging);
      },
          _onGestureStart = function _onGestureStart(e) {
        return e.touches && e.touches.length > 1 && (self.isGesturing = true) && onGestureStart(e, self.isDragging);
      },
          _onGestureEnd = function _onGestureEnd() {
        return (self.isGesturing = false) || onGestureEnd(self);
      },
          onScroll = function onScroll(e) {
        if (_ignoreCheck(e)) {
          return;
        }

        var x = scrollFuncX(),
            y = scrollFuncY();
        onDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);
        scrollX = x;
        scrollY = y;
        onStop && onStopDelayedCall.restart(true);
      },
          _onWheel = function _onWheel(e) {
        if (_ignoreCheck(e)) {
          return;
        }

        e = _getEvent(e, preventDefault);
        onWheel && (wheeled = true);
        var multiplier = (e.deltaMode === 1 ? lineHeight : e.deltaMode === 2 ? _win.innerHeight : 1) * wheelSpeed;
        onDelta(e.deltaX * multiplier, e.deltaY * multiplier, 0);
        onStop && !isNormalizer && onStopDelayedCall.restart(true);
      },
          _onMove = function _onMove(e) {
        if (_ignoreCheck(e)) {
          return;
        }

        var x = e.clientX,
            y = e.clientY,
            dx = x - self.x,
            dy = y - self.y;
        self.x = x;
        self.y = y;
        moved = true;
        (dx || dy) && onTouchOrPointerDelta(dx, dy);
      },
          _onHover = function _onHover(e) {
        self.event = e;
        onHover(self);
      },
          _onHoverEnd = function _onHoverEnd(e) {
        self.event = e;
        onHoverEnd(self);
      },
          _onClick = function _onClick(e) {
        return _ignoreCheck(e) || _getEvent(e, preventDefault) && onClick(self);
      };

      onStopDelayedCall = self._dc = gsap.delayedCall(onStopDelay || 0.25, onStopFunc).pause();
      self.deltaX = self.deltaY = 0;
      self._vx = _getVelocityProp(0, 50, true);
      self._vy = _getVelocityProp(0, 50, true);
      self.scrollX = scrollFuncX;
      self.scrollY = scrollFuncY;
      self.isDragging = self.isGesturing = self.isPressed = false;

      self.enable = function (e) {
        if (!self.isEnabled) {
          _addListener(isViewport ? ownerDoc : target, "scroll", _onScroll);

          type.indexOf("scroll") >= 0 && _addListener(isViewport ? ownerDoc : target, "scroll", onScroll, preventDefault, capture);
          type.indexOf("wheel") >= 0 && _addListener(target, "wheel", _onWheel, preventDefault, capture);

          if (type.indexOf("touch") >= 0 && _isTouch || type.indexOf("pointer") >= 0) {
            _addListener(target, _eventTypes[0], _onPress, preventDefault, capture);

            _addListener(ownerDoc, _eventTypes[2], _onRelease);

            _addListener(ownerDoc, _eventTypes[3], _onRelease);

            allowClicks && _addListener(target, "click", clickCapture, false, true);
            onClick && _addListener(target, "click", _onClick);
            onGestureStart && _addListener(ownerDoc, "gesturestart", _onGestureStart);
            onGestureEnd && _addListener(ownerDoc, "gestureend", _onGestureEnd);
            onHover && _addListener(target, _pointerType + "enter", _onHover);
            onHoverEnd && _addListener(target, _pointerType + "leave", _onHoverEnd);
            onMove && _addListener(target, _pointerType + "move", _onMove);
          }

          self.isEnabled = true;
          e && e.type && _onPress(e);
          onEnable && onEnable(self);
        }

        return self;
      };

      self.disable = function () {
        if (self.isEnabled) {
          _observers.filter(function (o) {
            return o !== self && _isViewport(o.target);
          }).length || _removeListener(isViewport ? ownerDoc : target, "scroll", _onScroll);

          if (self.isPressed) {
            self._vx.reset();

            self._vy.reset();

            _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);
          }

          _removeListener(isViewport ? ownerDoc : target, "scroll", onScroll, capture);

          _removeListener(target, "wheel", _onWheel, capture);

          _removeListener(target, _eventTypes[0], _onPress, capture);

          _removeListener(ownerDoc, _eventTypes[2], _onRelease);

          _removeListener(ownerDoc, _eventTypes[3], _onRelease);

          _removeListener(target, "click", clickCapture, true);

          _removeListener(target, "click", _onClick);

          _removeListener(ownerDoc, "gesturestart", _onGestureStart);

          _removeListener(ownerDoc, "gestureend", _onGestureEnd);

          _removeListener(target, _pointerType + "enter", _onHover);

          _removeListener(target, _pointerType + "leave", _onHoverEnd);

          _removeListener(target, _pointerType + "move", _onMove);

          self.isEnabled = self.isPressed = self.isDragging = false;
          onDisable && onDisable(self);
        }
      };

      self.kill = function () {
        self.disable();

        var i = _observers.indexOf(self);

        i >= 0 && _observers.splice(i, 1);
        _normalizer === self && (_normalizer = 0);
      };

      _observers.push(self);

      isNormalizer && _isViewport(target) && (_normalizer = self);
      self.enable(event);
    };

    _createClass(Observer, [{
      key: "velocityX",
      get: function get() {
        return this._vx.getVelocity();
      }
    }, {
      key: "velocityY",
      get: function get() {
        return this._vy.getVelocity();
      }
    }]);

    return Observer;
  }();
  Observer.version = "3.11.3";

  Observer.create = function (vars) {
    return new Observer(vars);
  };

  Observer.register = _initCore;

  Observer.getAll = function () {
    return _observers.slice();
  };

  Observer.getById = function (id) {
    return _observers.filter(function (o) {
      return o.vars.id === id;
    })[0];
  };

  _getGSAP() && gsap.registerPlugin(Observer);

  /*!
   * ScrollTrigger 3.11.3
   * https://greensock.com
   *
   * @license Copyright 2008-2022, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */

  var gsap$1,
      _coreInitted$1,
      _win$1,
      _doc$1,
      _docEl$1,
      _body$1,
      _root$1,
      _resizeDelay,
      _toArray,
      _clamp$1,
      _time2,
      _syncInterval,
      _refreshing,
      _pointerIsDown,
      _transformProp,
      _i,
      _prevWidth,
      _prevHeight,
      _autoRefresh,
      _sort,
      _suppressOverwrites,
      _ignoreResize,
      _normalizer$1,
      _ignoreMobileResize,
      _baseScreenHeight,
      _baseScreenWidth,
      _fixIOSBug,
      _context,
      _scrollRestoration,
      _limitCallbacks,
      _startup$1 = 1,
      _getTime$1 = Date.now,
      _time1 = _getTime$1(),
      _lastScrollTime = 0,
      _enabled = 0,
      _pointerDownHandler = function _pointerDownHandler() {
    return _pointerIsDown = 1;
  },
      _pointerUpHandler = function _pointerUpHandler() {
    return _pointerIsDown = 0;
  },
      _passThrough = function _passThrough(v) {
    return v;
  },
      _round = function _round(value) {
    return Math.round(value * 100000) / 100000 || 0;
  },
      _windowExists = function _windowExists() {
    return typeof window !== "undefined";
  },
      _getGSAP$1 = function _getGSAP() {
    return gsap$1 || _windowExists() && (gsap$1 = window.gsap) && gsap$1.registerPlugin && gsap$1;
  },
      _isViewport$1 = function _isViewport(e) {
    return !!~_root$1.indexOf(e);
  },
      _getBoundsFunc = function _getBoundsFunc(element) {
    return _getProxyProp(element, "getBoundingClientRect") || (_isViewport$1(element) ? function () {
      _winOffsets.width = _win$1.innerWidth;
      _winOffsets.height = _win$1.innerHeight;
      return _winOffsets;
    } : function () {
      return _getBounds(element);
    });
  },
      _getSizeFunc = function _getSizeFunc(scroller, isViewport, _ref) {
    var d = _ref.d,
        d2 = _ref.d2,
        a = _ref.a;
    return (a = _getProxyProp(scroller, "getBoundingClientRect")) ? function () {
      return a()[d];
    } : function () {
      return (isViewport ? _win$1["inner" + d2] : scroller["client" + d2]) || 0;
    };
  },
      _getOffsetsFunc = function _getOffsetsFunc(element, isViewport) {
    return !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : function () {
      return _winOffsets;
    };
  },
      _maxScroll = function _maxScroll(element, _ref2) {
    var s = _ref2.s,
        d2 = _ref2.d2,
        d = _ref2.d,
        a = _ref2.a;
    return (s = "scroll" + d2) && (a = _getProxyProp(element, s)) ? a() - _getBoundsFunc(element)()[d] : _isViewport$1(element) ? (_docEl$1[s] || _body$1[s]) - (_win$1["inner" + d2] || _docEl$1["client" + d2] || _body$1["client" + d2]) : element[s] - element["offset" + d2];
  },
      _iterateAutoRefresh = function _iterateAutoRefresh(func, events) {
    for (var i = 0; i < _autoRefresh.length; i += 3) {
      (!events || ~events.indexOf(_autoRefresh[i + 1])) && func(_autoRefresh[i], _autoRefresh[i + 1], _autoRefresh[i + 2]);
    }
  },
      _isString = function _isString(value) {
    return typeof value === "string";
  },
      _isFunction = function _isFunction(value) {
    return typeof value === "function";
  },
      _isNumber = function _isNumber(value) {
    return typeof value === "number";
  },
      _isObject = function _isObject(value) {
    return typeof value === "object";
  },
      _endAnimation = function _endAnimation(animation, reversed, pause) {
    return animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause();
  },
      _callback = function _callback(self, func) {
    if (self.enabled) {
      var result = func(self);
      result && result.totalTime && (self.callbackAnimation = result);
    }
  },
      _abs = Math.abs,
      _left = "left",
      _top = "top",
      _right = "right",
      _bottom = "bottom",
      _width = "width",
      _height = "height",
      _Right = "Right",
      _Left = "Left",
      _Top = "Top",
      _Bottom = "Bottom",
      _padding = "padding",
      _margin = "margin",
      _Width = "Width",
      _Height = "Height",
      _px = "px",
      _getComputedStyle = function _getComputedStyle(element) {
    return _win$1.getComputedStyle(element);
  },
      _makePositionable = function _makePositionable(element) {
    var position = _getComputedStyle(element).position;

    element.style.position = position === "absolute" || position === "fixed" ? position : "relative";
  },
      _setDefaults = function _setDefaults(obj, defaults) {
    for (var p in defaults) {
      p in obj || (obj[p] = defaults[p]);
    }

    return obj;
  },
      _getBounds = function _getBounds(element, withoutTransforms) {
    var tween = withoutTransforms && _getComputedStyle(element)[_transformProp] !== "matrix(1, 0, 0, 1, 0, 0)" && gsap$1.to(element, {
      x: 0,
      y: 0,
      xPercent: 0,
      yPercent: 0,
      rotation: 0,
      rotationX: 0,
      rotationY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0
    }).progress(1),
        bounds = element.getBoundingClientRect();
    tween && tween.progress(0).kill();
    return bounds;
  },
      _getSize = function _getSize(element, _ref3) {
    var d2 = _ref3.d2;
    return element["offset" + d2] || element["client" + d2] || 0;
  },
      _getLabelRatioArray = function _getLabelRatioArray(timeline) {
    var a = [],
        labels = timeline.labels,
        duration = timeline.duration(),
        p;

    for (p in labels) {
      a.push(labels[p] / duration);
    }

    return a;
  },
      _getClosestLabel = function _getClosestLabel(animation) {
    return function (value) {
      return gsap$1.utils.snap(_getLabelRatioArray(animation), value);
    };
  },
      _snapDirectional = function _snapDirectional(snapIncrementOrArray) {
    var snap = gsap$1.utils.snap(snapIncrementOrArray),
        a = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort(function (a, b) {
      return a - b;
    });
    return a ? function (value, direction, threshold) {
      if (threshold === void 0) {
        threshold = 1e-3;
      }

      var i;

      if (!direction) {
        return snap(value);
      }

      if (direction > 0) {
        value -= threshold;

        for (i = 0; i < a.length; i++) {
          if (a[i] >= value) {
            return a[i];
          }
        }

        return a[i - 1];
      } else {
        i = a.length;
        value += threshold;

        while (i--) {
          if (a[i] <= value) {
            return a[i];
          }
        }
      }

      return a[0];
    } : function (value, direction, threshold) {
      if (threshold === void 0) {
        threshold = 1e-3;
      }

      var snapped = snap(value);
      return !direction || Math.abs(snapped - value) < threshold || snapped - value < 0 === direction < 0 ? snapped : snap(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);
    };
  },
      _getLabelAtDirection = function _getLabelAtDirection(timeline) {
    return function (value, st) {
      return _snapDirectional(_getLabelRatioArray(timeline))(value, st.direction);
    };
  },
      _multiListener = function _multiListener(func, element, types, callback) {
    return types.split(",").forEach(function (type) {
      return func(element, type, callback);
    });
  },
      _addListener$1 = function _addListener(element, type, func, nonPassive, capture) {
    return element.addEventListener(type, func, {
      passive: !nonPassive,
      capture: !!capture
    });
  },
      _removeListener$1 = function _removeListener(element, type, func, capture) {
    return element.removeEventListener(type, func, !!capture);
  },
      _wheelListener = function _wheelListener(func, el, scrollFunc) {
    return scrollFunc && scrollFunc.wheelHandler && func(el, "wheel", scrollFunc);
  },
      _markerDefaults = {
    startColor: "green",
    endColor: "red",
    indent: 0,
    fontSize: "16px",
    fontWeight: "normal"
  },
      _defaults = {
    toggleActions: "play",
    anticipatePin: 0
  },
      _keywords = {
    top: 0,
    left: 0,
    center: 0.5,
    bottom: 1,
    right: 1
  },
      _offsetToPx = function _offsetToPx(value, size) {
    if (_isString(value)) {
      var eqIndex = value.indexOf("="),
          relative = ~eqIndex ? +(value.charAt(eqIndex - 1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;

      if (~eqIndex) {
        value.indexOf("%") > eqIndex && (relative *= size / 100);
        value = value.substr(0, eqIndex - 1);
      }

      value = relative + (value in _keywords ? _keywords[value] * size : ~value.indexOf("%") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);
    }

    return value;
  },
      _createMarker = function _createMarker(type, name, container, direction, _ref4, offset, matchWidthEl, containerAnimation) {
    var startColor = _ref4.startColor,
        endColor = _ref4.endColor,
        fontSize = _ref4.fontSize,
        indent = _ref4.indent,
        fontWeight = _ref4.fontWeight;

    var e = _doc$1.createElement("div"),
        useFixedPosition = _isViewport$1(container) || _getProxyProp(container, "pinType") === "fixed",
        isScroller = type.indexOf("scroller") !== -1,
        parent = useFixedPosition ? _body$1 : container,
        isStart = type.indexOf("start") !== -1,
        color = isStart ? startColor : endColor,
        css = "border-color:" + color + ";font-size:" + fontSize + ";color:" + color + ";font-weight:" + fontWeight + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";

    css += "position:" + ((isScroller || containerAnimation) && useFixedPosition ? "fixed;" : "absolute;");
    (isScroller || containerAnimation || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + ":" + (offset + parseFloat(indent)) + "px;");
    matchWidthEl && (css += "box-sizing:border-box;text-align:left;width:" + matchWidthEl.offsetWidth + "px;");
    e._isStart = isStart;
    e.setAttribute("class", "gsap-marker-" + type + (name ? " marker-" + name : ""));
    e.style.cssText = css;
    e.innerText = name || name === 0 ? type + "-" + name : type;
    parent.children[0] ? parent.insertBefore(e, parent.children[0]) : parent.appendChild(e);
    e._offset = e["offset" + direction.op.d2];

    _positionMarker(e, 0, direction, isStart);

    return e;
  },
      _positionMarker = function _positionMarker(marker, start, direction, flipped) {
    var vars = {
      display: "block"
    },
        side = direction[flipped ? "os2" : "p2"],
        oppositeSide = direction[flipped ? "p2" : "os2"];
    marker._isFlipped = flipped;
    vars[direction.a + "Percent"] = flipped ? -100 : 0;
    vars[direction.a] = flipped ? "1px" : 0;
    vars["border" + side + _Width] = 1;
    vars["border" + oppositeSide + _Width] = 0;
    vars[direction.p] = start + "px";
    gsap$1.set(marker, vars);
  },
      _triggers = [],
      _ids = {},
      _rafID,
      _sync = function _sync() {
    return _getTime$1() - _lastScrollTime > 34 && (_rafID || (_rafID = requestAnimationFrame(_updateAll)));
  },
      _onScroll$1 = function _onScroll() {
    if (!_normalizer$1 || !_normalizer$1.isPressed || _normalizer$1.startX > _body$1.clientWidth) {
      _scrollers.cache++;

      if (_normalizer$1) {
        _rafID || (_rafID = requestAnimationFrame(_updateAll));
      } else {
        _updateAll();
      }

      _lastScrollTime || _dispatch("scrollStart");
      _lastScrollTime = _getTime$1();
    }
  },
      _setBaseDimensions = function _setBaseDimensions() {
    _baseScreenWidth = _win$1.innerWidth;
    _baseScreenHeight = _win$1.innerHeight;
  },
      _onResize = function _onResize() {
    _scrollers.cache++;
    !_refreshing && !_ignoreResize && !_doc$1.fullscreenElement && !_doc$1.webkitFullscreenElement && (!_ignoreMobileResize || _baseScreenWidth !== _win$1.innerWidth || Math.abs(_win$1.innerHeight - _baseScreenHeight) > _win$1.innerHeight * 0.25) && _resizeDelay.restart(true);
  },
      _listeners = {},
      _emptyArray = [],
      _softRefresh = function _softRefresh() {
    return _removeListener$1(ScrollTrigger$1, "scrollEnd", _softRefresh) || _refreshAll(true);
  },
      _dispatch = function _dispatch(type) {
    return _listeners[type] && _listeners[type].map(function (f) {
      return f();
    }) || _emptyArray;
  },
      _savedStyles = [],
      _revertRecorded = function _revertRecorded(media) {
    for (var i = 0; i < _savedStyles.length; i += 5) {
      if (!media || _savedStyles[i + 4] && _savedStyles[i + 4].query === media) {
        _savedStyles[i].style.cssText = _savedStyles[i + 1];
        _savedStyles[i].getBBox && _savedStyles[i].setAttribute("transform", _savedStyles[i + 2] || "");
        _savedStyles[i + 3].uncache = 1;
      }
    }
  },
      _revertAll = function _revertAll(kill, media) {
    var trigger;

    for (_i = 0; _i < _triggers.length; _i++) {
      trigger = _triggers[_i];

      if (trigger && (!media || trigger._ctx === media)) {
        if (kill) {
          trigger.kill(1);
        } else {
          trigger.revert(true, true);
        }
      }
    }

    media && _revertRecorded(media);
    media || _dispatch("revert");
  },
      _clearScrollMemory = function _clearScrollMemory(scrollRestoration, force) {
    _scrollers.cache++;
    (force || !_refreshingAll) && _scrollers.forEach(function (obj) {
      return _isFunction(obj) && obj.cacheID++ && (obj.rec = 0);
    });
    _isString(scrollRestoration) && (_win$1.history.scrollRestoration = _scrollRestoration = scrollRestoration);
  },
      _refreshingAll,
      _refreshID = 0,
      _queueRefreshID,
      _queueRefreshAll = function _queueRefreshAll() {
    if (_queueRefreshID !== _refreshID) {
      var id = _queueRefreshID = _refreshID;
      requestAnimationFrame(function () {
        return id === _refreshID && _refreshAll(true);
      });
    }
  },
      _refreshAll = function _refreshAll(force, skipRevert) {
    if (_lastScrollTime && !force) {
      _addListener$1(ScrollTrigger$1, "scrollEnd", _softRefresh);

      return;
    }

    _refreshingAll = ScrollTrigger$1.isRefreshing = true;

    _scrollers.forEach(function (obj) {
      return _isFunction(obj) && obj.cacheID++ && (obj.rec = obj());
    });

    var refreshInits = _dispatch("refreshInit");

    _sort && ScrollTrigger$1.sort();
    skipRevert || _revertAll();

    _scrollers.forEach(function (obj) {
      if (_isFunction(obj)) {
        obj.smooth && (obj.target.style.scrollBehavior = "auto");
        obj(0);
      }
    });

    _triggers.slice(0).forEach(function (t) {
      return t.refresh();
    });

    _triggers.forEach(function (t, i) {
      if (t._subPinOffset && t.pin) {
        var prop = t.vars.horizontal ? "offsetWidth" : "offsetHeight",
            original = t.pin[prop];
        t.revert(true, 1);
        t.adjustPinSpacing(t.pin[prop] - original);
        t.revert(false, 1);
      }
    });

    _triggers.forEach(function (t) {
      return t.vars.end === "max" && t.setPositions(t.start, Math.max(t.start + 1, _maxScroll(t.scroller, t._dir)));
    });

    refreshInits.forEach(function (result) {
      return result && result.render && result.render(-1);
    });

    _scrollers.forEach(function (obj) {
      if (_isFunction(obj)) {
        obj.smooth && requestAnimationFrame(function () {
          return obj.target.style.scrollBehavior = "smooth";
        });
        obj.rec && obj(obj.rec);
      }
    });

    _clearScrollMemory(_scrollRestoration, 1);

    _resizeDelay.pause();

    _refreshID++;

    _updateAll(2);

    _triggers.forEach(function (t) {
      return _isFunction(t.vars.onRefresh) && t.vars.onRefresh(t);
    });

    _refreshingAll = ScrollTrigger$1.isRefreshing = false;

    _dispatch("refresh");
  },
      _lastScroll = 0,
      _direction = 1,
      _primary,
      _updateAll = function _updateAll(force) {
    if (!_refreshingAll || force === 2) {
      ScrollTrigger$1.isUpdating = true;
      _primary && _primary.update(0);

      var l = _triggers.length,
          time = _getTime$1(),
          recordVelocity = time - _time1 >= 50,
          scroll = l && _triggers[0].scroll();

      _direction = _lastScroll > scroll ? -1 : 1;
      _lastScroll = scroll;

      if (recordVelocity) {
        if (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {
          _lastScrollTime = 0;

          _dispatch("scrollEnd");
        }

        _time2 = _time1;
        _time1 = time;
      }

      if (_direction < 0) {
        _i = l;

        while (_i-- > 0) {
          _triggers[_i] && _triggers[_i].update(0, recordVelocity);
        }

        _direction = 1;
      } else {
        for (_i = 0; _i < l; _i++) {
          _triggers[_i] && _triggers[_i].update(0, recordVelocity);
        }
      }

      ScrollTrigger$1.isUpdating = false;
    }

    _rafID = 0;
  },
      _propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, "display", "flexShrink", "float", "zIndex", "gridColumnStart", "gridColumnEnd", "gridRowStart", "gridRowEnd", "gridArea", "justifySelf", "alignSelf", "placeSelf", "order"],
      _stateProps = _propNamesToCopy.concat([_width, _height, "boxSizing", "max" + _Width, "max" + _Height, "position", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]),
      _swapPinOut = function _swapPinOut(pin, spacer, state) {
    _setState(state);

    var cache = pin._gsap;

    if (cache.spacerIsNative) {
      _setState(cache.spacerState);
    } else if (pin._gsap.swappedIn) {
      var parent = spacer.parentNode;

      if (parent) {
        parent.insertBefore(pin, spacer);
        parent.removeChild(spacer);
      }
    }

    pin._gsap.swappedIn = false;
  },
      _swapPinIn = function _swapPinIn(pin, spacer, cs, spacerState) {
    if (!pin._gsap.swappedIn) {
      var i = _propNamesToCopy.length,
          spacerStyle = spacer.style,
          pinStyle = pin.style,
          p;

      while (i--) {
        p = _propNamesToCopy[i];
        spacerStyle[p] = cs[p];
      }

      spacerStyle.position = cs.position === "absolute" ? "absolute" : "relative";
      cs.display === "inline" && (spacerStyle.display = "inline-block");
      pinStyle[_bottom] = pinStyle[_right] = "auto";
      spacerStyle.flexBasis = cs.flexBasis || "auto";
      spacerStyle.overflow = "visible";
      spacerStyle.boxSizing = "border-box";
      spacerStyle[_width] = _getSize(pin, _horizontal) + _px;
      spacerStyle[_height] = _getSize(pin, _vertical) + _px;
      spacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = "0";

      _setState(spacerState);

      pinStyle[_width] = pinStyle["max" + _Width] = cs[_width];
      pinStyle[_height] = pinStyle["max" + _Height] = cs[_height];
      pinStyle[_padding] = cs[_padding];

      if (pin.parentNode !== spacer) {
        pin.parentNode.insertBefore(spacer, pin);
        spacer.appendChild(pin);
      }

      pin._gsap.swappedIn = true;
    }
  },
      _capsExp = /([A-Z])/g,
      _setState = function _setState(state) {
    if (state) {
      var style = state.t.style,
          l = state.length,
          i = 0,
          p,
          value;
      (state.t._gsap || gsap$1.core.getCache(state.t)).uncache = 1;

      for (; i < l; i += 2) {
        value = state[i + 1];
        p = state[i];

        if (value) {
          style[p] = value;
        } else if (style[p]) {
          style.removeProperty(p.replace(_capsExp, "-$1").toLowerCase());
        }
      }
    }
  },
      _getState = function _getState(element) {
    var l = _stateProps.length,
        style = element.style,
        state = [],
        i = 0;

    for (; i < l; i++) {
      state.push(_stateProps[i], style[_stateProps[i]]);
    }

    state.t = element;
    return state;
  },
      _copyState = function _copyState(state, override, omitOffsets) {
    var result = [],
        l = state.length,
        i = omitOffsets ? 8 : 0,
        p;

    for (; i < l; i += 2) {
      p = state[i];
      result.push(p, p in override ? override[p] : state[i + 1]);
    }

    result.t = state.t;
    return result;
  },
      _winOffsets = {
    left: 0,
    top: 0
  },
      _parsePosition = function _parsePosition(value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation) {
    _isFunction(value) && (value = value(self));

    if (_isString(value) && value.substr(0, 3) === "max") {
      value = scrollerMax + (value.charAt(4) === "=" ? _offsetToPx("0" + value.substr(3), scrollerSize) : 0);
    }

    var time = containerAnimation ? containerAnimation.time() : 0,
        p1,
        p2,
        element;
    containerAnimation && containerAnimation.seek(0);

    if (!_isNumber(value)) {
      _isFunction(trigger) && (trigger = trigger(self));
      var offsets = (value || "0").split(" "),
          bounds,
          localOffset,
          globalOffset,
          display;
      element = _getTarget(trigger) || _body$1;
      bounds = _getBounds(element) || {};

      if ((!bounds || !bounds.left && !bounds.top) && _getComputedStyle(element).display === "none") {
        display = element.style.display;
        element.style.display = "block";
        bounds = _getBounds(element);
        display ? element.style.display = display : element.style.removeProperty("display");
      }

      localOffset = _offsetToPx(offsets[0], bounds[direction.d]);
      globalOffset = _offsetToPx(offsets[1] || "0", scrollerSize);
      value = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;
      markerScroller && _positionMarker(markerScroller, globalOffset, direction, scrollerSize - globalOffset < 20 || markerScroller._isStart && globalOffset > 20);
      scrollerSize -= scrollerSize - globalOffset;
    } else if (markerScroller) {
      _positionMarker(markerScroller, scrollerSize, direction, true);
    }

    if (marker) {
      var position = value + scrollerSize,
          isStart = marker._isStart;
      p1 = "scroll" + direction.d2;

      _positionMarker(marker, position, direction, isStart && position > 20 || !isStart && (useFixedPosition ? Math.max(_body$1[p1], _docEl$1[p1]) : marker.parentNode[p1]) <= position + 1);

      if (useFixedPosition) {
        scrollerBounds = _getBounds(markerScroller);
        useFixedPosition && (marker.style[direction.op.p] = scrollerBounds[direction.op.p] - direction.op.m - marker._offset + _px);
      }
    }

    if (containerAnimation && element) {
      p1 = _getBounds(element);
      containerAnimation.seek(scrollerMax);
      p2 = _getBounds(element);
      containerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];
      value = value / containerAnimation._caScrollDist * scrollerMax;
    }

    containerAnimation && containerAnimation.seek(time);
    return containerAnimation ? value : Math.round(value);
  },
      _prefixExp = /(webkit|moz|length|cssText|inset)/i,
      _reparent = function _reparent(element, parent, top, left) {
    if (element.parentNode !== parent) {
      var style = element.style,
          p,
          cs;

      if (parent === _body$1) {
        element._stOrig = style.cssText;
        cs = _getComputedStyle(element);

        for (p in cs) {
          if (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === "string" && p !== "0") {
            style[p] = cs[p];
          }
        }

        style.top = top;
        style.left = left;
      } else {
        style.cssText = element._stOrig;
      }

      gsap$1.core.getCache(element).uncache = 1;
      parent.appendChild(element);
    }
  },
      _getTweenCreator = function _getTweenCreator(scroller, direction) {
    var getScroll = _getScrollFunc(scroller, direction),
        prop = "_scroll" + direction.p2,
        lastScroll1,
        lastScroll2,
        getTween = function getTween(scrollTo, vars, initialValue, change1, change2) {
      var tween = getTween.tween,
          onComplete = vars.onComplete,
          modifiers = {};
      initialValue = initialValue || getScroll();
      change2 = change1 && change2 || 0;
      change1 = change1 || scrollTo - initialValue;
      tween && tween.kill();
      lastScroll1 = Math.round(initialValue);
      vars[prop] = scrollTo;
      vars.modifiers = modifiers;

      modifiers[prop] = function (value) {
        value = Math.round(getScroll());

        if (value !== lastScroll1 && value !== lastScroll2 && Math.abs(value - lastScroll1) > 3 && Math.abs(value - lastScroll2) > 3) {
          tween.kill();
          getTween.tween = 0;
        } else {
          value = initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio;
        }

        lastScroll2 = lastScroll1;
        return lastScroll1 = Math.round(value);
      };

      vars.onComplete = function () {
        getTween.tween = 0;
        onComplete && onComplete.call(tween);
      };

      tween = getTween.tween = gsap$1.to(scroller, vars);
      return tween;
    };

    scroller[prop] = getScroll;

    getScroll.wheelHandler = function () {
      return getTween.tween && getTween.tween.kill() && (getTween.tween = 0);
    };

    _addListener$1(scroller, "wheel", getScroll.wheelHandler);

    return getTween;
  };

  var ScrollTrigger$1 = function () {
    function ScrollTrigger(vars, animation) {
      _coreInitted$1 || ScrollTrigger.register(gsap$1) || console.warn("Please gsap.registerPlugin(ScrollTrigger)");
      this.init(vars, animation);
    }

    var _proto = ScrollTrigger.prototype;

    _proto.init = function init(vars, animation) {
      this.progress = this.start = 0;
      this.vars && this.kill(true, true);

      if (!_enabled) {
        this.update = this.refresh = this.kill = _passThrough;
        return;
      }

      vars = _setDefaults(_isString(vars) || _isNumber(vars) || vars.nodeType ? {
        trigger: vars
      } : vars, _defaults);

      var _vars = vars,
          onUpdate = _vars.onUpdate,
          toggleClass = _vars.toggleClass,
          id = _vars.id,
          onToggle = _vars.onToggle,
          onRefresh = _vars.onRefresh,
          scrub = _vars.scrub,
          trigger = _vars.trigger,
          pin = _vars.pin,
          pinSpacing = _vars.pinSpacing,
          invalidateOnRefresh = _vars.invalidateOnRefresh,
          anticipatePin = _vars.anticipatePin,
          onScrubComplete = _vars.onScrubComplete,
          onSnapComplete = _vars.onSnapComplete,
          once = _vars.once,
          snap = _vars.snap,
          pinReparent = _vars.pinReparent,
          pinSpacer = _vars.pinSpacer,
          containerAnimation = _vars.containerAnimation,
          fastScrollEnd = _vars.fastScrollEnd,
          preventOverlaps = _vars.preventOverlaps,
          direction = vars.horizontal || vars.containerAnimation && vars.horizontal !== false ? _horizontal : _vertical,
          isToggle = !scrub && scrub !== 0,
          scroller = _getTarget(vars.scroller || _win$1),
          scrollerCache = gsap$1.core.getCache(scroller),
          isViewport = _isViewport$1(scroller),
          useFixedPosition = ("pinType" in vars ? vars.pinType : _getProxyProp(scroller, "pinType") || isViewport && "fixed") === "fixed",
          callbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack],
          toggleActions = isToggle && vars.toggleActions.split(" "),
          markers = "markers" in vars ? vars.markers : _defaults.markers,
          borderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)["border" + direction.p2 + _Width]) || 0,
          self = this,
          onRefreshInit = vars.onRefreshInit && function () {
        return vars.onRefreshInit(self);
      },
          getScrollerSize = _getSizeFunc(scroller, isViewport, direction),
          getScrollerOffsets = _getOffsetsFunc(scroller, isViewport),
          lastSnap = 0,
          lastRefresh = 0,
          scrollFunc = _getScrollFunc(scroller, direction),
          tweenTo,
          pinCache,
          snapFunc,
          scroll1,
          scroll2,
          start,
          end,
          markerStart,
          markerEnd,
          markerStartTrigger,
          markerEndTrigger,
          markerVars,
          change,
          pinOriginalState,
          pinActiveState,
          pinState,
          spacer,
          offset,
          pinGetter,
          pinSetter,
          pinStart,
          pinChange,
          spacingStart,
          spacerState,
          markerStartSetter,
          markerEndSetter,
          cs,
          snap1,
          snap2,
          scrubTween,
          scrubSmooth,
          snapDurClamp,
          snapDelayedCall,
          prevProgress,
          prevScroll,
          prevAnimProgress,
          caMarkerSetter,
          customRevertReturn;

      _context(self);

      self._dir = direction;
      anticipatePin *= 45;
      self.scroller = scroller;
      self.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;
      scroll1 = scrollFunc();
      self.vars = vars;
      animation = animation || vars.animation;

      if ("refreshPriority" in vars) {
        _sort = 1;
        vars.refreshPriority === -9999 && (_primary = self);
      }

      scrollerCache.tweenScroll = scrollerCache.tweenScroll || {
        top: _getTweenCreator(scroller, _vertical),
        left: _getTweenCreator(scroller, _horizontal)
      };
      self.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];

      self.scrubDuration = function (value) {
        scrubSmooth = _isNumber(value) && value;

        if (!scrubSmooth) {
          scrubTween && scrubTween.progress(1).kill();
          scrubTween = 0;
        } else {
          scrubTween ? scrubTween.duration(value) : scrubTween = gsap$1.to(animation, {
            ease: "expo",
            totalProgress: "+=0.001",
            duration: scrubSmooth,
            paused: true,
            onComplete: function onComplete() {
              return onScrubComplete && onScrubComplete(self);
            }
          });
        }
      };

      if (animation) {
        animation.vars.lazy = false;
        animation._initted || animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.duration() && animation.render(0, true, true);
        self.animation = animation.pause();
        animation.scrollTrigger = self;
        self.scrubDuration(scrub);
        snap1 = 0;
        id || (id = animation.vars.id);
      }

      _triggers.push(self);

      if (snap) {
        if (!_isObject(snap) || snap.push) {
          snap = {
            snapTo: snap
          };
        }

        "scrollBehavior" in _body$1.style && gsap$1.set(isViewport ? [_body$1, _docEl$1] : scroller, {
          scrollBehavior: "auto"
        });

        _scrollers.forEach(function (o) {
          return _isFunction(o) && o.target === (isViewport ? _doc$1.scrollingElement || _docEl$1 : scroller) && (o.smooth = false);
        });

        snapFunc = _isFunction(snap.snapTo) ? snap.snapTo : snap.snapTo === "labels" ? _getClosestLabel(animation) : snap.snapTo === "labelsDirectional" ? _getLabelAtDirection(animation) : snap.directional !== false ? function (value, st) {
          return _snapDirectional(snap.snapTo)(value, _getTime$1() - lastRefresh < 500 ? 0 : st.direction);
        } : gsap$1.utils.snap(snap.snapTo);
        snapDurClamp = snap.duration || {
          min: 0.1,
          max: 2
        };
        snapDurClamp = _isObject(snapDurClamp) ? _clamp$1(snapDurClamp.min, snapDurClamp.max) : _clamp$1(snapDurClamp, snapDurClamp);
        snapDelayedCall = gsap$1.delayedCall(snap.delay || scrubSmooth / 2 || 0.1, function () {
          var scroll = scrollFunc(),
              refreshedRecently = _getTime$1() - lastRefresh < 500,
              tween = tweenTo.tween;

          if ((refreshedRecently || Math.abs(self.getVelocity()) < 10) && !tween && !_pointerIsDown && lastSnap !== scroll) {
            var progress = (scroll - start) / change,
                totalProgress = animation && !isToggle ? animation.totalProgress() : progress,
                velocity = refreshedRecently ? 0 : (totalProgress - snap2) / (_getTime$1() - _time2) * 1000 || 0,
                change1 = gsap$1.utils.clamp(-progress, 1 - progress, _abs(velocity / 2) * velocity / 0.185),
                naturalEnd = progress + (snap.inertia === false ? 0 : change1),
                endValue = _clamp$1(0, 1, snapFunc(naturalEnd, self)),
                endScroll = Math.round(start + endValue * change),
                _snap = snap,
                onStart = _snap.onStart,
                _onInterrupt = _snap.onInterrupt,
                _onComplete = _snap.onComplete;

            if (scroll <= end && scroll >= start && endScroll !== scroll) {
              if (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) {
                return;
              }

              if (snap.inertia === false) {
                change1 = endValue - progress;
              }

              tweenTo(endScroll, {
                duration: snapDurClamp(_abs(Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05 || 0)),
                ease: snap.ease || "power3",
                data: _abs(endScroll - scroll),
                onInterrupt: function onInterrupt() {
                  return snapDelayedCall.restart(true) && _onInterrupt && _onInterrupt(self);
                },
                onComplete: function onComplete() {
                  self.update();
                  lastSnap = scrollFunc();
                  snap1 = snap2 = animation && !isToggle ? animation.totalProgress() : self.progress;
                  onSnapComplete && onSnapComplete(self);
                  _onComplete && _onComplete(self);
                }
              }, scroll, change1 * change, endScroll - scroll - change1 * change);
              onStart && onStart(self, tweenTo.tween);
            }
          } else if (self.isActive && lastSnap !== scroll) {
            snapDelayedCall.restart(true);
          }
        }).pause();
      }

      id && (_ids[id] = self);
      trigger = self.trigger = _getTarget(trigger || pin);
      customRevertReturn = trigger && trigger._gsap && trigger._gsap.stRevert;
      customRevertReturn && (customRevertReturn = customRevertReturn(self));
      pin = pin === true ? trigger : _getTarget(pin);
      _isString(toggleClass) && (toggleClass = {
        targets: trigger,
        className: toggleClass
      });

      if (pin) {
        pinSpacing === false || pinSpacing === _margin || (pinSpacing = !pinSpacing && pin.parentNode && pin.parentNode.style && _getComputedStyle(pin.parentNode).display === "flex" ? false : _padding);
        self.pin = pin;
        pinCache = gsap$1.core.getCache(pin);

        if (!pinCache.spacer) {
          if (pinSpacer) {
            pinSpacer = _getTarget(pinSpacer);
            pinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement);
            pinCache.spacerIsNative = !!pinSpacer;
            pinSpacer && (pinCache.spacerState = _getState(pinSpacer));
          }

          pinCache.spacer = spacer = pinSpacer || _doc$1.createElement("div");
          spacer.classList.add("pin-spacer");
          id && spacer.classList.add("pin-spacer-" + id);
          pinCache.pinState = pinOriginalState = _getState(pin);
        } else {
          pinOriginalState = pinCache.pinState;
        }

        vars.force3D !== false && gsap$1.set(pin, {
          force3D: true
        });
        self.spacer = spacer = pinCache.spacer;
        cs = _getComputedStyle(pin);
        spacingStart = cs[pinSpacing + direction.os2];
        pinGetter = gsap$1.getProperty(pin);
        pinSetter = gsap$1.quickSetter(pin, direction.a, _px);

        _swapPinIn(pin, spacer, cs);

        pinState = _getState(pin);
      }

      if (markers) {
        markerVars = _isObject(markers) ? _setDefaults(markers, _markerDefaults) : _markerDefaults;
        markerStartTrigger = _createMarker("scroller-start", id, scroller, direction, markerVars, 0);
        markerEndTrigger = _createMarker("scroller-end", id, scroller, direction, markerVars, 0, markerStartTrigger);
        offset = markerStartTrigger["offset" + direction.op.d2];

        var content = _getTarget(_getProxyProp(scroller, "content") || scroller);

        markerStart = this.markerStart = _createMarker("start", id, content, direction, markerVars, offset, 0, containerAnimation);
        markerEnd = this.markerEnd = _createMarker("end", id, content, direction, markerVars, offset, 0, containerAnimation);
        containerAnimation && (caMarkerSetter = gsap$1.quickSetter([markerStart, markerEnd], direction.a, _px));

        if (!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, "fixedMarkers") === true)) {
          _makePositionable(isViewport ? _body$1 : scroller);

          gsap$1.set([markerStartTrigger, markerEndTrigger], {
            force3D: true
          });
          markerStartSetter = gsap$1.quickSetter(markerStartTrigger, direction.a, _px);
          markerEndSetter = gsap$1.quickSetter(markerEndTrigger, direction.a, _px);
        }
      }

      if (containerAnimation) {
        var oldOnUpdate = containerAnimation.vars.onUpdate,
            oldParams = containerAnimation.vars.onUpdateParams;
        containerAnimation.eventCallback("onUpdate", function () {
          self.update(0, 0, 1);
          oldOnUpdate && oldOnUpdate.apply(oldParams || []);
        });
      }

      self.previous = function () {
        return _triggers[_triggers.indexOf(self) - 1];
      };

      self.next = function () {
        return _triggers[_triggers.indexOf(self) + 1];
      };

      self.revert = function (revert, temp) {
        if (!temp) {
          return self.kill(true);
        }

        var r = revert !== false || !self.enabled,
            prevRefreshing = _refreshing;

        if (r !== self.isReverted) {
          if (r) {
            prevScroll = Math.max(scrollFunc(), self.scroll.rec || 0);
            prevProgress = self.progress;
            prevAnimProgress = animation && animation.progress();
          }

          markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function (m) {
            return m.style.display = r ? "none" : "block";
          });

          if (r) {
            _refreshing = 1;
            self.update(r);
          }

          if (pin) {
            if (r) {
              _swapPinOut(pin, spacer, pinOriginalState);
            } else {
              (!pinReparent || !self.isActive) && _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState);
            }
          }

          r || self.update(r);
          _refreshing = prevRefreshing;
          self.isReverted = r;
        }
      };

      self.refresh = function (soft, force) {
        if ((_refreshing || !self.enabled) && !force) {
          return;
        }

        if (pin && soft && _lastScrollTime) {
          _addListener$1(ScrollTrigger, "scrollEnd", _softRefresh);

          return;
        }

        !_refreshingAll && onRefreshInit && onRefreshInit(self);
        _refreshing = 1;
        lastRefresh = _getTime$1();

        if (tweenTo.tween) {
          tweenTo.tween.kill();
          tweenTo.tween = 0;
        }

        scrubTween && scrubTween.pause();
        invalidateOnRefresh && animation && animation.revert({
          kill: false
        }).invalidate();
        self.isReverted || self.revert(true, true);
        self._subPinOffset = false;

        var size = getScrollerSize(),
            scrollerBounds = getScrollerOffsets(),
            max = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction),
            offset = 0,
            otherPinOffset = 0,
            parsedEnd = vars.end,
            parsedEndTrigger = vars.endTrigger || trigger,
            parsedStart = vars.start || (vars.start === 0 || !trigger ? 0 : pin ? "0 0" : "0 100%"),
            pinnedContainer = self.pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer),
            triggerIndex = trigger && Math.max(0, _triggers.indexOf(self)) || 0,
            i = triggerIndex,
            cs,
            bounds,
            scroll,
            isVertical,
            override,
            curTrigger,
            curPin,
            oppositeScroll,
            initted,
            revertedPins;

        while (i--) {
          curTrigger = _triggers[i];
          curTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = 1);
          curPin = curTrigger.pin;

          if (curPin && (curPin === trigger || curPin === pin) && !curTrigger.isReverted) {
            revertedPins || (revertedPins = []);
            revertedPins.unshift(curTrigger);
            curTrigger.revert(true, true);
          }

          if (curTrigger !== _triggers[i]) {
            triggerIndex--;
            i--;
          }
        }

        _isFunction(parsedStart) && (parsedStart = parsedStart(self));
        start = _parsePosition(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation) || (pin ? -0.001 : 0);
        _isFunction(parsedEnd) && (parsedEnd = parsedEnd(self));

        if (_isString(parsedEnd) && !parsedEnd.indexOf("+=")) {
          if (~parsedEnd.indexOf(" ")) {
            parsedEnd = (_isString(parsedStart) ? parsedStart.split(" ")[0] : "") + parsedEnd;
          } else {
            offset = _offsetToPx(parsedEnd.substr(2), size);
            parsedEnd = _isString(parsedStart) ? parsedStart : start + offset;
            parsedEndTrigger = trigger;
          }
        }

        end = Math.max(start, _parsePosition(parsedEnd || (parsedEndTrigger ? "100% 0" : max), parsedEndTrigger, size, direction, scrollFunc() + offset, markerEnd, markerEndTrigger, self, scrollerBounds, borderWidth, useFixedPosition, max, containerAnimation)) || -0.001;
        change = end - start || (start -= 0.01) && 0.001;
        offset = 0;
        i = triggerIndex;

        while (i--) {
          curTrigger = _triggers[i];
          curPin = curTrigger.pin;

          if (curPin && curTrigger.start - curTrigger._pinPush <= start && !containerAnimation && curTrigger.end > 0) {
            cs = curTrigger.end - curTrigger.start;

            if ((curPin === trigger && curTrigger.start - curTrigger._pinPush < start || curPin === pinnedContainer) && !_isNumber(parsedStart)) {
              offset += cs * (1 - curTrigger.progress);
            }

            curPin === pin && (otherPinOffset += cs);
          }
        }

        start += offset;
        end += offset;
        self._pinPush = otherPinOffset;

        if (markerStart && offset) {
          cs = {};
          cs[direction.a] = "+=" + offset;
          pinnedContainer && (cs[direction.p] = "-=" + scrollFunc());
          gsap$1.set([markerStart, markerEnd], cs);
        }

        if (pin) {
          cs = _getComputedStyle(pin);
          isVertical = direction === _vertical;
          scroll = scrollFunc();
          pinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;
          !max && end > 1 && ((isViewport ? _body$1 : scroller).style["overflow-" + direction.a] = "scroll");

          _swapPinIn(pin, spacer, cs);

          pinState = _getState(pin);
          bounds = _getBounds(pin, true);
          oppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();

          if (pinSpacing) {
            spacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];
            spacerState.t = spacer;
            i = pinSpacing === _padding ? _getSize(pin, direction) + change + otherPinOffset : 0;
            i && spacerState.push(direction.d, i + _px);

            _setState(spacerState);

            if (pinnedContainer) {
              _triggers.forEach(function (t) {
                if (t.pin === pinnedContainer && t.vars.pinSpacing !== false) {
                  t._subPinOffset = true;
                }
              });
            }

            useFixedPosition && scrollFunc(prevScroll);
          }

          if (useFixedPosition) {
            override = {
              top: bounds.top + (isVertical ? scroll - start : oppositeScroll) + _px,
              left: bounds.left + (isVertical ? oppositeScroll : scroll - start) + _px,
              boxSizing: "border-box",
              position: "fixed"
            };
            override[_width] = override["max" + _Width] = Math.ceil(bounds.width) + _px;
            override[_height] = override["max" + _Height] = Math.ceil(bounds.height) + _px;
            override[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = "0";
            override[_padding] = cs[_padding];
            override[_padding + _Top] = cs[_padding + _Top];
            override[_padding + _Right] = cs[_padding + _Right];
            override[_padding + _Bottom] = cs[_padding + _Bottom];
            override[_padding + _Left] = cs[_padding + _Left];
            pinActiveState = _copyState(pinOriginalState, override, pinReparent);
            _refreshingAll && scrollFunc(0);
          }

          if (animation) {
            initted = animation._initted;

            _suppressOverwrites(1);

            animation.render(animation.duration(), true, true);
            pinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;
            change !== pinChange && useFixedPosition && pinActiveState.splice(pinActiveState.length - 2, 2);
            animation.render(0, true, true);
            initted || animation.invalidate(true);
            animation.parent || animation.totalTime(animation.totalTime());

            _suppressOverwrites(0);
          } else {
            pinChange = change;
          }
        } else if (trigger && scrollFunc() && !containerAnimation) {
          bounds = trigger.parentNode;

          while (bounds && bounds !== _body$1) {
            if (bounds._pinOffset) {
              start -= bounds._pinOffset;
              end -= bounds._pinOffset;
            }

            bounds = bounds.parentNode;
          }
        }

        revertedPins && revertedPins.forEach(function (t) {
          return t.revert(false, true);
        });
        self.start = start;
        self.end = end;
        scroll1 = scroll2 = _refreshingAll ? prevScroll : scrollFunc();

        if (!containerAnimation && !_refreshingAll) {
          scroll1 < prevScroll && scrollFunc(prevScroll);
          self.scroll.rec = 0;
        }

        self.revert(false, true);

        if (snapDelayedCall) {
          lastSnap = -1;
          self.isActive && scrollFunc(start + change * prevProgress);
          snapDelayedCall.restart(true);
        }

        _refreshing = 0;
        animation && isToggle && (animation._initted || prevAnimProgress) && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress, true).render(animation.time(), true, true);

        if (prevProgress !== self.progress || containerAnimation) {
          animation && !isToggle && animation.totalProgress(prevProgress, true);
          self.progress = (scroll1 - start) / change === prevProgress ? 0 : prevProgress;
        }

        pin && pinSpacing && (spacer._pinOffset = Math.round(self.progress * pinChange));
        onRefresh && !_refreshingAll && onRefresh(self);
      };

      self.getVelocity = function () {
        return (scrollFunc() - scroll2) / (_getTime$1() - _time2) * 1000 || 0;
      };

      self.endAnimation = function () {
        _endAnimation(self.callbackAnimation);

        if (animation) {
          scrubTween ? scrubTween.progress(1) : !animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self.direction < 0, 1);
        }
      };

      self.labelToScroll = function (label) {
        return animation && animation.labels && (start || self.refresh() || start) + animation.labels[label] / animation.duration() * change || 0;
      };

      self.getTrailing = function (name) {
        var i = _triggers.indexOf(self),
            a = self.direction > 0 ? _triggers.slice(0, i).reverse() : _triggers.slice(i + 1);

        return (_isString(name) ? a.filter(function (t) {
          return t.vars.preventOverlaps === name;
        }) : a).filter(function (t) {
          return self.direction > 0 ? t.end <= start : t.start >= end;
        });
      };

      self.update = function (reset, recordVelocity, forceFake) {
        if (containerAnimation && !forceFake && !reset) {
          return;
        }

        var scroll = _refreshingAll ? prevScroll : self.scroll(),
            p = reset ? 0 : (scroll - start) / change,
            clipped = p < 0 ? 0 : p > 1 ? 1 : p || 0,
            prevProgress = self.progress,
            isActive,
            wasActive,
            toggleState,
            action,
            stateChanged,
            toggled,
            isAtMax,
            isTakingAction;

        if (recordVelocity) {
          scroll2 = scroll1;
          scroll1 = containerAnimation ? scrollFunc() : scroll;

          if (snap) {
            snap2 = snap1;
            snap1 = animation && !isToggle ? animation.totalProgress() : clipped;
          }
        }

        anticipatePin && !clipped && pin && !_refreshing && !_startup$1 && _lastScrollTime && start < scroll + (scroll - scroll2) / (_getTime$1() - _time2) * anticipatePin && (clipped = 0.0001);

        if (clipped !== prevProgress && self.enabled) {
          isActive = self.isActive = !!clipped && clipped < 1;
          wasActive = !!prevProgress && prevProgress < 1;
          toggled = isActive !== wasActive;
          stateChanged = toggled || !!clipped !== !!prevProgress;
          self.direction = clipped > prevProgress ? 1 : -1;
          self.progress = clipped;

          if (stateChanged && !_refreshing) {
            toggleState = clipped && !prevProgress ? 0 : clipped === 1 ? 1 : prevProgress === 1 ? 2 : 3;

            if (isToggle) {
              action = !toggled && toggleActions[toggleState + 1] !== "none" && toggleActions[toggleState + 1] || toggleActions[toggleState];
              isTakingAction = animation && (action === "complete" || action === "reset" || action in animation);
            }
          }

          preventOverlaps && (toggled || isTakingAction) && (isTakingAction || scrub || !animation) && (_isFunction(preventOverlaps) ? preventOverlaps(self) : self.getTrailing(preventOverlaps).forEach(function (t) {
            return t.endAnimation();
          }));

          if (!isToggle) {
            if (scrubTween && !_refreshing && !_startup$1) {
              (containerAnimation || _primary && _primary !== self) && scrubTween.render(scrubTween._dp._time - scrubTween._start);

              if (scrubTween.resetTo) {
                scrubTween.resetTo("totalProgress", clipped, animation._tTime / animation._tDur);
              } else {
                scrubTween.vars.totalProgress = clipped;
                scrubTween.invalidate().restart();
              }
            } else if (animation) {
              animation.totalProgress(clipped, !!_refreshing);
            }
          }

          if (pin) {
            reset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);

            if (!useFixedPosition) {
              pinSetter(_round(pinStart + pinChange * clipped));
            } else if (stateChanged) {
              isAtMax = !reset && clipped > prevProgress && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction);

              if (pinReparent) {
                if (!reset && (isActive || isAtMax)) {
                  var bounds = _getBounds(pin, true),
                      _offset = scroll - start;

                  _reparent(pin, _body$1, bounds.top + (direction === _vertical ? _offset : 0) + _px, bounds.left + (direction === _vertical ? 0 : _offset) + _px);
                } else {
                  _reparent(pin, spacer);
                }
              }

              _setState(isActive || isAtMax ? pinActiveState : pinState);

              pinChange !== change && clipped < 1 && isActive || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));
            }
          }

          snap && !tweenTo.tween && !_refreshing && !_startup$1 && snapDelayedCall.restart(true);
          toggleClass && (toggled || once && clipped && (clipped < 1 || !_limitCallbacks)) && _toArray(toggleClass.targets).forEach(function (el) {
            return el.classList[isActive || once ? "add" : "remove"](toggleClass.className);
          });
          onUpdate && !isToggle && !reset && onUpdate(self);

          if (stateChanged && !_refreshing) {
            if (isToggle) {
              if (isTakingAction) {
                if (action === "complete") {
                  animation.pause().totalProgress(1);
                } else if (action === "reset") {
                  animation.restart(true).pause();
                } else if (action === "restart") {
                  animation.restart(true);
                } else {
                  animation[action]();
                }
              }

              onUpdate && onUpdate(self);
            }

            if (toggled || !_limitCallbacks) {
              onToggle && toggled && _callback(self, onToggle);
              callbacks[toggleState] && _callback(self, callbacks[toggleState]);
              once && (clipped === 1 ? self.kill(false, 1) : callbacks[toggleState] = 0);

              if (!toggled) {
                toggleState = clipped === 1 ? 1 : 3;
                callbacks[toggleState] && _callback(self, callbacks[toggleState]);
              }
            }

            if (fastScrollEnd && !isActive && Math.abs(self.getVelocity()) > (_isNumber(fastScrollEnd) ? fastScrollEnd : 2500)) {
              _endAnimation(self.callbackAnimation);

              scrubTween ? scrubTween.progress(1) : _endAnimation(animation, action === "reverse" ? 1 : !clipped, 1);
            }
          } else if (isToggle && onUpdate && !_refreshing) {
            onUpdate(self);
          }
        }

        if (markerEndSetter) {
          var n = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;
          markerStartSetter(n + (markerStartTrigger._isFlipped ? 1 : 0));
          markerEndSetter(n);
        }

        caMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));
      };

      self.enable = function (reset, refresh) {
        if (!self.enabled) {
          self.enabled = true;

          _addListener$1(scroller, "resize", _onResize);

          _addListener$1(isViewport ? _doc$1 : scroller, "scroll", _onScroll$1);

          onRefreshInit && _addListener$1(ScrollTrigger, "refreshInit", onRefreshInit);

          if (reset !== false) {
            self.progress = prevProgress = 0;
            scroll1 = scroll2 = lastSnap = scrollFunc();
          }

          refresh !== false && self.refresh();
        }
      };

      self.getTween = function (snap) {
        return snap && tweenTo ? tweenTo.tween : scrubTween;
      };

      self.setPositions = function (newStart, newEnd) {
        if (pin) {
          pinStart += newStart - start;
          pinChange += newEnd - newStart - change;
          pinSpacing === _padding && self.adjustPinSpacing(newEnd - newStart - change);
        }

        self.start = start = newStart;
        self.end = end = newEnd;
        change = newEnd - newStart;
        self.update();
      };

      self.adjustPinSpacing = function (amount) {
        if (spacerState) {
          var i = spacerState.indexOf(direction.d) + 1;
          spacerState[i] = parseFloat(spacerState[i]) + amount + _px;
          spacerState[1] = parseFloat(spacerState[1]) + amount + _px;

          _setState(spacerState);
        }
      };

      self.disable = function (reset, allowAnimation) {
        if (self.enabled) {
          reset !== false && self.revert(true, true);
          self.enabled = self.isActive = false;
          allowAnimation || scrubTween && scrubTween.pause();
          prevScroll = 0;
          pinCache && (pinCache.uncache = 1);
          onRefreshInit && _removeListener$1(ScrollTrigger, "refreshInit", onRefreshInit);

          if (snapDelayedCall) {
            snapDelayedCall.pause();
            tweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);
          }

          if (!isViewport) {
            var i = _triggers.length;

            while (i--) {
              if (_triggers[i].scroller === scroller && _triggers[i] !== self) {
                return;
              }
            }

            _removeListener$1(scroller, "resize", _onResize);

            _removeListener$1(scroller, "scroll", _onScroll$1);
          }
        }
      };

      self.kill = function (revert, allowAnimation) {
        self.disable(revert, allowAnimation);
        scrubTween && !allowAnimation && scrubTween.kill();
        id && delete _ids[id];

        var i = _triggers.indexOf(self);

        i >= 0 && _triggers.splice(i, 1);
        i === _i && _direction > 0 && _i--;
        i = 0;

        _triggers.forEach(function (t) {
          return t.scroller === self.scroller && (i = 1);
        });

        i || _refreshingAll || (self.scroll.rec = 0);

        if (animation) {
          animation.scrollTrigger = null;
          revert && animation.revert({
            kill: false
          });
          allowAnimation || animation.kill();
        }

        markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function (m) {
          return m.parentNode && m.parentNode.removeChild(m);
        });
        _primary === self && (_primary = 0);

        if (pin) {
          pinCache && (pinCache.uncache = 1);
          i = 0;

          _triggers.forEach(function (t) {
            return t.pin === pin && i++;
          });

          i || (pinCache.spacer = 0);
        }

        vars.onKill && vars.onKill(self);
      };

      self.enable(false, false);
      customRevertReturn && customRevertReturn(self);
      !animation || !animation.add || change ? self.refresh() : gsap$1.delayedCall(0.01, function () {
        return start || end || self.refresh();
      }) && (change = 0.01) && (start = end = 0);
      pin && _queueRefreshAll();
    };

    ScrollTrigger.register = function register(core) {
      if (!_coreInitted$1) {
        gsap$1 = core || _getGSAP$1();
        _windowExists() && window.document && ScrollTrigger.enable();
        _coreInitted$1 = _enabled;
      }

      return _coreInitted$1;
    };

    ScrollTrigger.defaults = function defaults(config) {
      if (config) {
        for (var p in config) {
          _defaults[p] = config[p];
        }
      }

      return _defaults;
    };

    ScrollTrigger.disable = function disable(reset, kill) {
      _enabled = 0;

      _triggers.forEach(function (trigger) {
        return trigger[kill ? "kill" : "disable"](reset);
      });

      _removeListener$1(_win$1, "wheel", _onScroll$1);

      _removeListener$1(_doc$1, "scroll", _onScroll$1);

      clearInterval(_syncInterval);

      _removeListener$1(_doc$1, "touchcancel", _passThrough);

      _removeListener$1(_body$1, "touchstart", _passThrough);

      _multiListener(_removeListener$1, _doc$1, "pointerdown,touchstart,mousedown", _pointerDownHandler);

      _multiListener(_removeListener$1, _doc$1, "pointerup,touchend,mouseup", _pointerUpHandler);

      _resizeDelay.kill();

      _iterateAutoRefresh(_removeListener$1);

      for (var i = 0; i < _scrollers.length; i += 3) {
        _wheelListener(_removeListener$1, _scrollers[i], _scrollers[i + 1]);

        _wheelListener(_removeListener$1, _scrollers[i], _scrollers[i + 2]);
      }
    };

    ScrollTrigger.enable = function enable() {
      _win$1 = window;
      _doc$1 = document;
      _docEl$1 = _doc$1.documentElement;
      _body$1 = _doc$1.body;

      if (gsap$1) {
        _toArray = gsap$1.utils.toArray;
        _clamp$1 = gsap$1.utils.clamp;
        _context = gsap$1.core.context || _passThrough;
        _suppressOverwrites = gsap$1.core.suppressOverwrites || _passThrough;
        _scrollRestoration = _win$1.history.scrollRestoration || "auto";
        gsap$1.core.globals("ScrollTrigger", ScrollTrigger);

        if (_body$1) {
          _enabled = 1;
          Observer.register(gsap$1);
          ScrollTrigger.isTouch = Observer.isTouch;
          _fixIOSBug = Observer.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent);

          _addListener$1(_win$1, "wheel", _onScroll$1);

          _root$1 = [_win$1, _doc$1, _docEl$1, _body$1];

          if (gsap$1.matchMedia) {
            ScrollTrigger.matchMedia = function (vars) {
              var mm = gsap$1.matchMedia(),
                  p;

              for (p in vars) {
                mm.add(p, vars[p]);
              }

              return mm;
            };

            gsap$1.addEventListener("matchMediaInit", function () {
              return _revertAll();
            });
            gsap$1.addEventListener("matchMediaRevert", function () {
              return _revertRecorded();
            });
            gsap$1.addEventListener("matchMedia", function () {
              _refreshAll(0, 1);

              _dispatch("matchMedia");
            });
            gsap$1.matchMedia("(orientation: portrait)", function () {
              _setBaseDimensions();

              return _setBaseDimensions;
            });
          } else {
            console.warn("Requires GSAP 3.11.0 or later");
          }

          _setBaseDimensions();

          _addListener$1(_doc$1, "scroll", _onScroll$1);

          var bodyStyle = _body$1.style,
              border = bodyStyle.borderTopStyle,
              AnimationProto = gsap$1.core.Animation.prototype,
              bounds,
              i;
          AnimationProto.revert || Object.defineProperty(AnimationProto, "revert", {
            value: function value() {
              return this.time(-0.01, true);
            }
          });
          bodyStyle.borderTopStyle = "solid";
          bounds = _getBounds(_body$1);
          _vertical.m = Math.round(bounds.top + _vertical.sc()) || 0;
          _horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;
          border ? bodyStyle.borderTopStyle = border : bodyStyle.removeProperty("border-top-style");
          _syncInterval = setInterval(_sync, 250);
          gsap$1.delayedCall(0.5, function () {
            return _startup$1 = 0;
          });

          _addListener$1(_doc$1, "touchcancel", _passThrough);

          _addListener$1(_body$1, "touchstart", _passThrough);

          _multiListener(_addListener$1, _doc$1, "pointerdown,touchstart,mousedown", _pointerDownHandler);

          _multiListener(_addListener$1, _doc$1, "pointerup,touchend,mouseup", _pointerUpHandler);

          _transformProp = gsap$1.utils.checkPrefix("transform");

          _stateProps.push(_transformProp);

          _coreInitted$1 = _getTime$1();
          _resizeDelay = gsap$1.delayedCall(0.2, _refreshAll).pause();
          _autoRefresh = [_doc$1, "visibilitychange", function () {
            var w = _win$1.innerWidth,
                h = _win$1.innerHeight;

            if (_doc$1.hidden) {
              _prevWidth = w;
              _prevHeight = h;
            } else if (_prevWidth !== w || _prevHeight !== h) {
              _onResize();
            }
          }, _doc$1, "DOMContentLoaded", _refreshAll, _win$1, "load", _refreshAll, _win$1, "resize", _onResize];

          _iterateAutoRefresh(_addListener$1);

          _triggers.forEach(function (trigger) {
            return trigger.enable(0, 1);
          });

          for (i = 0; i < _scrollers.length; i += 3) {
            _wheelListener(_removeListener$1, _scrollers[i], _scrollers[i + 1]);

            _wheelListener(_removeListener$1, _scrollers[i], _scrollers[i + 2]);
          }
        }
      }
    };

    ScrollTrigger.config = function config(vars) {
      "limitCallbacks" in vars && (_limitCallbacks = !!vars.limitCallbacks);
      var ms = vars.syncInterval;
      ms && clearInterval(_syncInterval) || (_syncInterval = ms) && setInterval(_sync, ms);
      "ignoreMobileResize" in vars && (_ignoreMobileResize = ScrollTrigger.isTouch === 1 && vars.ignoreMobileResize);

      if ("autoRefreshEvents" in vars) {
        _iterateAutoRefresh(_removeListener$1) || _iterateAutoRefresh(_addListener$1, vars.autoRefreshEvents || "none");
        _ignoreResize = (vars.autoRefreshEvents + "").indexOf("resize") === -1;
      }
    };

    ScrollTrigger.scrollerProxy = function scrollerProxy(target, vars) {
      var t = _getTarget(target),
          i = _scrollers.indexOf(t),
          isViewport = _isViewport$1(t);

      if (~i) {
        _scrollers.splice(i, isViewport ? 6 : 2);
      }

      if (vars) {
        isViewport ? _proxies.unshift(_win$1, vars, _body$1, vars, _docEl$1, vars) : _proxies.unshift(t, vars);
      }
    };

    ScrollTrigger.clearMatchMedia = function clearMatchMedia(query) {
      _triggers.forEach(function (t) {
        return t._ctx && t._ctx.query === query && t._ctx.kill(true, true);
      });
    };

    ScrollTrigger.isInViewport = function isInViewport(element, ratio, horizontal) {
      var bounds = (_isString(element) ? _getTarget(element) : element).getBoundingClientRect(),
          offset = bounds[horizontal ? _width : _height] * ratio || 0;
      return horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win$1.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win$1.innerHeight;
    };

    ScrollTrigger.positionInViewport = function positionInViewport(element, referencePoint, horizontal) {
      _isString(element) && (element = _getTarget(element));
      var bounds = element.getBoundingClientRect(),
          size = bounds[horizontal ? _width : _height],
          offset = referencePoint == null ? size / 2 : referencePoint in _keywords ? _keywords[referencePoint] * size : ~referencePoint.indexOf("%") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0;
      return horizontal ? (bounds.left + offset) / _win$1.innerWidth : (bounds.top + offset) / _win$1.innerHeight;
    };

    ScrollTrigger.killAll = function killAll(allowListeners) {
      _triggers.forEach(function (t) {
        return t.vars.id !== "ScrollSmoother" && t.kill();
      });

      if (allowListeners !== true) {
        var listeners = _listeners.killAll || [];
        _listeners = {};
        listeners.forEach(function (f) {
          return f();
        });
      }
    };

    return ScrollTrigger;
  }();
  ScrollTrigger$1.version = "3.11.3";

  ScrollTrigger$1.saveStyles = function (targets) {
    return targets ? _toArray(targets).forEach(function (target) {
      if (target && target.style) {
        var i = _savedStyles.indexOf(target);

        i >= 0 && _savedStyles.splice(i, 5);

        _savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute("transform"), gsap$1.core.getCache(target), _context());
      }
    }) : _savedStyles;
  };

  ScrollTrigger$1.revert = function (soft, media) {
    return _revertAll(!soft, media);
  };

  ScrollTrigger$1.create = function (vars, animation) {
    return new ScrollTrigger$1(vars, animation);
  };

  ScrollTrigger$1.refresh = function (safe) {
    return safe ? _onResize() : (_coreInitted$1 || ScrollTrigger$1.register()) && _refreshAll(true);
  };

  ScrollTrigger$1.update = _updateAll;
  ScrollTrigger$1.clearScrollMemory = _clearScrollMemory;

  ScrollTrigger$1.maxScroll = function (element, horizontal) {
    return _maxScroll(element, horizontal ? _horizontal : _vertical);
  };

  ScrollTrigger$1.getScrollFunc = function (element, horizontal) {
    return _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);
  };

  ScrollTrigger$1.getById = function (id) {
    return _ids[id];
  };

  ScrollTrigger$1.getAll = function () {
    return _triggers.filter(function (t) {
      return t.vars.id !== "ScrollSmoother";
    });
  };

  ScrollTrigger$1.isScrolling = function () {
    return !!_lastScrollTime;
  };

  ScrollTrigger$1.snapDirectional = _snapDirectional;

  ScrollTrigger$1.addEventListener = function (type, callback) {
    var a = _listeners[type] || (_listeners[type] = []);
    ~a.indexOf(callback) || a.push(callback);
  };

  ScrollTrigger$1.removeEventListener = function (type, callback) {
    var a = _listeners[type],
        i = a && a.indexOf(callback);
    i >= 0 && a.splice(i, 1);
  };

  ScrollTrigger$1.batch = function (targets, vars) {
    var result = [],
        varsCopy = {},
        interval = vars.interval || 0.016,
        batchMax = vars.batchMax || 1e9,
        proxyCallback = function proxyCallback(type, callback) {
      var elements = [],
          triggers = [],
          delay = gsap$1.delayedCall(interval, function () {
        callback(elements, triggers);
        elements = [];
        triggers = [];
      }).pause();
      return function (self) {
        elements.length || delay.restart(true);
        elements.push(self.trigger);
        triggers.push(self);
        batchMax <= elements.length && delay.progress(1);
      };
    },
        p;

    for (p in vars) {
      varsCopy[p] = p.substr(0, 2) === "on" && _isFunction(vars[p]) && p !== "onRefreshInit" ? proxyCallback(p, vars[p]) : vars[p];
    }

    if (_isFunction(batchMax)) {
      batchMax = batchMax();

      _addListener$1(ScrollTrigger$1, "refresh", function () {
        return batchMax = vars.batchMax();
      });
    }

    _toArray(targets).forEach(function (target) {
      var config = {};

      for (p in varsCopy) {
        config[p] = varsCopy[p];
      }

      config.trigger = target;
      result.push(ScrollTrigger$1.create(config));
    });

    return result;
  };

  var _clampScrollAndGetDurationMultiplier = function _clampScrollAndGetDurationMultiplier(scrollFunc, current, end, max) {
    current > max ? scrollFunc(max) : current < 0 && scrollFunc(0);
    return end > max ? (max - current) / (end - current) : end < 0 ? current / (current - end) : 1;
  },
      _allowNativePanning = function _allowNativePanning(target, direction) {
    if (direction === true) {
      target.style.removeProperty("touch-action");
    } else {
      target.style.touchAction = direction === true ? "auto" : direction ? "pan-" + direction + (Observer.isTouch ? " pinch-zoom" : "") : "none";
    }

    target === _docEl$1 && _allowNativePanning(_body$1, direction);
  },
      _overflow = {
    auto: 1,
    scroll: 1
  },
      _nestedScroll = function _nestedScroll(_ref5) {
    var event = _ref5.event,
        target = _ref5.target,
        axis = _ref5.axis;

    var node = (event.changedTouches ? event.changedTouches[0] : event).target,
        cache = node._gsap || gsap$1.core.getCache(node),
        time = _getTime$1(),
        cs;

    if (!cache._isScrollT || time - cache._isScrollT > 2000) {
      while (node && node.scrollHeight <= node.clientHeight) {
        node = node.parentNode;
      }

      cache._isScroll = node && !_isViewport$1(node) && node !== target && (_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]);
      cache._isScrollT = time;
    }

    if (cache._isScroll || axis === "x") {
      event.stopPropagation();
      event._gsapAllow = true;
    }
  },
      _inputObserver = function _inputObserver(target, type, inputs, nested) {
    return Observer.create({
      target: target,
      capture: true,
      debounce: false,
      lockAxis: true,
      type: type,
      onWheel: nested = nested && _nestedScroll,
      onPress: nested,
      onDrag: nested,
      onScroll: nested,
      onEnable: function onEnable() {
        return inputs && _addListener$1(_doc$1, Observer.eventTypes[0], _captureInputs, false, true);
      },
      onDisable: function onDisable() {
        return _removeListener$1(_doc$1, Observer.eventTypes[0], _captureInputs, true);
      }
    });
  },
      _inputExp = /(input|label|select|textarea)/i,
      _inputIsFocused,
      _captureInputs = function _captureInputs(e) {
    var isInput = _inputExp.test(e.target.tagName);

    if (isInput || _inputIsFocused) {
      e._gsapAllow = true;
      _inputIsFocused = isInput;
    }
  },
      _getScrollNormalizer = function _getScrollNormalizer(vars) {
    _isObject(vars) || (vars = {});
    vars.preventDefault = vars.isNormalizer = vars.allowClicks = true;
    vars.type || (vars.type = "wheel,touch");
    vars.debounce = !!vars.debounce;
    vars.id = vars.id || "normalizer";

    var _vars2 = vars,
        normalizeScrollX = _vars2.normalizeScrollX,
        momentum = _vars2.momentum,
        allowNestedScroll = _vars2.allowNestedScroll,
        self,
        maxY,
        target = _getTarget(vars.target) || _docEl$1,
        smoother = gsap$1.core.globals().ScrollSmoother,
        smootherInstance = smoother && smoother.get(),
        content = _fixIOSBug && (vars.content && _getTarget(vars.content) || smootherInstance && vars.content !== false && !smootherInstance.smooth() && smootherInstance.content()),
        scrollFuncY = _getScrollFunc(target, _vertical),
        scrollFuncX = _getScrollFunc(target, _horizontal),
        scale = 1,
        initialScale = (Observer.isTouch && _win$1.visualViewport ? _win$1.visualViewport.scale * _win$1.visualViewport.width : _win$1.outerWidth) / _win$1.innerWidth,
        wheelRefresh = 0,
        resolveMomentumDuration = _isFunction(momentum) ? function () {
      return momentum(self);
    } : function () {
      return momentum || 2.8;
    },
        lastRefreshID,
        skipTouchMove,
        inputObserver = _inputObserver(target, vars.type, true, allowNestedScroll),
        resumeTouchMove = function resumeTouchMove() {
      return skipTouchMove = false;
    },
        scrollClampX = _passThrough,
        scrollClampY = _passThrough,
        updateClamps = function updateClamps() {
      maxY = _maxScroll(target, _vertical);
      scrollClampY = _clamp$1(_fixIOSBug ? 1 : 0, maxY);
      normalizeScrollX && (scrollClampX = _clamp$1(0, _maxScroll(target, _horizontal)));
      lastRefreshID = _refreshID;
    },
        removeContentOffset = function removeContentOffset() {
      content._gsap.y = _round(parseFloat(content._gsap.y) + scrollFuncY.offset) + "px";
      content.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + parseFloat(content._gsap.y) + ", 0, 1)";
      scrollFuncY.offset = scrollFuncY.cacheID = 0;
    },
        ignoreDrag = function ignoreDrag() {
      if (skipTouchMove) {
        requestAnimationFrame(resumeTouchMove);

        var offset = _round(self.deltaY / 2),
            scroll = scrollClampY(scrollFuncY.v - offset);

        if (content && scroll !== scrollFuncY.v + scrollFuncY.offset) {
          scrollFuncY.offset = scroll - scrollFuncY.v;

          var y = _round((parseFloat(content && content._gsap.y) || 0) - scrollFuncY.offset);

          content.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + y + ", 0, 1)";
          content._gsap.y = y + "px";
          scrollFuncY.cacheID = _scrollers.cache;

          _updateAll();
        }

        return true;
      }

      scrollFuncY.offset && removeContentOffset();
      skipTouchMove = true;
    },
        tween,
        startScrollX,
        startScrollY,
        onStopDelayedCall,
        onResize = function onResize() {
      updateClamps();

      if (tween.isActive() && tween.vars.scrollY > maxY) {
        scrollFuncY() > maxY ? tween.progress(1) && scrollFuncY(maxY) : tween.resetTo("scrollY", maxY);
      }
    };

    content && gsap$1.set(content, {
      y: "+=0"
    });

    vars.ignoreCheck = function (e) {
      return _fixIOSBug && e.type === "touchmove" && ignoreDrag() || scale > 1.05 && e.type !== "touchstart" || self.isGesturing || e.touches && e.touches.length > 1;
    };

    vars.onPress = function () {
      var prevScale = scale;
      scale = _round((_win$1.visualViewport && _win$1.visualViewport.scale || 1) / initialScale);
      tween.pause();
      prevScale !== scale && _allowNativePanning(target, scale > 1.01 ? true : normalizeScrollX ? false : "x");
      startScrollX = scrollFuncX();
      startScrollY = scrollFuncY();
      updateClamps();
      lastRefreshID = _refreshID;
    };

    vars.onRelease = vars.onGestureStart = function (self, wasDragging) {
      scrollFuncY.offset && removeContentOffset();

      if (!wasDragging) {
        onStopDelayedCall.restart(true);
      } else {
        _scrollers.cache++;
        var dur = resolveMomentumDuration(),
            currentScroll,
            endScroll;

        if (normalizeScrollX) {
          currentScroll = scrollFuncX();
          endScroll = currentScroll + dur * 0.05 * -self.velocityX / 0.227;
          dur *= _clampScrollAndGetDurationMultiplier(scrollFuncX, currentScroll, endScroll, _maxScroll(target, _horizontal));
          tween.vars.scrollX = scrollClampX(endScroll);
        }

        currentScroll = scrollFuncY();
        endScroll = currentScroll + dur * 0.05 * -self.velocityY / 0.227;
        dur *= _clampScrollAndGetDurationMultiplier(scrollFuncY, currentScroll, endScroll, _maxScroll(target, _vertical));
        tween.vars.scrollY = scrollClampY(endScroll);
        tween.invalidate().duration(dur).play(0.01);

        if (_fixIOSBug && tween.vars.scrollY >= maxY || currentScroll >= maxY - 1) {
          gsap$1.to({}, {
            onUpdate: onResize,
            duration: dur
          });
        }
      }
    };

    vars.onWheel = function () {
      tween._ts && tween.pause();

      if (_getTime$1() - wheelRefresh > 1000) {
        lastRefreshID = 0;
        wheelRefresh = _getTime$1();
      }
    };

    vars.onChange = function (self, dx, dy, xArray, yArray) {
      _refreshID !== lastRefreshID && updateClamps();
      dx && normalizeScrollX && scrollFuncX(scrollClampX(xArray[2] === dx ? startScrollX + (self.startX - self.x) : scrollFuncX() + dx - xArray[1]));

      if (dy) {
        scrollFuncY.offset && removeContentOffset();
        var isTouch = yArray[2] === dy,
            y = isTouch ? startScrollY + self.startY - self.y : scrollFuncY() + dy - yArray[1],
            yClamped = scrollClampY(y);
        isTouch && y !== yClamped && (startScrollY += yClamped - y);
        scrollFuncY(yClamped);
      }

      (dy || dx) && _updateAll();
    };

    vars.onEnable = function () {
      _allowNativePanning(target, normalizeScrollX ? false : "x");

      ScrollTrigger$1.addEventListener("refresh", onResize);

      _addListener$1(_win$1, "resize", onResize);

      if (scrollFuncY.smooth) {
        scrollFuncY.target.style.scrollBehavior = "auto";
        scrollFuncY.smooth = scrollFuncX.smooth = false;
      }

      inputObserver.enable();
    };

    vars.onDisable = function () {
      _allowNativePanning(target, true);

      _removeListener$1(_win$1, "resize", onResize);

      ScrollTrigger$1.removeEventListener("refresh", onResize);
      inputObserver.kill();
    };

    vars.lockAxis = vars.lockAxis !== false;
    self = new Observer(vars);
    self.iOS = _fixIOSBug;
    _fixIOSBug && !scrollFuncY() && scrollFuncY(1);
    _fixIOSBug && gsap$1.ticker.add(_passThrough);
    onStopDelayedCall = self._dc;
    tween = gsap$1.to(self, {
      ease: "power4",
      paused: true,
      scrollX: normalizeScrollX ? "+=0.1" : "+=0",
      scrollY: "+=0.1",
      onComplete: onStopDelayedCall.vars.onComplete
    });
    return self;
  };

  ScrollTrigger$1.sort = function (func) {
    return _triggers.sort(func || function (a, b) {
      return (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6);
    });
  };

  ScrollTrigger$1.observe = function (vars) {
    return new Observer(vars);
  };

  ScrollTrigger$1.normalizeScroll = function (vars) {
    if (typeof vars === "undefined") {
      return _normalizer$1;
    }

    if (vars === true && _normalizer$1) {
      return _normalizer$1.enable();
    }

    if (vars === false) {
      return _normalizer$1 && _normalizer$1.kill();
    }

    var normalizer = vars instanceof Observer ? vars : _getScrollNormalizer(vars);
    _normalizer$1 && _normalizer$1.target === normalizer.target && _normalizer$1.kill();
    _isViewport$1(normalizer.target) && (_normalizer$1 = normalizer);
    return normalizer;
  };

  ScrollTrigger$1.core = {
    _getVelocityProp: _getVelocityProp,
    _inputObserver: _inputObserver,
    _scrollers: _scrollers,
    _proxies: _proxies,
    bridge: {
      ss: function ss() {
        _lastScrollTime || _dispatch("scrollStart");
        _lastScrollTime = _getTime$1();
      },
      ref: function ref() {
        return _refreshing;
      }
    }
  };
  _getGSAP$1() && gsap$1.registerPlugin(ScrollTrigger$1);

  exports.ScrollTrigger = ScrollTrigger$1;
  exports.default = ScrollTrigger$1;

  if (typeof(window) === 'undefined' || window !== exports) {Object.defineProperty(exports, '__esModule', { value: true });} else {delete window.default;}

})));

/**
 * SplitType
 * https://github.com/lukePeavey/SplitType
 * @version 0.3.4
 * @author Luke Peavey <lwpeavey@gmail.com>
 */

!(function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? (module.exports = e()) : "function" == typeof define && define.amd ? define(e) : ((t = "undefined" != typeof globalThis ? globalThis : t || self).SplitType = e());
})(this, function () {
  "use strict";
  function t(t, e) {
    for (var n = 0; n < e.length; n++) {
      var r = e[n];
      (r.enumerable = r.enumerable || !1), (r.configurable = !0), "value" in r && (r.writable = !0), Object.defineProperty(t, r.key, r);
    }
  }
  function e(e, n, r) {
    return n && t(e.prototype, n), r && t(e, r), e;
  }
  function n(t, e, n) {
    return e in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : (t[e] = n), t;
  }
  function r(t, e) {
    var n = Object.keys(t);
    if (Object.getOwnPropertySymbols) {
      var r = Object.getOwnPropertySymbols(t);
      e &&
        (r = r.filter(function (e) {
          return Object.getOwnPropertyDescriptor(t, e).enumerable;
        })),
        n.push.apply(n, r);
    }
    return n;
  }
  function o(t) {
    for (var e = 1; e < arguments.length; e++) {
      var o = null != arguments[e] ? arguments[e] : {};
      e % 2
        ? r(Object(o), !0).forEach(function (e) {
            n(t, e, o[e]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o))
        : r(Object(o)).forEach(function (e) {
            Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(o, e));
          });
    }
    return t;
  }
  function i(t, e) {
    return (
      (function (t) {
        if (Array.isArray(t)) return t;
      })(t) ||
      (function (t, e) {
        if ("undefined" == typeof Symbol || !(Symbol.iterator in Object(t))) return;
        var n = [],
          r = !0,
          o = !1,
          i = void 0;
        try {
          for (var a, c = t[Symbol.iterator](); !(r = (a = c.next()).done) && (n.push(a.value), !e || n.length !== e); r = !0);
        } catch (t) {
          (o = !0), (i = t);
        } finally {
          try {
            r || null == c.return || c.return();
          } finally {
            if (o) throw i;
          }
        }
        return n;
      })(t, e) ||
      c(t, e) ||
      (function () {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      })()
    );
  }
  function a(t) {
    return (
      (function (t) {
        if (Array.isArray(t)) return s(t);
      })(t) ||
      (function (t) {
        if ("undefined" != typeof Symbol && Symbol.iterator in Object(t)) return Array.from(t);
      })(t) ||
      c(t) ||
      (function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      })()
    );
  }
  function c(t, e) {
    if (t) {
      if ("string" == typeof t) return s(t, e);
      var n = Object.prototype.toString.call(t).slice(8, -1);
      return "Object" === n && t.constructor && (n = t.constructor.name), "Map" === n || "Set" === n ? Array.from(t) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? s(t, e) : void 0;
    }
  }
  function s(t, e) {
    (null == e || e > t.length) && (e = t.length);
    for (var n = 0, r = new Array(e); n < e; n++) r[n] = t[n];
    return r;
  }
  function l(t, e) {
    return Object.getOwnPropertyNames(Object(t)).reduce(function (n, r) {
      var o = Object.getOwnPropertyDescriptor(Object(t), r),
        i = Object.getOwnPropertyDescriptor(Object(e), r);
      return Object.defineProperty(n, r, i || o);
    }, {});
  }
  function u(t) {
    return "string" == typeof t;
  }
  function f(t) {
    return Array.isArray(t);
  }
  function p() {
    var t,
      e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
      n = l(e);
    return (
      void 0 !== n.types ? (t = n.types) : void 0 !== n.split && (t = n.split),
      void 0 !== t &&
        (n.types = (u(t) || f(t) ? String(t) : "")
          .split(",")
          .map(function (t) {
            return String(t).trim();
          })
          .filter(function (t) {
            return /((line)|(word)|(char))/i.test(t);
          })),
      (n.absolute || n.position) && (n.absolute = n.absolute || /absolute/.test(e.position)),
      n
    );
  }
  function d(t) {
    var e = u(t) || f(t) ? String(t) : "";
    return { none: !e, lines: /line/i.test(e), words: /word/i.test(e), chars: /char/i.test(e) };
  }
  function h(t) {
    return null !== t && "object" == typeof t;
  }
  function y(t) {
    return h(t) && /^(1|3|11)$/.test(t.nodeType);
  }
  function g(t) {
    return f(t)
      ? t
      : null == t
      ? []
      : (function (t) {
          return (
            h(t) &&
            (function (t) {
              return "number" == typeof t && t > -1 && t % 1 == 0;
            })(t.length)
          );
        })(t)
      ? Array.prototype.slice.call(t)
      : [t];
  }
  function v(t) {
    var e = t;
    return (
      u(t) && (e = /^(#[a-z]\w+)$/.test(t.trim()) ? document.getElementById(t.trim().slice(1)) : document.querySelectorAll(t)),
      g(e).reduce(function (t, e) {
        return [].concat(a(t), a(g(e).filter(y)));
      }, [])
    );
  }
  !(function () {
    function t() {
      for (var t = arguments.length, e = 0; e < t; e++) {
        var n = e < 0 || arguments.length <= e ? void 0 : arguments[e];
        1 === n.nodeType || 11 === n.nodeType ? this.appendChild(n) : this.appendChild(document.createTextNode(String(n)));
      }
    }
    function e() {
      for (; this.lastChild; ) this.removeChild(this.lastChild);
      arguments.length && this.append.apply(this, arguments);
    }
    function n() {
      for (var t = this.parentNode, e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
      var o = n.length;
      if (t)
        for (o || t.removeChild(this); o--; ) {
          var i = n[o];
          "object" != typeof i ? (i = this.ownerDocument.createTextNode(i)) : i.parentNode && i.parentNode.removeChild(i), o ? t.insertBefore(this.previousSibling, i) : t.replaceChild(i, this);
        }
    }
    "undefined" != typeof Element && (Element.prototype.append || ((Element.prototype.append = t), (DocumentFragment.prototype.append = t)), Element.prototype.replaceChildren || ((Element.prototype.replaceChildren = e), (DocumentFragment.prototype.replaceChildren = e)), Element.prototype.replaceWith || ((Element.prototype.replaceWith = n), (DocumentFragment.prototype.replaceWith = n)));
  })();
  var m = Object.entries,
    b = "_splittype",
    w = {},
    O = 0;
  function j(t, e, n) {
    if (!h(t)) return console.warn("[data.set] owner is not an object"), null;
    var r = t[b] || (t[b] = ++O),
      i = w[r] || (w[r] = {});
    return void 0 === n ? e && Object.getPrototypeOf(e) === Object.prototype && (w[r] = o(o({}, i), e)) : void 0 !== e && (i[e] = n), n;
  }
  function C(t, e) {
    var n = h(t) ? t[b] : null,
      r = (n && w[n]) || {};
    return void 0 === e ? r : r[e];
  }
  function E(t) {
    var e = t && t[b];
    e && (delete t[e], delete w[e]);
  }
  var S = "\\ud800-\\udfff",
    x = "\\u0300-\\u036f\\ufe20-\\ufe23",
    T = "\\u20d0-\\u20f0",
    W = "\\ufe0e\\ufe0f",
    k = "[".concat(S, "]"),
    A = "[".concat(x).concat(T, "]"),
    P = "\\ud83c[\\udffb-\\udfff]",
    D = "(?:".concat(A, "|").concat(P, ")"),
    N = "[^".concat(S, "]"),
    R = "(?:\\ud83c[\\udde6-\\uddff]){2}",
    $ = "[\\ud800-\\udbff][\\udc00-\\udfff]",
    B = "\\u200d",
    F = "".concat(D, "?"),
    I = "[".concat(W, "]?"),
    L = I + F + ("(?:\\u200d(?:" + [N, R, $].join("|") + ")" + I + F + ")*"),
    H = "(?:".concat(["".concat(N).concat(A, "?"), A, R, $, k].join("|"), "\n)"),
    M = RegExp("".concat(P, "(?=").concat(P, ")|").concat(H).concat(L), "g"),
    z = RegExp("[".concat([B, S, x, T, W].join(""), "]"));
  function V(t) {
    return z.test(t);
  }
  function q(t) {
    return V(t)
      ? (function (t) {
          return t.match(M) || [];
        })(t)
      : (function (t) {
          return t.split("");
        })(t);
  }
  function U(t) {
    return null == t ? "" : String(t);
  }
  function X(t, e) {
    var n = document.createElement(t);
    return e
      ? (Object.keys(e).forEach(function (t) {
          var r = e[t],
            o = u(r) ? r.trim() : r;
          null !== o && "" !== o && ("children" === t ? n.append.apply(n, a(g(o))) : n.setAttribute(t, o));
        }),
        n)
      : n;
  }
  var Y = { splitClass: "", lineClass: "line", wordClass: "word", charClass: "char", types: ["lines", "words", "chars"], absolute: !1, tagName: "div" };
  function _(t, e) {
    var n,
      r = d((e = l(Y, e)).types),
      o = e.tagName,
      i = t.nodeValue,
      c = document.createDocumentFragment(),
      s = [];
    return (
      /^\s/.test(i) && c.append(" "),
      (n = (function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : " ";
        return (t ? String(t) : "").trim().replace(/\s+/g, " ").split(e);
      })(i).reduce(function (t, n, i, l) {
        var f, p;
        return (
          r.chars &&
            (p = (function (t) {
              var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
              return (t = U(t)) && u(t) && !e && V(t) ? q(t) : t.split(e);
            })(n).map(function (t) {
              var n = X(o, { class: "".concat(e.splitClass, " ").concat(e.charClass), style: "display: inline-block;", children: t });
              return j(n, "isChar", !0), (s = [].concat(a(s), [n])), n;
            })),
          r.words || r.lines
            ? (j((f = X(o, { class: "".concat(e.wordClass, " ").concat(e.splitClass), style: "display: inline-block; ".concat(r.words && e.absolute ? "position: relative;" : ""), children: r.chars ? p : n })), { isWord: !0, isWordStart: !0, isWordEnd: !0 }), c.appendChild(f))
            : p.forEach(function (t) {
                c.appendChild(t);
              }),
          i < l.length - 1 && c.append(" "),
          r.words ? t.concat(f) : t
        );
      }, [])),
      /\s$/.test(i) && c.append(" "),
      t.replaceWith(c),
      { words: n, chars: s }
    );
  }
  function G(t, e) {
    var n = t.nodeType,
      r = { words: [], chars: [] };
    if (!/(1|3|11)/.test(n)) return r;
    if (3 === n && /\S/.test(t.nodeValue)) return _(t, e);
    var o = g(t.childNodes);
    if (o.length && (j(t, "isSplit", !0), !C(t).isRoot)) {
      (t.style.display = "inline-block"), (t.style.position = "relative");
      var i = t.nextSibling,
        c = t.previousSibling,
        s = t.textContent || "",
        l = i ? i.textContent : " ",
        u = c ? c.textContent : " ";
      j(t, { isWordEnd: /\s$/.test(s) || /^\s/.test(l), isWordStart: /^\s/.test(s) || /\s$/.test(u) });
    }
    return o.reduce(function (t, n) {
      var r = G(n, e),
        o = r.words,
        i = r.chars;
      return { words: [].concat(a(t.words), a(o)), chars: [].concat(a(t.chars), a(i)) };
    }, r);
  }
  function J(t) {
    C(t).isWord
      ? (E(t), t.replaceWith.apply(t, a(t.childNodes)))
      : g(t.children).forEach(function (t) {
          return J(t);
        });
  }
  function K(t, e, n) {
    var r,
      o,
      a,
      c = d(e.types),
      s = e.tagName,
      l = t.getElementsByTagName("*"),
      u = [],
      f = [],
      p = null,
      h = [],
      y = t.parentElement,
      v = t.nextElementSibling,
      m = document.createDocumentFragment(),
      b = window.getComputedStyle(t),
      w = b.textAlign,
      O = 0.2 * parseFloat(b.fontSize);
    return (
      e.absolute && ((a = { left: t.offsetLeft, top: t.offsetTop, width: t.offsetWidth }), (o = t.offsetWidth), (r = t.offsetHeight), j(t, { cssWidth: t.style.width, cssHeight: t.style.height })),
      g(l).forEach(function (r) {
        var o = r.parentElement === t,
          a = (function (t, e, n, r) {
            if (!n.absolute) return { top: e ? t.offsetTop : null };
            var o = t.offsetParent,
              a = i(r, 2),
              c = a[0],
              s = a[1],
              l = 0,
              u = 0;
            if (o && o !== document.body) {
              var f = o.getBoundingClientRect();
              (l = f.x + c), (u = f.y + s);
            }
            var p = t.getBoundingClientRect(),
              d = p.width,
              h = p.height,
              y = p.x;
            return { width: d, height: h, top: p.y + s - u, left: y + c - l };
          })(r, o, e, n),
          s = a.width,
          l = a.height,
          d = a.top,
          h = a.left;
        /^br$/i.test(r.nodeName) || (c.lines && o && ((null === p || d - p >= O) && ((p = d), u.push((f = []))), f.push(r)), e.absolute && j(r, { top: d, left: h, width: s, height: l }));
      }),
      y && y.removeChild(t),
      c.lines &&
        ((h = u.map(function (t) {
          var n = X(s, { class: "".concat(e.splitClass, " ").concat(e.lineClass), style: "display: block; text-align: ".concat(w, "; width: 100%;") });
          j(n, "isLine", !0);
          var r = { height: 0, top: 1e4 };
          return (
            m.appendChild(n),
            t.forEach(function (t, e, o) {
              var i = C(t),
                a = i.isWordEnd,
                c = i.top,
                s = i.height,
                l = o[e + 1];
              (r.height = Math.max(r.height, s)), (r.top = Math.min(r.top, c)), n.appendChild(t), a && C(l).isWordStart && n.append(" ");
            }),
            e.absolute && j(n, { height: r.height, top: r.top }),
            n
          );
        })),
        c.words || J(m),
        t.replaceChildren(m)),
      e.absolute &&
        ((t.style.width = "".concat(t.style.width || o, "px")),
        (t.style.height = "".concat(r, "px")),
        g(l).forEach(function (t) {
          var e = C(t),
            n = e.isLine,
            r = e.top,
            o = e.left,
            i = e.width,
            c = e.height,
            s = C(t.parentElement),
            l = !n && s.isLine;
          (t.style.top = "".concat(l ? r - s.top : r, "px")), (t.style.left = "".concat(n ? a.left : o - (l ? a.left : 0), "px")), (t.style.height = "".concat(c, "px")), (t.style.width = "".concat(n ? a.width : i, "px")), (t.style.position = "absolute");
        })),
      y && (v ? y.insertBefore(t, v) : y.appendChild(t)),
      h
    );
  }
  var Q = l(Y, {});
  return (function () {
    function t(e, n) {
      !(function (t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
      })(this, t),
        (this.isSplit = !1),
        (this.settings = l(Q, p(n))),
        (this.elements = v(e)),
        this.split();
    }
    return (
      e(t, null, [
        {
          key: "clearData",
          value: function () {
            Object.keys(w).forEach(function (t) {
              delete w[t];
            });
          },
        },
        {
          key: "setDefaults",
          value: function (t) {
            return (Q = l(Q, p(t))), Y;
          },
        },
        {
          key: "revert",
          value: function (t) {
            v(t).forEach(function (t) {
              var e = C(t),
                n = e.isSplit,
                r = e.html,
                o = e.cssWidth,
                i = e.cssHeight;
              n && ((t.innerHTML = r), (t.style.width = o || ""), (t.style.height = i || ""), E(t));
            });
          },
        },
        {
          key: "create",
          value: function (e, n) {
            return new t(e, n);
          },
        },
        {
          key: "data",
          get: function () {
            return w;
          },
        },
        {
          key: "defaults",
          get: function () {
            return Q;
          },
          set: function (t) {
            Q = l(Q, p(t));
          },
        },
      ]),
      e(t, [
        {
          key: "split",
          value: function (t) {
            var e = this;
            this.revert(),
              this.elements.forEach(function (t) {
                j(t, "html", t.innerHTML);
              }),
              (this.lines = []),
              (this.words = []),
              (this.chars = []);
            var n = [window.pageXOffset, window.pageYOffset];
            void 0 !== t && (this.settings = l(this.settings, p(t)));
            var r = d(this.settings.types);
            r.none ||
              (this.elements.forEach(function (t) {
                j(t, "isRoot", !0);
                var n = G(t, e.settings),
                  r = n.words,
                  o = n.chars;
                (e.words = [].concat(a(e.words), a(r))), (e.chars = [].concat(a(e.chars), a(o)));
              }),
              this.elements.forEach(function (t) {
                if (r.lines || e.settings.absolute) {
                  var o = K(t, e.settings, n);
                  e.lines = [].concat(a(e.lines), a(o));
                }
              }),
              (this.isSplit = !0),
              window.scrollTo(n[0], n[1]),
              m(w).forEach(function (t) {
                var e = i(t, 2),
                  n = e[0],
                  r = e[1],
                  o = r.isRoot,
                  a = r.isSplit;
                (o && a) || ((w[n] = null), delete w[n]);
              }));
          },
        },
        {
          key: "revert",
          value: function () {
            this.isSplit && ((this.lines = null), (this.words = null), (this.chars = null), (this.isSplit = !1)), t.revert(this.elements);
          },
        },
      ]),
      t
    );
  })();
});

/**
 * Swiper 11.0.5
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2023 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: November 22, 2023
 */

var Swiper=function(){"use strict";function e(e){return null!==e&&"object"==typeof e&&"constructor"in e&&e.constructor===Object}function t(s,a){void 0===s&&(s={}),void 0===a&&(a={}),Object.keys(a).forEach((i=>{void 0===s[i]?s[i]=a[i]:e(a[i])&&e(s[i])&&Object.keys(a[i]).length>0&&t(s[i],a[i])}))}const s={body:{},addEventListener(){},removeEventListener(){},activeElement:{blur(){},nodeName:""},querySelector:()=>null,querySelectorAll:()=>[],getElementById:()=>null,createEvent:()=>({initEvent(){}}),createElement:()=>({children:[],childNodes:[],style:{},setAttribute(){},getElementsByTagName:()=>[]}),createElementNS:()=>({}),importNode:()=>null,location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""}};function a(){const e="undefined"!=typeof document?document:{};return t(e,s),e}const i={document:s,navigator:{userAgent:""},location:{hash:"",host:"",hostname:"",href:"",origin:"",pathname:"",protocol:"",search:""},history:{replaceState(){},pushState(){},go(){},back(){}},CustomEvent:function(){return this},addEventListener(){},removeEventListener(){},getComputedStyle:()=>({getPropertyValue:()=>""}),Image(){},Date(){},screen:{},setTimeout(){},clearTimeout(){},matchMedia:()=>({}),requestAnimationFrame:e=>"undefined"==typeof setTimeout?(e(),null):setTimeout(e,0),cancelAnimationFrame(e){"undefined"!=typeof setTimeout&&clearTimeout(e)}};function r(){const e="undefined"!=typeof window?window:{};return t(e,i),e}function n(e){return void 0===e&&(e=""),e.trim().split(" ").filter((e=>!!e.trim()))}function l(e,t){return void 0===t&&(t=0),setTimeout(e,t)}function o(){return Date.now()}function d(e,t){void 0===t&&(t="x");const s=r();let a,i,n;const l=function(e){const t=r();let s;return t.getComputedStyle&&(s=t.getComputedStyle(e,null)),!s&&e.currentStyle&&(s=e.currentStyle),s||(s=e.style),s}(e);return s.WebKitCSSMatrix?(i=l.transform||l.webkitTransform,i.split(",").length>6&&(i=i.split(", ").map((e=>e.replace(",","."))).join(", ")),n=new s.WebKitCSSMatrix("none"===i?"":i)):(n=l.MozTransform||l.OTransform||l.MsTransform||l.msTransform||l.transform||l.getPropertyValue("transform").replace("translate(","matrix(1, 0, 0, 1,"),a=n.toString().split(",")),"x"===t&&(i=s.WebKitCSSMatrix?n.m41:16===a.length?parseFloat(a[12]):parseFloat(a[4])),"y"===t&&(i=s.WebKitCSSMatrix?n.m42:16===a.length?parseFloat(a[13]):parseFloat(a[5])),i||0}function c(e){return"object"==typeof e&&null!==e&&e.constructor&&"Object"===Object.prototype.toString.call(e).slice(8,-1)}function p(){const e=Object(arguments.length<=0?void 0:arguments[0]),t=["__proto__","constructor","prototype"];for(let a=1;a<arguments.length;a+=1){const i=a<0||arguments.length<=a?void 0:arguments[a];if(null!=i&&(s=i,!("undefined"!=typeof window&&void 0!==window.HTMLElement?s instanceof HTMLElement:s&&(1===s.nodeType||11===s.nodeType)))){const s=Object.keys(Object(i)).filter((e=>t.indexOf(e)<0));for(let t=0,a=s.length;t<a;t+=1){const a=s[t],r=Object.getOwnPropertyDescriptor(i,a);void 0!==r&&r.enumerable&&(c(e[a])&&c(i[a])?i[a].__swiper__?e[a]=i[a]:p(e[a],i[a]):!c(e[a])&&c(i[a])?(e[a]={},i[a].__swiper__?e[a]=i[a]:p(e[a],i[a])):e[a]=i[a])}}}var s;return e}function u(e,t,s){e.style.setProperty(t,s)}function m(e){let{swiper:t,targetPosition:s,side:a}=e;const i=r(),n=-t.translate;let l,o=null;const d=t.params.speed;t.wrapperEl.style.scrollSnapType="none",i.cancelAnimationFrame(t.cssModeFrameID);const c=s>n?"next":"prev",p=(e,t)=>"next"===c&&e>=t||"prev"===c&&e<=t,u=()=>{l=(new Date).getTime(),null===o&&(o=l);const e=Math.max(Math.min((l-o)/d,1),0),r=.5-Math.cos(e*Math.PI)/2;let c=n+r*(s-n);if(p(c,s)&&(c=s),t.wrapperEl.scrollTo({[a]:c}),p(c,s))return t.wrapperEl.style.overflow="hidden",t.wrapperEl.style.scrollSnapType="",setTimeout((()=>{t.wrapperEl.style.overflow="",t.wrapperEl.scrollTo({[a]:c})})),void i.cancelAnimationFrame(t.cssModeFrameID);t.cssModeFrameID=i.requestAnimationFrame(u)};u()}function h(e){return e.querySelector(".swiper-slide-transform")||e.shadowRoot&&e.shadowRoot.querySelector(".swiper-slide-transform")||e}function f(e,t){return void 0===t&&(t=""),[...e.children].filter((e=>e.matches(t)))}function g(e){try{return void console.warn(e)}catch(e){}}function v(e,t){void 0===t&&(t=[]);const s=document.createElement(e);return s.classList.add(...Array.isArray(t)?t:n(t)),s}function w(e){const t=r(),s=a(),i=e.getBoundingClientRect(),n=s.body,l=e.clientTop||n.clientTop||0,o=e.clientLeft||n.clientLeft||0,d=e===t?t.scrollY:e.scrollTop,c=e===t?t.scrollX:e.scrollLeft;return{top:i.top+d-l,left:i.left+c-o}}function b(e,t){return r().getComputedStyle(e,null).getPropertyValue(t)}function y(e){let t,s=e;if(s){for(t=0;null!==(s=s.previousSibling);)1===s.nodeType&&(t+=1);return t}}function E(e,t){const s=[];let a=e.parentElement;for(;a;)t?a.matches(t)&&s.push(a):s.push(a),a=a.parentElement;return s}function x(e,t){t&&e.addEventListener("transitionend",(function s(a){a.target===e&&(t.call(e,a),e.removeEventListener("transitionend",s))}))}function S(e,t,s){const a=r();return s?e["width"===t?"offsetWidth":"offsetHeight"]+parseFloat(a.getComputedStyle(e,null).getPropertyValue("width"===t?"margin-right":"margin-top"))+parseFloat(a.getComputedStyle(e,null).getPropertyValue("width"===t?"margin-left":"margin-bottom")):e.offsetWidth}let T,M,C;function P(){return T||(T=function(){const e=r(),t=a();return{smoothScroll:t.documentElement&&t.documentElement.style&&"scrollBehavior"in t.documentElement.style,touch:!!("ontouchstart"in e||e.DocumentTouch&&t instanceof e.DocumentTouch)}}()),T}function L(e){return void 0===e&&(e={}),M||(M=function(e){let{userAgent:t}=void 0===e?{}:e;const s=P(),a=r(),i=a.navigator.platform,n=t||a.navigator.userAgent,l={ios:!1,android:!1},o=a.screen.width,d=a.screen.height,c=n.match(/(Android);?[\s\/]+([\d.]+)?/);let p=n.match(/(iPad).*OS\s([\d_]+)/);const u=n.match(/(iPod)(.*OS\s([\d_]+))?/),m=!p&&n.match(/(iPhone\sOS|iOS)\s([\d_]+)/),h="Win32"===i;let f="MacIntel"===i;return!p&&f&&s.touch&&["1024x1366","1366x1024","834x1194","1194x834","834x1112","1112x834","768x1024","1024x768","820x1180","1180x820","810x1080","1080x810"].indexOf(`${o}x${d}`)>=0&&(p=n.match(/(Version)\/([\d.]+)/),p||(p=[0,1,"13_0_0"]),f=!1),c&&!h&&(l.os="android",l.android=!0),(p||m||u)&&(l.os="ios",l.ios=!0),l}(e)),M}function A(){return C||(C=function(){const e=r();let t=!1;function s(){const t=e.navigator.userAgent.toLowerCase();return t.indexOf("safari")>=0&&t.indexOf("chrome")<0&&t.indexOf("android")<0}if(s()){const s=String(e.navigator.userAgent);if(s.includes("Version/")){const[e,a]=s.split("Version/")[1].split(" ")[0].split(".").map((e=>Number(e)));t=e<16||16===e&&a<2}}return{isSafari:t||s(),needPerspectiveFix:t,isWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(e.navigator.userAgent)}}()),C}var I={on(e,t,s){const a=this;if(!a.eventsListeners||a.destroyed)return a;if("function"!=typeof t)return a;const i=s?"unshift":"push";return e.split(" ").forEach((e=>{a.eventsListeners[e]||(a.eventsListeners[e]=[]),a.eventsListeners[e][i](t)})),a},once(e,t,s){const a=this;if(!a.eventsListeners||a.destroyed)return a;if("function"!=typeof t)return a;function i(){a.off(e,i),i.__emitterProxy&&delete i.__emitterProxy;for(var s=arguments.length,r=new Array(s),n=0;n<s;n++)r[n]=arguments[n];t.apply(a,r)}return i.__emitterProxy=t,a.on(e,i,s)},onAny(e,t){const s=this;if(!s.eventsListeners||s.destroyed)return s;if("function"!=typeof e)return s;const a=t?"unshift":"push";return s.eventsAnyListeners.indexOf(e)<0&&s.eventsAnyListeners[a](e),s},offAny(e){const t=this;if(!t.eventsListeners||t.destroyed)return t;if(!t.eventsAnyListeners)return t;const s=t.eventsAnyListeners.indexOf(e);return s>=0&&t.eventsAnyListeners.splice(s,1),t},off(e,t){const s=this;return!s.eventsListeners||s.destroyed?s:s.eventsListeners?(e.split(" ").forEach((e=>{void 0===t?s.eventsListeners[e]=[]:s.eventsListeners[e]&&s.eventsListeners[e].forEach(((a,i)=>{(a===t||a.__emitterProxy&&a.__emitterProxy===t)&&s.eventsListeners[e].splice(i,1)}))})),s):s},emit(){const e=this;if(!e.eventsListeners||e.destroyed)return e;if(!e.eventsListeners)return e;let t,s,a;for(var i=arguments.length,r=new Array(i),n=0;n<i;n++)r[n]=arguments[n];"string"==typeof r[0]||Array.isArray(r[0])?(t=r[0],s=r.slice(1,r.length),a=e):(t=r[0].events,s=r[0].data,a=r[0].context||e),s.unshift(a);return(Array.isArray(t)?t:t.split(" ")).forEach((t=>{e.eventsAnyListeners&&e.eventsAnyListeners.length&&e.eventsAnyListeners.forEach((e=>{e.apply(a,[t,...s])})),e.eventsListeners&&e.eventsListeners[t]&&e.eventsListeners[t].forEach((e=>{e.apply(a,s)}))})),e}};const z=(e,t)=>{if(!e||e.destroyed||!e.params)return;const s=t.closest(e.isElement?"swiper-slide":`.${e.params.slideClass}`);if(s){let t=s.querySelector(`.${e.params.lazyPreloaderClass}`);!t&&e.isElement&&(s.shadowRoot?t=s.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`):requestAnimationFrame((()=>{s.shadowRoot&&(t=s.shadowRoot.querySelector(`.${e.params.lazyPreloaderClass}`),t&&t.remove())}))),t&&t.remove()}},$=(e,t)=>{if(!e.slides[t])return;const s=e.slides[t].querySelector('[loading="lazy"]');s&&s.removeAttribute("loading")},k=e=>{if(!e||e.destroyed||!e.params)return;let t=e.params.lazyPreloadPrevNext;const s=e.slides.length;if(!s||!t||t<0)return;t=Math.min(t,s);const a="auto"===e.params.slidesPerView?e.slidesPerViewDynamic():Math.ceil(e.params.slidesPerView),i=e.activeIndex;if(e.params.grid&&e.params.grid.rows>1){const s=i,r=[s-t];return r.push(...Array.from({length:t}).map(((e,t)=>s+a+t))),void e.slides.forEach(((t,s)=>{r.includes(t.column)&&$(e,s)}))}const r=i+a-1;if(e.params.rewind||e.params.loop)for(let a=i-t;a<=r+t;a+=1){const t=(a%s+s)%s;(t<i||t>r)&&$(e,t)}else for(let a=Math.max(i-t,0);a<=Math.min(r+t,s-1);a+=1)a!==i&&(a>r||a<i)&&$(e,a)};var O={updateSize:function(){const e=this;let t,s;const a=e.el;t=void 0!==e.params.width&&null!==e.params.width?e.params.width:a.clientWidth,s=void 0!==e.params.height&&null!==e.params.height?e.params.height:a.clientHeight,0===t&&e.isHorizontal()||0===s&&e.isVertical()||(t=t-parseInt(b(a,"padding-left")||0,10)-parseInt(b(a,"padding-right")||0,10),s=s-parseInt(b(a,"padding-top")||0,10)-parseInt(b(a,"padding-bottom")||0,10),Number.isNaN(t)&&(t=0),Number.isNaN(s)&&(s=0),Object.assign(e,{width:t,height:s,size:e.isHorizontal()?t:s}))},updateSlides:function(){const e=this;function t(t,s){return parseFloat(t.getPropertyValue(e.getDirectionLabel(s))||0)}const s=e.params,{wrapperEl:a,slidesEl:i,size:r,rtlTranslate:n,wrongRTL:l}=e,o=e.virtual&&s.virtual.enabled,d=o?e.virtual.slides.length:e.slides.length,c=f(i,`.${e.params.slideClass}, swiper-slide`),p=o?e.virtual.slides.length:c.length;let m=[];const h=[],g=[];let v=s.slidesOffsetBefore;"function"==typeof v&&(v=s.slidesOffsetBefore.call(e));let w=s.slidesOffsetAfter;"function"==typeof w&&(w=s.slidesOffsetAfter.call(e));const y=e.snapGrid.length,E=e.slidesGrid.length;let x=s.spaceBetween,T=-v,M=0,C=0;if(void 0===r)return;"string"==typeof x&&x.indexOf("%")>=0?x=parseFloat(x.replace("%",""))/100*r:"string"==typeof x&&(x=parseFloat(x)),e.virtualSize=-x,c.forEach((e=>{n?e.style.marginLeft="":e.style.marginRight="",e.style.marginBottom="",e.style.marginTop=""})),s.centeredSlides&&s.cssMode&&(u(a,"--swiper-centered-offset-before",""),u(a,"--swiper-centered-offset-after",""));const P=s.grid&&s.grid.rows>1&&e.grid;let L;P?e.grid.initSlides(c):e.grid&&e.grid.unsetSlides();const A="auto"===s.slidesPerView&&s.breakpoints&&Object.keys(s.breakpoints).filter((e=>void 0!==s.breakpoints[e].slidesPerView)).length>0;for(let a=0;a<p;a+=1){let i;if(L=0,c[a]&&(i=c[a]),P&&e.grid.updateSlide(a,i,c),!c[a]||"none"!==b(i,"display")){if("auto"===s.slidesPerView){A&&(c[a].style[e.getDirectionLabel("width")]="");const r=getComputedStyle(i),n=i.style.transform,l=i.style.webkitTransform;if(n&&(i.style.transform="none"),l&&(i.style.webkitTransform="none"),s.roundLengths)L=e.isHorizontal()?S(i,"width",!0):S(i,"height",!0);else{const e=t(r,"width"),s=t(r,"padding-left"),a=t(r,"padding-right"),n=t(r,"margin-left"),l=t(r,"margin-right"),o=r.getPropertyValue("box-sizing");if(o&&"border-box"===o)L=e+n+l;else{const{clientWidth:t,offsetWidth:r}=i;L=e+s+a+n+l+(r-t)}}n&&(i.style.transform=n),l&&(i.style.webkitTransform=l),s.roundLengths&&(L=Math.floor(L))}else L=(r-(s.slidesPerView-1)*x)/s.slidesPerView,s.roundLengths&&(L=Math.floor(L)),c[a]&&(c[a].style[e.getDirectionLabel("width")]=`${L}px`);c[a]&&(c[a].swiperSlideSize=L),g.push(L),s.centeredSlides?(T=T+L/2+M/2+x,0===M&&0!==a&&(T=T-r/2-x),0===a&&(T=T-r/2-x),Math.abs(T)<.001&&(T=0),s.roundLengths&&(T=Math.floor(T)),C%s.slidesPerGroup==0&&m.push(T),h.push(T)):(s.roundLengths&&(T=Math.floor(T)),(C-Math.min(e.params.slidesPerGroupSkip,C))%e.params.slidesPerGroup==0&&m.push(T),h.push(T),T=T+L+x),e.virtualSize+=L+x,M=L,C+=1}}if(e.virtualSize=Math.max(e.virtualSize,r)+w,n&&l&&("slide"===s.effect||"coverflow"===s.effect)&&(a.style.width=`${e.virtualSize+x}px`),s.setWrapperSize&&(a.style[e.getDirectionLabel("width")]=`${e.virtualSize+x}px`),P&&e.grid.updateWrapperSize(L,m),!s.centeredSlides){const t=[];for(let a=0;a<m.length;a+=1){let i=m[a];s.roundLengths&&(i=Math.floor(i)),m[a]<=e.virtualSize-r&&t.push(i)}m=t,Math.floor(e.virtualSize-r)-Math.floor(m[m.length-1])>1&&m.push(e.virtualSize-r)}if(o&&s.loop){const t=g[0]+x;if(s.slidesPerGroup>1){const a=Math.ceil((e.virtual.slidesBefore+e.virtual.slidesAfter)/s.slidesPerGroup),i=t*s.slidesPerGroup;for(let e=0;e<a;e+=1)m.push(m[m.length-1]+i)}for(let a=0;a<e.virtual.slidesBefore+e.virtual.slidesAfter;a+=1)1===s.slidesPerGroup&&m.push(m[m.length-1]+t),h.push(h[h.length-1]+t),e.virtualSize+=t}if(0===m.length&&(m=[0]),0!==x){const t=e.isHorizontal()&&n?"marginLeft":e.getDirectionLabel("marginRight");c.filter(((e,t)=>!(s.cssMode&&!s.loop)||t!==c.length-1)).forEach((e=>{e.style[t]=`${x}px`}))}if(s.centeredSlides&&s.centeredSlidesBounds){let e=0;g.forEach((t=>{e+=t+(x||0)})),e-=x;const t=e-r;m=m.map((e=>e<=0?-v:e>t?t+w:e))}if(s.centerInsufficientSlides){let e=0;if(g.forEach((t=>{e+=t+(x||0)})),e-=x,e<r){const t=(r-e)/2;m.forEach(((e,s)=>{m[s]=e-t})),h.forEach(((e,s)=>{h[s]=e+t}))}}if(Object.assign(e,{slides:c,snapGrid:m,slidesGrid:h,slidesSizesGrid:g}),s.centeredSlides&&s.cssMode&&!s.centeredSlidesBounds){u(a,"--swiper-centered-offset-before",-m[0]+"px"),u(a,"--swiper-centered-offset-after",e.size/2-g[g.length-1]/2+"px");const t=-e.snapGrid[0],s=-e.slidesGrid[0];e.snapGrid=e.snapGrid.map((e=>e+t)),e.slidesGrid=e.slidesGrid.map((e=>e+s))}if(p!==d&&e.emit("slidesLengthChange"),m.length!==y&&(e.params.watchOverflow&&e.checkOverflow(),e.emit("snapGridLengthChange")),h.length!==E&&e.emit("slidesGridLengthChange"),s.watchSlidesProgress&&e.updateSlidesOffset(),e.emit("slidesUpdated"),!(o||s.cssMode||"slide"!==s.effect&&"fade"!==s.effect)){const t=`${s.containerModifierClass}backface-hidden`,a=e.el.classList.contains(t);p<=s.maxBackfaceHiddenSlides?a||e.el.classList.add(t):a&&e.el.classList.remove(t)}},updateAutoHeight:function(e){const t=this,s=[],a=t.virtual&&t.params.virtual.enabled;let i,r=0;"number"==typeof e?t.setTransition(e):!0===e&&t.setTransition(t.params.speed);const n=e=>a?t.slides[t.getSlideIndexByData(e)]:t.slides[e];if("auto"!==t.params.slidesPerView&&t.params.slidesPerView>1)if(t.params.centeredSlides)(t.visibleSlides||[]).forEach((e=>{s.push(e)}));else for(i=0;i<Math.ceil(t.params.slidesPerView);i+=1){const e=t.activeIndex+i;if(e>t.slides.length&&!a)break;s.push(n(e))}else s.push(n(t.activeIndex));for(i=0;i<s.length;i+=1)if(void 0!==s[i]){const e=s[i].offsetHeight;r=e>r?e:r}(r||0===r)&&(t.wrapperEl.style.height=`${r}px`)},updateSlidesOffset:function(){const e=this,t=e.slides,s=e.isElement?e.isHorizontal()?e.wrapperEl.offsetLeft:e.wrapperEl.offsetTop:0;for(let a=0;a<t.length;a+=1)t[a].swiperSlideOffset=(e.isHorizontal()?t[a].offsetLeft:t[a].offsetTop)-s-e.cssOverflowAdjustment()},updateSlidesProgress:function(e){void 0===e&&(e=this&&this.translate||0);const t=this,s=t.params,{slides:a,rtlTranslate:i,snapGrid:r}=t;if(0===a.length)return;void 0===a[0].swiperSlideOffset&&t.updateSlidesOffset();let n=-e;i&&(n=e),a.forEach((e=>{e.classList.remove(s.slideVisibleClass,s.slideFullyVisibleClass)})),t.visibleSlidesIndexes=[],t.visibleSlides=[];let l=s.spaceBetween;"string"==typeof l&&l.indexOf("%")>=0?l=parseFloat(l.replace("%",""))/100*t.size:"string"==typeof l&&(l=parseFloat(l));for(let e=0;e<a.length;e+=1){const o=a[e];let d=o.swiperSlideOffset;s.cssMode&&s.centeredSlides&&(d-=a[0].swiperSlideOffset);const c=(n+(s.centeredSlides?t.minTranslate():0)-d)/(o.swiperSlideSize+l),p=(n-r[0]+(s.centeredSlides?t.minTranslate():0)-d)/(o.swiperSlideSize+l),u=-(n-d),m=u+t.slidesSizesGrid[e],h=u>=0&&u<=t.size-t.slidesSizesGrid[e];(u>=0&&u<t.size-1||m>1&&m<=t.size||u<=0&&m>=t.size)&&(t.visibleSlides.push(o),t.visibleSlidesIndexes.push(e),a[e].classList.add(s.slideVisibleClass)),h&&a[e].classList.add(s.slideFullyVisibleClass),o.progress=i?-c:c,o.originalProgress=i?-p:p}},updateProgress:function(e){const t=this;if(void 0===e){const s=t.rtlTranslate?-1:1;e=t&&t.translate&&t.translate*s||0}const s=t.params,a=t.maxTranslate()-t.minTranslate();let{progress:i,isBeginning:r,isEnd:n,progressLoop:l}=t;const o=r,d=n;if(0===a)i=0,r=!0,n=!0;else{i=(e-t.minTranslate())/a;const s=Math.abs(e-t.minTranslate())<1,l=Math.abs(e-t.maxTranslate())<1;r=s||i<=0,n=l||i>=1,s&&(i=0),l&&(i=1)}if(s.loop){const s=t.getSlideIndexByData(0),a=t.getSlideIndexByData(t.slides.length-1),i=t.slidesGrid[s],r=t.slidesGrid[a],n=t.slidesGrid[t.slidesGrid.length-1],o=Math.abs(e);l=o>=i?(o-i)/n:(o+n-r)/n,l>1&&(l-=1)}Object.assign(t,{progress:i,progressLoop:l,isBeginning:r,isEnd:n}),(s.watchSlidesProgress||s.centeredSlides&&s.autoHeight)&&t.updateSlidesProgress(e),r&&!o&&t.emit("reachBeginning toEdge"),n&&!d&&t.emit("reachEnd toEdge"),(o&&!r||d&&!n)&&t.emit("fromEdge"),t.emit("progress",i)},updateSlidesClasses:function(){const e=this,{slides:t,params:s,slidesEl:a,activeIndex:i}=e,r=e.virtual&&s.virtual.enabled,n=e.grid&&s.grid&&s.grid.rows>1,l=e=>f(a,`.${s.slideClass}${e}, swiper-slide${e}`)[0];let o,d,c;if(t.forEach((e=>{e.classList.remove(s.slideActiveClass,s.slideNextClass,s.slidePrevClass)})),r)if(s.loop){let t=i-e.virtual.slidesBefore;t<0&&(t=e.virtual.slides.length+t),t>=e.virtual.slides.length&&(t-=e.virtual.slides.length),o=l(`[data-swiper-slide-index="${t}"]`)}else o=l(`[data-swiper-slide-index="${i}"]`);else n?(o=t.filter((e=>e.column===i))[0],c=t.filter((e=>e.column===i+1))[0],d=t.filter((e=>e.column===i-1))[0]):o=t[i];o&&(o.classList.add(s.slideActiveClass),n?(c&&c.classList.add(s.slideNextClass),d&&d.classList.add(s.slidePrevClass)):(c=function(e,t){const s=[];for(;e.nextElementSibling;){const a=e.nextElementSibling;t?a.matches(t)&&s.push(a):s.push(a),e=a}return s}(o,`.${s.slideClass}, swiper-slide`)[0],s.loop&&!c&&(c=t[0]),c&&c.classList.add(s.slideNextClass),d=function(e,t){const s=[];for(;e.previousElementSibling;){const a=e.previousElementSibling;t?a.matches(t)&&s.push(a):s.push(a),e=a}return s}(o,`.${s.slideClass}, swiper-slide`)[0],s.loop&&0===!d&&(d=t[t.length-1]),d&&d.classList.add(s.slidePrevClass))),e.emitSlidesClasses()},updateActiveIndex:function(e){const t=this,s=t.rtlTranslate?t.translate:-t.translate,{snapGrid:a,params:i,activeIndex:r,realIndex:n,snapIndex:l}=t;let o,d=e;const c=e=>{let s=e-t.virtual.slidesBefore;return s<0&&(s=t.virtual.slides.length+s),s>=t.virtual.slides.length&&(s-=t.virtual.slides.length),s};if(void 0===d&&(d=function(e){const{slidesGrid:t,params:s}=e,a=e.rtlTranslate?e.translate:-e.translate;let i;for(let e=0;e<t.length;e+=1)void 0!==t[e+1]?a>=t[e]&&a<t[e+1]-(t[e+1]-t[e])/2?i=e:a>=t[e]&&a<t[e+1]&&(i=e+1):a>=t[e]&&(i=e);return s.normalizeSlideIndex&&(i<0||void 0===i)&&(i=0),i}(t)),a.indexOf(s)>=0)o=a.indexOf(s);else{const e=Math.min(i.slidesPerGroupSkip,d);o=e+Math.floor((d-e)/i.slidesPerGroup)}if(o>=a.length&&(o=a.length-1),d===r&&!t.params.loop)return void(o!==l&&(t.snapIndex=o,t.emit("snapIndexChange")));if(d===r&&t.params.loop&&t.virtual&&t.params.virtual.enabled)return void(t.realIndex=c(d));const p=t.grid&&i.grid&&i.grid.rows>1;let u;if(t.virtual&&i.virtual.enabled&&i.loop)u=c(d);else if(p){const e=t.slides.filter((e=>e.column===d))[0];let s=parseInt(e.getAttribute("data-swiper-slide-index"),10);Number.isNaN(s)&&(s=Math.max(t.slides.indexOf(e),0)),u=Math.floor(s/i.grid.rows)}else if(t.slides[d]){const e=t.slides[d].getAttribute("data-swiper-slide-index");u=e?parseInt(e,10):d}else u=d;Object.assign(t,{previousSnapIndex:l,snapIndex:o,previousRealIndex:n,realIndex:u,previousIndex:r,activeIndex:d}),t.initialized&&k(t),t.emit("activeIndexChange"),t.emit("snapIndexChange"),(t.initialized||t.params.runCallbacksOnInit)&&(n!==u&&t.emit("realIndexChange"),t.emit("slideChange"))},updateClickedSlide:function(e,t){const s=this,a=s.params;let i=e.closest(`.${a.slideClass}, swiper-slide`);!i&&s.isElement&&t&&t.length>1&&t.includes(e)&&[...t.slice(t.indexOf(e)+1,t.length)].forEach((e=>{!i&&e.matches&&e.matches(`.${a.slideClass}, swiper-slide`)&&(i=e)}));let r,n=!1;if(i)for(let e=0;e<s.slides.length;e+=1)if(s.slides[e]===i){n=!0,r=e;break}if(!i||!n)return s.clickedSlide=void 0,void(s.clickedIndex=void 0);s.clickedSlide=i,s.virtual&&s.params.virtual.enabled?s.clickedIndex=parseInt(i.getAttribute("data-swiper-slide-index"),10):s.clickedIndex=r,a.slideToClickedSlide&&void 0!==s.clickedIndex&&s.clickedIndex!==s.activeIndex&&s.slideToClickedSlide()}};var D={getTranslate:function(e){void 0===e&&(e=this.isHorizontal()?"x":"y");const{params:t,rtlTranslate:s,translate:a,wrapperEl:i}=this;if(t.virtualTranslate)return s?-a:a;if(t.cssMode)return a;let r=d(i,e);return r+=this.cssOverflowAdjustment(),s&&(r=-r),r||0},setTranslate:function(e,t){const s=this,{rtlTranslate:a,params:i,wrapperEl:r,progress:n}=s;let l,o=0,d=0;s.isHorizontal()?o=a?-e:e:d=e,i.roundLengths&&(o=Math.floor(o),d=Math.floor(d)),s.previousTranslate=s.translate,s.translate=s.isHorizontal()?o:d,i.cssMode?r[s.isHorizontal()?"scrollLeft":"scrollTop"]=s.isHorizontal()?-o:-d:i.virtualTranslate||(s.isHorizontal()?o-=s.cssOverflowAdjustment():d-=s.cssOverflowAdjustment(),r.style.transform=`translate3d(${o}px, ${d}px, 0px)`);const c=s.maxTranslate()-s.minTranslate();l=0===c?0:(e-s.minTranslate())/c,l!==n&&s.updateProgress(e),s.emit("setTranslate",s.translate,t)},minTranslate:function(){return-this.snapGrid[0]},maxTranslate:function(){return-this.snapGrid[this.snapGrid.length-1]},translateTo:function(e,t,s,a,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===s&&(s=!0),void 0===a&&(a=!0);const r=this,{params:n,wrapperEl:l}=r;if(r.animating&&n.preventInteractionOnTransition)return!1;const o=r.minTranslate(),d=r.maxTranslate();let c;if(c=a&&e>o?o:a&&e<d?d:e,r.updateProgress(c),n.cssMode){const e=r.isHorizontal();if(0===t)l[e?"scrollLeft":"scrollTop"]=-c;else{if(!r.support.smoothScroll)return m({swiper:r,targetPosition:-c,side:e?"left":"top"}),!0;l.scrollTo({[e?"left":"top"]:-c,behavior:"smooth"})}return!0}return 0===t?(r.setTransition(0),r.setTranslate(c),s&&(r.emit("beforeTransitionStart",t,i),r.emit("transitionEnd"))):(r.setTransition(t),r.setTranslate(c),s&&(r.emit("beforeTransitionStart",t,i),r.emit("transitionStart")),r.animating||(r.animating=!0,r.onTranslateToWrapperTransitionEnd||(r.onTranslateToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.wrapperEl.removeEventListener("transitionend",r.onTranslateToWrapperTransitionEnd),r.onTranslateToWrapperTransitionEnd=null,delete r.onTranslateToWrapperTransitionEnd,s&&r.emit("transitionEnd"))}),r.wrapperEl.addEventListener("transitionend",r.onTranslateToWrapperTransitionEnd))),!0}};function G(e){let{swiper:t,runCallbacks:s,direction:a,step:i}=e;const{activeIndex:r,previousIndex:n}=t;let l=a;if(l||(l=r>n?"next":r<n?"prev":"reset"),t.emit(`transition${i}`),s&&r!==n){if("reset"===l)return void t.emit(`slideResetTransition${i}`);t.emit(`slideChangeTransition${i}`),"next"===l?t.emit(`slideNextTransition${i}`):t.emit(`slidePrevTransition${i}`)}}var X={slideTo:function(e,t,s,a,i){void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===s&&(s=!0),"string"==typeof e&&(e=parseInt(e,10));const r=this;let n=e;n<0&&(n=0);const{params:l,snapGrid:o,slidesGrid:d,previousIndex:c,activeIndex:p,rtlTranslate:u,wrapperEl:h,enabled:f}=r;if(r.animating&&l.preventInteractionOnTransition||!f&&!a&&!i)return!1;const g=Math.min(r.params.slidesPerGroupSkip,n);let v=g+Math.floor((n-g)/r.params.slidesPerGroup);v>=o.length&&(v=o.length-1);const w=-o[v];if(l.normalizeSlideIndex)for(let e=0;e<d.length;e+=1){const t=-Math.floor(100*w),s=Math.floor(100*d[e]),a=Math.floor(100*d[e+1]);void 0!==d[e+1]?t>=s&&t<a-(a-s)/2?n=e:t>=s&&t<a&&(n=e+1):t>=s&&(n=e)}if(r.initialized&&n!==p){if(!r.allowSlideNext&&(u?w>r.translate&&w>r.minTranslate():w<r.translate&&w<r.minTranslate()))return!1;if(!r.allowSlidePrev&&w>r.translate&&w>r.maxTranslate()&&(p||0)!==n)return!1}let b;if(n!==(c||0)&&s&&r.emit("beforeSlideChangeStart"),r.updateProgress(w),b=n>p?"next":n<p?"prev":"reset",u&&-w===r.translate||!u&&w===r.translate)return r.updateActiveIndex(n),l.autoHeight&&r.updateAutoHeight(),r.updateSlidesClasses(),"slide"!==l.effect&&r.setTranslate(w),"reset"!==b&&(r.transitionStart(s,b),r.transitionEnd(s,b)),!1;if(l.cssMode){const e=r.isHorizontal(),s=u?w:-w;if(0===t){const t=r.virtual&&r.params.virtual.enabled;t&&(r.wrapperEl.style.scrollSnapType="none",r._immediateVirtual=!0),t&&!r._cssModeVirtualInitialSet&&r.params.initialSlide>0?(r._cssModeVirtualInitialSet=!0,requestAnimationFrame((()=>{h[e?"scrollLeft":"scrollTop"]=s}))):h[e?"scrollLeft":"scrollTop"]=s,t&&requestAnimationFrame((()=>{r.wrapperEl.style.scrollSnapType="",r._immediateVirtual=!1}))}else{if(!r.support.smoothScroll)return m({swiper:r,targetPosition:s,side:e?"left":"top"}),!0;h.scrollTo({[e?"left":"top"]:s,behavior:"smooth"})}return!0}return r.setTransition(t),r.setTranslate(w),r.updateActiveIndex(n),r.updateSlidesClasses(),r.emit("beforeTransitionStart",t,a),r.transitionStart(s,b),0===t?r.transitionEnd(s,b):r.animating||(r.animating=!0,r.onSlideToWrapperTransitionEnd||(r.onSlideToWrapperTransitionEnd=function(e){r&&!r.destroyed&&e.target===this&&(r.wrapperEl.removeEventListener("transitionend",r.onSlideToWrapperTransitionEnd),r.onSlideToWrapperTransitionEnd=null,delete r.onSlideToWrapperTransitionEnd,r.transitionEnd(s,b))}),r.wrapperEl.addEventListener("transitionend",r.onSlideToWrapperTransitionEnd)),!0},slideToLoop:function(e,t,s,a){if(void 0===e&&(e=0),void 0===t&&(t=this.params.speed),void 0===s&&(s=!0),"string"==typeof e){e=parseInt(e,10)}const i=this,r=i.grid&&i.params.grid&&i.params.grid.rows>1;let n=e;if(i.params.loop)if(i.virtual&&i.params.virtual.enabled)n+=i.virtual.slidesBefore;else{let e;if(r){const t=n*i.params.grid.rows;e=i.slides.filter((e=>1*e.getAttribute("data-swiper-slide-index")===t))[0].column}else e=i.getSlideIndexByData(n);const t=r?Math.ceil(i.slides.length/i.params.grid.rows):i.slides.length,{centeredSlides:s}=i.params;let a=i.params.slidesPerView;"auto"===a?a=i.slidesPerViewDynamic():(a=Math.ceil(parseFloat(i.params.slidesPerView,10)),s&&a%2==0&&(a+=1));let l=t-e<a;if(s&&(l=l||e<Math.ceil(a/2)),l){const a=s?e<i.activeIndex?"prev":"next":e-i.activeIndex-1<i.params.slidesPerView?"next":"prev";i.loopFix({direction:a,slideTo:!0,activeSlideIndex:"next"===a?e+1:e-t+1,slideRealIndex:"next"===a?i.realIndex:void 0})}if(r){const e=n*i.params.grid.rows;n=i.slides.filter((t=>1*t.getAttribute("data-swiper-slide-index")===e))[0].column}else n=i.getSlideIndexByData(n)}return requestAnimationFrame((()=>{i.slideTo(n,t,s,a)})),i},slideNext:function(e,t,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);const a=this,{enabled:i,params:r,animating:n}=a;if(!i)return a;let l=r.slidesPerGroup;"auto"===r.slidesPerView&&1===r.slidesPerGroup&&r.slidesPerGroupAuto&&(l=Math.max(a.slidesPerViewDynamic("current",!0),1));const o=a.activeIndex<r.slidesPerGroupSkip?1:l,d=a.virtual&&r.virtual.enabled;if(r.loop){if(n&&!d&&r.loopPreventsSliding)return!1;if(a.loopFix({direction:"next"}),a._clientLeft=a.wrapperEl.clientLeft,a.activeIndex===a.slides.length-1&&r.cssMode)return requestAnimationFrame((()=>{a.slideTo(a.activeIndex+o,e,t,s)})),!0}return r.rewind&&a.isEnd?a.slideTo(0,e,t,s):a.slideTo(a.activeIndex+o,e,t,s)},slidePrev:function(e,t,s){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0);const a=this,{params:i,snapGrid:r,slidesGrid:n,rtlTranslate:l,enabled:o,animating:d}=a;if(!o)return a;const c=a.virtual&&i.virtual.enabled;if(i.loop){if(d&&!c&&i.loopPreventsSliding)return!1;a.loopFix({direction:"prev"}),a._clientLeft=a.wrapperEl.clientLeft}function p(e){return e<0?-Math.floor(Math.abs(e)):Math.floor(e)}const u=p(l?a.translate:-a.translate),m=r.map((e=>p(e)));let h=r[m.indexOf(u)-1];if(void 0===h&&i.cssMode){let e;r.forEach(((t,s)=>{u>=t&&(e=s)})),void 0!==e&&(h=r[e>0?e-1:e])}let f=0;if(void 0!==h&&(f=n.indexOf(h),f<0&&(f=a.activeIndex-1),"auto"===i.slidesPerView&&1===i.slidesPerGroup&&i.slidesPerGroupAuto&&(f=f-a.slidesPerViewDynamic("previous",!0)+1,f=Math.max(f,0))),i.rewind&&a.isBeginning){const i=a.params.virtual&&a.params.virtual.enabled&&a.virtual?a.virtual.slides.length-1:a.slides.length-1;return a.slideTo(i,e,t,s)}return i.loop&&0===a.activeIndex&&i.cssMode?(requestAnimationFrame((()=>{a.slideTo(f,e,t,s)})),!0):a.slideTo(f,e,t,s)},slideReset:function(e,t,s){return void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),this.slideTo(this.activeIndex,e,t,s)},slideToClosest:function(e,t,s,a){void 0===e&&(e=this.params.speed),void 0===t&&(t=!0),void 0===a&&(a=.5);const i=this;let r=i.activeIndex;const n=Math.min(i.params.slidesPerGroupSkip,r),l=n+Math.floor((r-n)/i.params.slidesPerGroup),o=i.rtlTranslate?i.translate:-i.translate;if(o>=i.snapGrid[l]){const e=i.snapGrid[l];o-e>(i.snapGrid[l+1]-e)*a&&(r+=i.params.slidesPerGroup)}else{const e=i.snapGrid[l-1];o-e<=(i.snapGrid[l]-e)*a&&(r-=i.params.slidesPerGroup)}return r=Math.max(r,0),r=Math.min(r,i.slidesGrid.length-1),i.slideTo(r,e,t,s)},slideToClickedSlide:function(){const e=this,{params:t,slidesEl:s}=e,a="auto"===t.slidesPerView?e.slidesPerViewDynamic():t.slidesPerView;let i,r=e.clickedIndex;const n=e.isElement?"swiper-slide":`.${t.slideClass}`;if(t.loop){if(e.animating)return;i=parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"),10),t.centeredSlides?r<e.loopedSlides-a/2||r>e.slides.length-e.loopedSlides+a/2?(e.loopFix(),r=e.getSlideIndex(f(s,`${n}[data-swiper-slide-index="${i}"]`)[0]),l((()=>{e.slideTo(r)}))):e.slideTo(r):r>e.slides.length-a?(e.loopFix(),r=e.getSlideIndex(f(s,`${n}[data-swiper-slide-index="${i}"]`)[0]),l((()=>{e.slideTo(r)}))):e.slideTo(r)}else e.slideTo(r)}};var H={loopCreate:function(e){const t=this,{params:s,slidesEl:a}=t;if(!s.loop||t.virtual&&t.params.virtual.enabled)return;const i=()=>{f(a,`.${s.slideClass}, swiper-slide`).forEach(((e,t)=>{e.setAttribute("data-swiper-slide-index",t)}))},r=t.grid&&s.grid&&s.grid.rows>1,n=s.slidesPerGroup*(r?s.grid.rows:1),l=t.slides.length%n!=0,o=r&&t.slides.length%s.grid.rows!=0,d=e=>{for(let a=0;a<e;a+=1){const e=t.isElement?v("swiper-slide",[s.slideBlankClass]):v("div",[s.slideClass,s.slideBlankClass]);t.slidesEl.append(e)}};if(l){if(s.loopAddBlankSlides){d(n-t.slides.length%n),t.recalcSlides(),t.updateSlides()}else g("Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");i()}else if(o){if(s.loopAddBlankSlides){d(s.grid.rows-t.slides.length%s.grid.rows),t.recalcSlides(),t.updateSlides()}else g("Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)");i()}else i();t.loopFix({slideRealIndex:e,direction:s.centeredSlides?void 0:"next"})},loopFix:function(e){let{slideRealIndex:t,slideTo:s=!0,direction:a,setTranslate:i,activeSlideIndex:r,byController:n,byMousewheel:l}=void 0===e?{}:e;const o=this;if(!o.params.loop)return;o.emit("beforeLoopFix");const{slides:d,allowSlidePrev:c,allowSlideNext:p,slidesEl:u,params:m}=o,{centeredSlides:h}=m;if(o.allowSlidePrev=!0,o.allowSlideNext=!0,o.virtual&&m.virtual.enabled)return s&&(m.centeredSlides||0!==o.snapIndex?m.centeredSlides&&o.snapIndex<m.slidesPerView?o.slideTo(o.virtual.slides.length+o.snapIndex,0,!1,!0):o.snapIndex===o.snapGrid.length-1&&o.slideTo(o.virtual.slidesBefore,0,!1,!0):o.slideTo(o.virtual.slides.length,0,!1,!0)),o.allowSlidePrev=c,o.allowSlideNext=p,void o.emit("loopFix");let f=m.slidesPerView;"auto"===f?f=o.slidesPerViewDynamic():(f=Math.ceil(parseFloat(m.slidesPerView,10)),h&&f%2==0&&(f+=1));const v=m.slidesPerGroupAuto?f:m.slidesPerGroup;let w=v;w%v!=0&&(w+=v-w%v),w+=m.loopAdditionalSlides,o.loopedSlides=w;const b=o.grid&&m.grid&&m.grid.rows>1;d.length<f+w?g("Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"):b&&"row"===m.grid.fill&&g("Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`");const y=[],E=[];let x=o.activeIndex;void 0===r?r=o.getSlideIndex(d.filter((e=>e.classList.contains(m.slideActiveClass)))[0]):x=r;const S="next"===a||!a,T="prev"===a||!a;let M=0,C=0;const P=b?Math.ceil(d.length/m.grid.rows):d.length,L=(b?d[r].column:r)+(h&&void 0===i?-f/2+.5:0);if(L<w){M=Math.max(w-L,v);for(let e=0;e<w-L;e+=1){const t=e-Math.floor(e/P)*P;if(b){const e=P-t-1;for(let t=d.length-1;t>=0;t-=1)d[t].column===e&&y.push(t)}else y.push(P-t-1)}}else if(L+f>P-w){C=Math.max(L-(P-2*w),v);for(let e=0;e<C;e+=1){const t=e-Math.floor(e/P)*P;b?d.forEach(((e,s)=>{e.column===t&&E.push(s)})):E.push(t)}}if(o.__preventObserver__=!0,requestAnimationFrame((()=>{o.__preventObserver__=!1})),T&&y.forEach((e=>{d[e].swiperLoopMoveDOM=!0,u.prepend(d[e]),d[e].swiperLoopMoveDOM=!1})),S&&E.forEach((e=>{d[e].swiperLoopMoveDOM=!0,u.append(d[e]),d[e].swiperLoopMoveDOM=!1})),o.recalcSlides(),"auto"===m.slidesPerView?o.updateSlides():b&&(y.length>0&&T||E.length>0&&S)&&o.slides.forEach(((e,t)=>{o.grid.updateSlide(t,e,o.slides)})),m.watchSlidesProgress&&o.updateSlidesOffset(),s)if(y.length>0&&T){if(void 0===t){const e=o.slidesGrid[x],t=o.slidesGrid[x+M]-e;l?o.setTranslate(o.translate-t):(o.slideTo(x+M,0,!1,!0),i&&(o.touchEventsData.startTranslate=o.touchEventsData.startTranslate-t,o.touchEventsData.currentTranslate=o.touchEventsData.currentTranslate-t))}else if(i){const e=b?y.length/m.grid.rows:y.length;o.slideTo(o.activeIndex+e,0,!1,!0),o.touchEventsData.currentTranslate=o.translate}}else if(E.length>0&&S)if(void 0===t){const e=o.slidesGrid[x],t=o.slidesGrid[x-C]-e;l?o.setTranslate(o.translate-t):(o.slideTo(x-C,0,!1,!0),i&&(o.touchEventsData.startTranslate=o.touchEventsData.startTranslate-t,o.touchEventsData.currentTranslate=o.touchEventsData.currentTranslate-t))}else{const e=b?E.length/m.grid.rows:E.length;o.slideTo(o.activeIndex-e,0,!1,!0)}if(o.allowSlidePrev=c,o.allowSlideNext=p,o.controller&&o.controller.control&&!n){const e={slideRealIndex:t,direction:a,setTranslate:i,activeSlideIndex:r,byController:!0};Array.isArray(o.controller.control)?o.controller.control.forEach((t=>{!t.destroyed&&t.params.loop&&t.loopFix({...e,slideTo:t.params.slidesPerView===m.slidesPerView&&s})})):o.controller.control instanceof o.constructor&&o.controller.control.params.loop&&o.controller.control.loopFix({...e,slideTo:o.controller.control.params.slidesPerView===m.slidesPerView&&s})}o.emit("loopFix")},loopDestroy:function(){const e=this,{params:t,slidesEl:s}=e;if(!t.loop||e.virtual&&e.params.virtual.enabled)return;e.recalcSlides();const a=[];e.slides.forEach((e=>{const t=void 0===e.swiperSlideIndex?1*e.getAttribute("data-swiper-slide-index"):e.swiperSlideIndex;a[t]=e})),e.slides.forEach((e=>{e.removeAttribute("data-swiper-slide-index")})),a.forEach((e=>{s.append(e)})),e.recalcSlides(),e.slideTo(e.realIndex,0)}};function N(e,t,s){const a=r(),{params:i}=e,n=i.edgeSwipeDetection,l=i.edgeSwipeThreshold;return!n||!(s<=l||s>=a.innerWidth-l)||"prevent"===n&&(t.preventDefault(),!0)}function Y(e){const t=this,s=a();let i=e;i.originalEvent&&(i=i.originalEvent);const n=t.touchEventsData;if("pointerdown"===i.type){if(null!==n.pointerId&&n.pointerId!==i.pointerId)return;n.pointerId=i.pointerId}else"touchstart"===i.type&&1===i.targetTouches.length&&(n.touchId=i.targetTouches[0].identifier);if("touchstart"===i.type)return void N(t,i,i.targetTouches[0].pageX);const{params:l,touches:d,enabled:c}=t;if(!c)return;if(!l.simulateTouch&&"mouse"===i.pointerType)return;if(t.animating&&l.preventInteractionOnTransition)return;!t.animating&&l.cssMode&&l.loop&&t.loopFix();let p=i.target;if("wrapper"===l.touchEventsTarget&&!t.wrapperEl.contains(p))return;if("which"in i&&3===i.which)return;if("button"in i&&i.button>0)return;if(n.isTouched&&n.isMoved)return;const u=!!l.noSwipingClass&&""!==l.noSwipingClass,m=i.composedPath?i.composedPath():i.path;u&&i.target&&i.target.shadowRoot&&m&&(p=m[0]);const h=l.noSwipingSelector?l.noSwipingSelector:`.${l.noSwipingClass}`,f=!(!i.target||!i.target.shadowRoot);if(l.noSwiping&&(f?function(e,t){return void 0===t&&(t=this),function t(s){if(!s||s===a()||s===r())return null;s.assignedSlot&&(s=s.assignedSlot);const i=s.closest(e);return i||s.getRootNode?i||t(s.getRootNode().host):null}(t)}(h,p):p.closest(h)))return void(t.allowClick=!0);if(l.swipeHandler&&!p.closest(l.swipeHandler))return;d.currentX=i.pageX,d.currentY=i.pageY;const g=d.currentX,v=d.currentY;if(!N(t,i,g))return;Object.assign(n,{isTouched:!0,isMoved:!1,allowTouchCallbacks:!0,isScrolling:void 0,startMoving:void 0}),d.startX=g,d.startY=v,n.touchStartTime=o(),t.allowClick=!0,t.updateSize(),t.swipeDirection=void 0,l.threshold>0&&(n.allowThresholdMove=!1);let w=!0;p.matches(n.focusableElements)&&(w=!1,"SELECT"===p.nodeName&&(n.isTouched=!1)),s.activeElement&&s.activeElement.matches(n.focusableElements)&&s.activeElement!==p&&s.activeElement.blur();const b=w&&t.allowTouchMove&&l.touchStartPreventDefault;!l.touchStartForcePreventDefault&&!b||p.isContentEditable||i.preventDefault(),l.freeMode&&l.freeMode.enabled&&t.freeMode&&t.animating&&!l.cssMode&&t.freeMode.onTouchStart(),t.emit("touchStart",i)}function B(e){const t=a(),s=this,i=s.touchEventsData,{params:r,touches:n,rtlTranslate:l,enabled:d}=s;if(!d)return;if(!r.simulateTouch&&"mouse"===e.pointerType)return;let c,p=e;if(p.originalEvent&&(p=p.originalEvent),"pointermove"===p.type){if(null!==i.touchId)return;if(p.pointerId!==i.pointerId)return}if("touchmove"===p.type){if(c=[...p.changedTouches].filter((e=>e.identifier===i.touchId))[0],!c||c.identifier!==i.touchId)return}else c=p;if(!i.isTouched)return void(i.startMoving&&i.isScrolling&&s.emit("touchMoveOpposite",p));const u=c.pageX,m=c.pageY;if(p.preventedByNestedSwiper)return n.startX=u,void(n.startY=m);if(!s.allowTouchMove)return p.target.matches(i.focusableElements)||(s.allowClick=!1),void(i.isTouched&&(Object.assign(n,{startX:u,startY:m,currentX:u,currentY:m}),i.touchStartTime=o()));if(r.touchReleaseOnEdges&&!r.loop)if(s.isVertical()){if(m<n.startY&&s.translate<=s.maxTranslate()||m>n.startY&&s.translate>=s.minTranslate())return i.isTouched=!1,void(i.isMoved=!1)}else if(u<n.startX&&s.translate<=s.maxTranslate()||u>n.startX&&s.translate>=s.minTranslate())return;if(t.activeElement&&p.target===t.activeElement&&p.target.matches(i.focusableElements))return i.isMoved=!0,void(s.allowClick=!1);i.allowTouchCallbacks&&s.emit("touchMove",p),n.previousX=n.currentX,n.previousY=n.currentY,n.currentX=u,n.currentY=m;const h=n.currentX-n.startX,f=n.currentY-n.startY;if(s.params.threshold&&Math.sqrt(h**2+f**2)<s.params.threshold)return;if(void 0===i.isScrolling){let e;s.isHorizontal()&&n.currentY===n.startY||s.isVertical()&&n.currentX===n.startX?i.isScrolling=!1:h*h+f*f>=25&&(e=180*Math.atan2(Math.abs(f),Math.abs(h))/Math.PI,i.isScrolling=s.isHorizontal()?e>r.touchAngle:90-e>r.touchAngle)}if(i.isScrolling&&s.emit("touchMoveOpposite",p),void 0===i.startMoving&&(n.currentX===n.startX&&n.currentY===n.startY||(i.startMoving=!0)),i.isScrolling)return void(i.isTouched=!1);if(!i.startMoving)return;s.allowClick=!1,!r.cssMode&&p.cancelable&&p.preventDefault(),r.touchMoveStopPropagation&&!r.nested&&p.stopPropagation();let g=s.isHorizontal()?h:f,v=s.isHorizontal()?n.currentX-n.previousX:n.currentY-n.previousY;r.oneWayMovement&&(g=Math.abs(g)*(l?1:-1),v=Math.abs(v)*(l?1:-1)),n.diff=g,g*=r.touchRatio,l&&(g=-g,v=-v);const w=s.touchesDirection;s.swipeDirection=g>0?"prev":"next",s.touchesDirection=v>0?"prev":"next";const b=s.params.loop&&!r.cssMode,y="next"===s.touchesDirection&&s.allowSlideNext||"prev"===s.touchesDirection&&s.allowSlidePrev;if(!i.isMoved){if(b&&y&&s.loopFix({direction:s.swipeDirection}),i.startTranslate=s.getTranslate(),s.setTransition(0),s.animating){const e=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0});s.wrapperEl.dispatchEvent(e)}i.allowMomentumBounce=!1,!r.grabCursor||!0!==s.allowSlideNext&&!0!==s.allowSlidePrev||s.setGrabCursor(!0),s.emit("sliderFirstMove",p)}if((new Date).getTime(),i.isMoved&&i.allowThresholdMove&&w!==s.touchesDirection&&b&&y&&Math.abs(g)>=1)return Object.assign(n,{startX:u,startY:m,currentX:u,currentY:m,startTranslate:i.currentTranslate}),i.loopSwapReset=!0,void(i.startTranslate=i.currentTranslate);s.emit("sliderMove",p),i.isMoved=!0,i.currentTranslate=g+i.startTranslate;let E=!0,x=r.resistanceRatio;if(r.touchReleaseOnEdges&&(x=0),g>0?(b&&y&&i.allowThresholdMove&&i.currentTranslate>(r.centeredSlides?s.minTranslate()-s.slidesSizesGrid[s.activeIndex+1]:s.minTranslate())&&s.loopFix({direction:"prev",setTranslate:!0,activeSlideIndex:0}),i.currentTranslate>s.minTranslate()&&(E=!1,r.resistance&&(i.currentTranslate=s.minTranslate()-1+(-s.minTranslate()+i.startTranslate+g)**x))):g<0&&(b&&y&&i.allowThresholdMove&&i.currentTranslate<(r.centeredSlides?s.maxTranslate()+s.slidesSizesGrid[s.slidesSizesGrid.length-1]:s.maxTranslate())&&s.loopFix({direction:"next",setTranslate:!0,activeSlideIndex:s.slides.length-("auto"===r.slidesPerView?s.slidesPerViewDynamic():Math.ceil(parseFloat(r.slidesPerView,10)))}),i.currentTranslate<s.maxTranslate()&&(E=!1,r.resistance&&(i.currentTranslate=s.maxTranslate()+1-(s.maxTranslate()-i.startTranslate-g)**x))),E&&(p.preventedByNestedSwiper=!0),!s.allowSlideNext&&"next"===s.swipeDirection&&i.currentTranslate<i.startTranslate&&(i.currentTranslate=i.startTranslate),!s.allowSlidePrev&&"prev"===s.swipeDirection&&i.currentTranslate>i.startTranslate&&(i.currentTranslate=i.startTranslate),s.allowSlidePrev||s.allowSlideNext||(i.currentTranslate=i.startTranslate),r.threshold>0){if(!(Math.abs(g)>r.threshold||i.allowThresholdMove))return void(i.currentTranslate=i.startTranslate);if(!i.allowThresholdMove)return i.allowThresholdMove=!0,n.startX=n.currentX,n.startY=n.currentY,i.currentTranslate=i.startTranslate,void(n.diff=s.isHorizontal()?n.currentX-n.startX:n.currentY-n.startY)}r.followFinger&&!r.cssMode&&((r.freeMode&&r.freeMode.enabled&&s.freeMode||r.watchSlidesProgress)&&(s.updateActiveIndex(),s.updateSlidesClasses()),r.freeMode&&r.freeMode.enabled&&s.freeMode&&s.freeMode.onTouchMove(),s.updateProgress(i.currentTranslate),s.setTranslate(i.currentTranslate))}function R(e){const t=this,s=t.touchEventsData;let a,i=e;i.originalEvent&&(i=i.originalEvent);if("touchend"===i.type||"touchcancel"===i.type){if(a=[...i.changedTouches].filter((e=>e.identifier===s.touchId))[0],!a||a.identifier!==s.touchId)return}else{if(null!==s.touchId)return;if(i.pointerId!==s.pointerId)return;a=i}if(["pointercancel","pointerout","pointerleave","contextmenu"].includes(i.type)){if(!(["pointercancel","contextmenu"].includes(i.type)&&(t.browser.isSafari||t.browser.isWebView)))return}s.pointerId=null,s.touchId=null;const{params:r,touches:n,rtlTranslate:d,slidesGrid:c,enabled:p}=t;if(!p)return;if(!r.simulateTouch&&"mouse"===i.pointerType)return;if(s.allowTouchCallbacks&&t.emit("touchEnd",i),s.allowTouchCallbacks=!1,!s.isTouched)return s.isMoved&&r.grabCursor&&t.setGrabCursor(!1),s.isMoved=!1,void(s.startMoving=!1);r.grabCursor&&s.isMoved&&s.isTouched&&(!0===t.allowSlideNext||!0===t.allowSlidePrev)&&t.setGrabCursor(!1);const u=o(),m=u-s.touchStartTime;if(t.allowClick){const e=i.path||i.composedPath&&i.composedPath();t.updateClickedSlide(e&&e[0]||i.target,e),t.emit("tap click",i),m<300&&u-s.lastClickTime<300&&t.emit("doubleTap doubleClick",i)}if(s.lastClickTime=o(),l((()=>{t.destroyed||(t.allowClick=!0)})),!s.isTouched||!s.isMoved||!t.swipeDirection||0===n.diff&&!s.loopSwapReset||s.currentTranslate===s.startTranslate&&!s.loopSwapReset)return s.isTouched=!1,s.isMoved=!1,void(s.startMoving=!1);let h;if(s.isTouched=!1,s.isMoved=!1,s.startMoving=!1,h=r.followFinger?d?t.translate:-t.translate:-s.currentTranslate,r.cssMode)return;if(r.freeMode&&r.freeMode.enabled)return void t.freeMode.onTouchEnd({currentPos:h});const f=h>=-t.maxTranslate()&&!t.params.loop;let g=0,v=t.slidesSizesGrid[0];for(let e=0;e<c.length;e+=e<r.slidesPerGroupSkip?1:r.slidesPerGroup){const t=e<r.slidesPerGroupSkip-1?1:r.slidesPerGroup;void 0!==c[e+t]?(f||h>=c[e]&&h<c[e+t])&&(g=e,v=c[e+t]-c[e]):(f||h>=c[e])&&(g=e,v=c[c.length-1]-c[c.length-2])}let w=null,b=null;r.rewind&&(t.isBeginning?b=r.virtual&&r.virtual.enabled&&t.virtual?t.virtual.slides.length-1:t.slides.length-1:t.isEnd&&(w=0));const y=(h-c[g])/v,E=g<r.slidesPerGroupSkip-1?1:r.slidesPerGroup;if(m>r.longSwipesMs){if(!r.longSwipes)return void t.slideTo(t.activeIndex);"next"===t.swipeDirection&&(y>=r.longSwipesRatio?t.slideTo(r.rewind&&t.isEnd?w:g+E):t.slideTo(g)),"prev"===t.swipeDirection&&(y>1-r.longSwipesRatio?t.slideTo(g+E):null!==b&&y<0&&Math.abs(y)>r.longSwipesRatio?t.slideTo(b):t.slideTo(g))}else{if(!r.shortSwipes)return void t.slideTo(t.activeIndex);t.navigation&&(i.target===t.navigation.nextEl||i.target===t.navigation.prevEl)?i.target===t.navigation.nextEl?t.slideTo(g+E):t.slideTo(g):("next"===t.swipeDirection&&t.slideTo(null!==w?w:g+E),"prev"===t.swipeDirection&&t.slideTo(null!==b?b:g))}}function q(){const e=this,{params:t,el:s}=e;if(s&&0===s.offsetWidth)return;t.breakpoints&&e.setBreakpoint();const{allowSlideNext:a,allowSlidePrev:i,snapGrid:r}=e,n=e.virtual&&e.params.virtual.enabled;e.allowSlideNext=!0,e.allowSlidePrev=!0,e.updateSize(),e.updateSlides(),e.updateSlidesClasses();const l=n&&t.loop;!("auto"===t.slidesPerView||t.slidesPerView>1)||!e.isEnd||e.isBeginning||e.params.centeredSlides||l?e.params.loop&&!n?e.slideToLoop(e.realIndex,0,!1,!0):e.slideTo(e.activeIndex,0,!1,!0):e.slideTo(e.slides.length-1,0,!1,!0),e.autoplay&&e.autoplay.running&&e.autoplay.paused&&(clearTimeout(e.autoplay.resizeTimeout),e.autoplay.resizeTimeout=setTimeout((()=>{e.autoplay&&e.autoplay.running&&e.autoplay.paused&&e.autoplay.resume()}),500)),e.allowSlidePrev=i,e.allowSlideNext=a,e.params.watchOverflow&&r!==e.snapGrid&&e.checkOverflow()}function V(e){const t=this;t.enabled&&(t.allowClick||(t.params.preventClicks&&e.preventDefault(),t.params.preventClicksPropagation&&t.animating&&(e.stopPropagation(),e.stopImmediatePropagation())))}function _(){const e=this,{wrapperEl:t,rtlTranslate:s,enabled:a}=e;if(!a)return;let i;e.previousTranslate=e.translate,e.isHorizontal()?e.translate=-t.scrollLeft:e.translate=-t.scrollTop,0===e.translate&&(e.translate=0),e.updateActiveIndex(),e.updateSlidesClasses();const r=e.maxTranslate()-e.minTranslate();i=0===r?0:(e.translate-e.minTranslate())/r,i!==e.progress&&e.updateProgress(s?-e.translate:e.translate),e.emit("setTranslate",e.translate,!1)}function F(e){const t=this;z(t,e.target),t.params.cssMode||"auto"!==t.params.slidesPerView&&!t.params.autoHeight||t.update()}function j(){const e=this;e.documentTouchHandlerProceeded||(e.documentTouchHandlerProceeded=!0,e.params.touchReleaseOnEdges&&(e.el.style.touchAction="auto"))}const W=(e,t)=>{const s=a(),{params:i,el:r,wrapperEl:n,device:l}=e,o=!!i.nested,d="on"===t?"addEventListener":"removeEventListener",c=t;s[d]("touchstart",e.onDocumentTouchStart,{passive:!1,capture:o}),r[d]("touchstart",e.onTouchStart,{passive:!1}),r[d]("pointerdown",e.onTouchStart,{passive:!1}),s[d]("touchmove",e.onTouchMove,{passive:!1,capture:o}),s[d]("pointermove",e.onTouchMove,{passive:!1,capture:o}),s[d]("touchend",e.onTouchEnd,{passive:!0}),s[d]("pointerup",e.onTouchEnd,{passive:!0}),s[d]("pointercancel",e.onTouchEnd,{passive:!0}),s[d]("touchcancel",e.onTouchEnd,{passive:!0}),s[d]("pointerout",e.onTouchEnd,{passive:!0}),s[d]("pointerleave",e.onTouchEnd,{passive:!0}),s[d]("contextmenu",e.onTouchEnd,{passive:!0}),(i.preventClicks||i.preventClicksPropagation)&&r[d]("click",e.onClick,!0),i.cssMode&&n[d]("scroll",e.onScroll),i.updateOnWindowResize?e[c](l.ios||l.android?"resize orientationchange observerUpdate":"resize observerUpdate",q,!0):e[c]("observerUpdate",q,!0),r[d]("load",e.onLoad,{capture:!0})};const U=(e,t)=>e.grid&&t.grid&&t.grid.rows>1;var K={init:!0,direction:"horizontal",oneWayMovement:!1,touchEventsTarget:"wrapper",initialSlide:0,speed:300,cssMode:!1,updateOnWindowResize:!0,resizeObserver:!0,nested:!1,createElements:!1,eventsPrefix:"swiper",enabled:!0,focusableElements:"input, select, option, textarea, button, video, label",width:null,height:null,preventInteractionOnTransition:!1,userAgent:null,url:null,edgeSwipeDetection:!1,edgeSwipeThreshold:20,autoHeight:!1,setWrapperSize:!1,virtualTranslate:!1,effect:"slide",breakpoints:void 0,breakpointsBase:"window",spaceBetween:0,slidesPerView:1,slidesPerGroup:1,slidesPerGroupSkip:0,slidesPerGroupAuto:!1,centeredSlides:!1,centeredSlidesBounds:!1,slidesOffsetBefore:0,slidesOffsetAfter:0,normalizeSlideIndex:!0,centerInsufficientSlides:!1,watchOverflow:!0,roundLengths:!1,touchRatio:1,touchAngle:45,simulateTouch:!0,shortSwipes:!0,longSwipes:!0,longSwipesRatio:.5,longSwipesMs:300,followFinger:!0,allowTouchMove:!0,threshold:5,touchMoveStopPropagation:!1,touchStartPreventDefault:!0,touchStartForcePreventDefault:!1,touchReleaseOnEdges:!1,uniqueNavElements:!0,resistance:!0,resistanceRatio:.85,watchSlidesProgress:!1,grabCursor:!1,preventClicks:!0,preventClicksPropagation:!0,slideToClickedSlide:!1,loop:!1,loopAddBlankSlides:!0,loopAdditionalSlides:0,loopPreventsSliding:!0,rewind:!1,allowSlidePrev:!0,allowSlideNext:!0,swipeHandler:null,noSwiping:!0,noSwipingClass:"swiper-no-swiping",noSwipingSelector:null,passiveListeners:!0,maxBackfaceHiddenSlides:10,containerModifierClass:"swiper-",slideClass:"swiper-slide",slideBlankClass:"swiper-slide-blank",slideActiveClass:"swiper-slide-active",slideVisibleClass:"swiper-slide-visible",slideFullyVisibleClass:"swiper-slide-fully-visible",slideNextClass:"swiper-slide-next",slidePrevClass:"swiper-slide-prev",wrapperClass:"swiper-wrapper",lazyPreloaderClass:"swiper-lazy-preloader",lazyPreloadPrevNext:0,runCallbacksOnInit:!0,_emitClasses:!1};function Z(e,t){return function(s){void 0===s&&(s={});const a=Object.keys(s)[0],i=s[a];"object"==typeof i&&null!==i?(!0===e[a]&&(e[a]={enabled:!0}),"navigation"===a&&e[a]&&e[a].enabled&&!e[a].prevEl&&!e[a].nextEl&&(e[a].auto=!0),["pagination","scrollbar"].indexOf(a)>=0&&e[a]&&e[a].enabled&&!e[a].el&&(e[a].auto=!0),a in e&&"enabled"in i?("object"!=typeof e[a]||"enabled"in e[a]||(e[a].enabled=!0),e[a]||(e[a]={enabled:!1}),p(t,s)):p(t,s)):p(t,s)}}const Q={eventsEmitter:I,update:O,translate:D,transition:{setTransition:function(e,t){const s=this;s.params.cssMode||(s.wrapperEl.style.transitionDuration=`${e}ms`,s.wrapperEl.style.transitionDelay=0===e?"0ms":""),s.emit("setTransition",e,t)},transitionStart:function(e,t){void 0===e&&(e=!0);const s=this,{params:a}=s;a.cssMode||(a.autoHeight&&s.updateAutoHeight(),G({swiper:s,runCallbacks:e,direction:t,step:"Start"}))},transitionEnd:function(e,t){void 0===e&&(e=!0);const s=this,{params:a}=s;s.animating=!1,a.cssMode||(s.setTransition(0),G({swiper:s,runCallbacks:e,direction:t,step:"End"}))}},slide:X,loop:H,grabCursor:{setGrabCursor:function(e){const t=this;if(!t.params.simulateTouch||t.params.watchOverflow&&t.isLocked||t.params.cssMode)return;const s="container"===t.params.touchEventsTarget?t.el:t.wrapperEl;t.isElement&&(t.__preventObserver__=!0),s.style.cursor="move",s.style.cursor=e?"grabbing":"grab",t.isElement&&requestAnimationFrame((()=>{t.__preventObserver__=!1}))},unsetGrabCursor:function(){const e=this;e.params.watchOverflow&&e.isLocked||e.params.cssMode||(e.isElement&&(e.__preventObserver__=!0),e["container"===e.params.touchEventsTarget?"el":"wrapperEl"].style.cursor="",e.isElement&&requestAnimationFrame((()=>{e.__preventObserver__=!1})))}},events:{attachEvents:function(){const e=this,{params:t}=e;e.onTouchStart=Y.bind(e),e.onTouchMove=B.bind(e),e.onTouchEnd=R.bind(e),e.onDocumentTouchStart=j.bind(e),t.cssMode&&(e.onScroll=_.bind(e)),e.onClick=V.bind(e),e.onLoad=F.bind(e),W(e,"on")},detachEvents:function(){W(this,"off")}},breakpoints:{setBreakpoint:function(){const e=this,{realIndex:t,initialized:s,params:a,el:i}=e,r=a.breakpoints;if(!r||r&&0===Object.keys(r).length)return;const n=e.getBreakpoint(r,e.params.breakpointsBase,e.el);if(!n||e.currentBreakpoint===n)return;const l=(n in r?r[n]:void 0)||e.originalParams,o=U(e,a),d=U(e,l),c=a.enabled;o&&!d?(i.classList.remove(`${a.containerModifierClass}grid`,`${a.containerModifierClass}grid-column`),e.emitContainerClasses()):!o&&d&&(i.classList.add(`${a.containerModifierClass}grid`),(l.grid.fill&&"column"===l.grid.fill||!l.grid.fill&&"column"===a.grid.fill)&&i.classList.add(`${a.containerModifierClass}grid-column`),e.emitContainerClasses()),["navigation","pagination","scrollbar"].forEach((t=>{if(void 0===l[t])return;const s=a[t]&&a[t].enabled,i=l[t]&&l[t].enabled;s&&!i&&e[t].disable(),!s&&i&&e[t].enable()}));const u=l.direction&&l.direction!==a.direction,m=a.loop&&(l.slidesPerView!==a.slidesPerView||u),h=a.loop;u&&s&&e.changeDirection(),p(e.params,l);const f=e.params.enabled,g=e.params.loop;Object.assign(e,{allowTouchMove:e.params.allowTouchMove,allowSlideNext:e.params.allowSlideNext,allowSlidePrev:e.params.allowSlidePrev}),c&&!f?e.disable():!c&&f&&e.enable(),e.currentBreakpoint=n,e.emit("_beforeBreakpoint",l),s&&(m?(e.loopDestroy(),e.loopCreate(t),e.updateSlides()):!h&&g?(e.loopCreate(t),e.updateSlides()):h&&!g&&e.loopDestroy()),e.emit("breakpoint",l)},getBreakpoint:function(e,t,s){if(void 0===t&&(t="window"),!e||"container"===t&&!s)return;let a=!1;const i=r(),n="window"===t?i.innerHeight:s.clientHeight,l=Object.keys(e).map((e=>{if("string"==typeof e&&0===e.indexOf("@")){const t=parseFloat(e.substr(1));return{value:n*t,point:e}}return{value:e,point:e}}));l.sort(((e,t)=>parseInt(e.value,10)-parseInt(t.value,10)));for(let e=0;e<l.length;e+=1){const{point:r,value:n}=l[e];"window"===t?i.matchMedia(`(min-width: ${n}px)`).matches&&(a=r):n<=s.clientWidth&&(a=r)}return a||"max"}},checkOverflow:{checkOverflow:function(){const e=this,{isLocked:t,params:s}=e,{slidesOffsetBefore:a}=s;if(a){const t=e.slides.length-1,s=e.slidesGrid[t]+e.slidesSizesGrid[t]+2*a;e.isLocked=e.size>s}else e.isLocked=1===e.snapGrid.length;!0===s.allowSlideNext&&(e.allowSlideNext=!e.isLocked),!0===s.allowSlidePrev&&(e.allowSlidePrev=!e.isLocked),t&&t!==e.isLocked&&(e.isEnd=!1),t!==e.isLocked&&e.emit(e.isLocked?"lock":"unlock")}},classes:{addClasses:function(){const e=this,{classNames:t,params:s,rtl:a,el:i,device:r}=e,n=function(e,t){const s=[];return e.forEach((e=>{"object"==typeof e?Object.keys(e).forEach((a=>{e[a]&&s.push(t+a)})):"string"==typeof e&&s.push(t+e)})),s}(["initialized",s.direction,{"free-mode":e.params.freeMode&&s.freeMode.enabled},{autoheight:s.autoHeight},{rtl:a},{grid:s.grid&&s.grid.rows>1},{"grid-column":s.grid&&s.grid.rows>1&&"column"===s.grid.fill},{android:r.android},{ios:r.ios},{"css-mode":s.cssMode},{centered:s.cssMode&&s.centeredSlides},{"watch-progress":s.watchSlidesProgress}],s.containerModifierClass);t.push(...n),i.classList.add(...t),e.emitContainerClasses()},removeClasses:function(){const{el:e,classNames:t}=this;e.classList.remove(...t),this.emitContainerClasses()}}},J={};class ee{constructor(){let e,t;for(var s=arguments.length,i=new Array(s),r=0;r<s;r++)i[r]=arguments[r];1===i.length&&i[0].constructor&&"Object"===Object.prototype.toString.call(i[0]).slice(8,-1)?t=i[0]:[e,t]=i,t||(t={}),t=p({},t),e&&!t.el&&(t.el=e);const n=a();if(t.el&&"string"==typeof t.el&&n.querySelectorAll(t.el).length>1){const e=[];return n.querySelectorAll(t.el).forEach((s=>{const a=p({},t,{el:s});e.push(new ee(a))})),e}const l=this;l.__swiper__=!0,l.support=P(),l.device=L({userAgent:t.userAgent}),l.browser=A(),l.eventsListeners={},l.eventsAnyListeners=[],l.modules=[...l.__modules__],t.modules&&Array.isArray(t.modules)&&l.modules.push(...t.modules);const o={};l.modules.forEach((e=>{e({params:t,swiper:l,extendParams:Z(t,o),on:l.on.bind(l),once:l.once.bind(l),off:l.off.bind(l),emit:l.emit.bind(l)})}));const d=p({},K,o);return l.params=p({},d,J,t),l.originalParams=p({},l.params),l.passedParams=p({},t),l.params&&l.params.on&&Object.keys(l.params.on).forEach((e=>{l.on(e,l.params.on[e])})),l.params&&l.params.onAny&&l.onAny(l.params.onAny),Object.assign(l,{enabled:l.params.enabled,el:e,classNames:[],slides:[],slidesGrid:[],snapGrid:[],slidesSizesGrid:[],isHorizontal:()=>"horizontal"===l.params.direction,isVertical:()=>"vertical"===l.params.direction,activeIndex:0,realIndex:0,isBeginning:!0,isEnd:!1,translate:0,previousTranslate:0,progress:0,velocity:0,animating:!1,cssOverflowAdjustment(){return Math.trunc(this.translate/2**23)*2**23},allowSlideNext:l.params.allowSlideNext,allowSlidePrev:l.params.allowSlidePrev,touchEventsData:{isTouched:void 0,isMoved:void 0,allowTouchCallbacks:void 0,touchStartTime:void 0,isScrolling:void 0,currentTranslate:void 0,startTranslate:void 0,allowThresholdMove:void 0,focusableElements:l.params.focusableElements,lastClickTime:0,clickTimeout:void 0,velocities:[],allowMomentumBounce:void 0,startMoving:void 0,pointerId:null,touchId:null},allowClick:!0,allowTouchMove:l.params.allowTouchMove,touches:{startX:0,startY:0,currentX:0,currentY:0,diff:0},imagesToLoad:[],imagesLoaded:0}),l.emit("_swiper"),l.params.init&&l.init(),l}getDirectionLabel(e){return this.isHorizontal()?e:{width:"height","margin-top":"margin-left","margin-bottom ":"margin-right","margin-left":"margin-top","margin-right":"margin-bottom","padding-left":"padding-top","padding-right":"padding-bottom",marginRight:"marginBottom"}[e]}getSlideIndex(e){const{slidesEl:t,params:s}=this,a=y(f(t,`.${s.slideClass}, swiper-slide`)[0]);return y(e)-a}getSlideIndexByData(e){return this.getSlideIndex(this.slides.filter((t=>1*t.getAttribute("data-swiper-slide-index")===e))[0])}recalcSlides(){const{slidesEl:e,params:t}=this;this.slides=f(e,`.${t.slideClass}, swiper-slide`)}enable(){const e=this;e.enabled||(e.enabled=!0,e.params.grabCursor&&e.setGrabCursor(),e.emit("enable"))}disable(){const e=this;e.enabled&&(e.enabled=!1,e.params.grabCursor&&e.unsetGrabCursor(),e.emit("disable"))}setProgress(e,t){const s=this;e=Math.min(Math.max(e,0),1);const a=s.minTranslate(),i=(s.maxTranslate()-a)*e+a;s.translateTo(i,void 0===t?0:t),s.updateActiveIndex(),s.updateSlidesClasses()}emitContainerClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=e.el.className.split(" ").filter((t=>0===t.indexOf("swiper")||0===t.indexOf(e.params.containerModifierClass)));e.emit("_containerClasses",t.join(" "))}getSlideClasses(e){const t=this;return t.destroyed?"":e.className.split(" ").filter((e=>0===e.indexOf("swiper-slide")||0===e.indexOf(t.params.slideClass))).join(" ")}emitSlidesClasses(){const e=this;if(!e.params._emitClasses||!e.el)return;const t=[];e.slides.forEach((s=>{const a=e.getSlideClasses(s);t.push({slideEl:s,classNames:a}),e.emit("_slideClass",s,a)})),e.emit("_slideClasses",t)}slidesPerViewDynamic(e,t){void 0===e&&(e="current"),void 0===t&&(t=!1);const{params:s,slides:a,slidesGrid:i,slidesSizesGrid:r,size:n,activeIndex:l}=this;let o=1;if("number"==typeof s.slidesPerView)return s.slidesPerView;if(s.centeredSlides){let e,t=a[l]?a[l].swiperSlideSize:0;for(let s=l+1;s<a.length;s+=1)a[s]&&!e&&(t+=a[s].swiperSlideSize,o+=1,t>n&&(e=!0));for(let s=l-1;s>=0;s-=1)a[s]&&!e&&(t+=a[s].swiperSlideSize,o+=1,t>n&&(e=!0))}else if("current"===e)for(let e=l+1;e<a.length;e+=1){(t?i[e]+r[e]-i[l]<n:i[e]-i[l]<n)&&(o+=1)}else for(let e=l-1;e>=0;e-=1){i[l]-i[e]<n&&(o+=1)}return o}update(){const e=this;if(!e||e.destroyed)return;const{snapGrid:t,params:s}=e;function a(){const t=e.rtlTranslate?-1*e.translate:e.translate,s=Math.min(Math.max(t,e.maxTranslate()),e.minTranslate());e.setTranslate(s),e.updateActiveIndex(),e.updateSlidesClasses()}let i;if(s.breakpoints&&e.setBreakpoint(),[...e.el.querySelectorAll('[loading="lazy"]')].forEach((t=>{t.complete&&z(e,t)})),e.updateSize(),e.updateSlides(),e.updateProgress(),e.updateSlidesClasses(),s.freeMode&&s.freeMode.enabled&&!s.cssMode)a(),s.autoHeight&&e.updateAutoHeight();else{if(("auto"===s.slidesPerView||s.slidesPerView>1)&&e.isEnd&&!s.centeredSlides){const t=e.virtual&&s.virtual.enabled?e.virtual.slides:e.slides;i=e.slideTo(t.length-1,0,!1,!0)}else i=e.slideTo(e.activeIndex,0,!1,!0);i||a()}s.watchOverflow&&t!==e.snapGrid&&e.checkOverflow(),e.emit("update")}changeDirection(e,t){void 0===t&&(t=!0);const s=this,a=s.params.direction;return e||(e="horizontal"===a?"vertical":"horizontal"),e===a||"horizontal"!==e&&"vertical"!==e||(s.el.classList.remove(`${s.params.containerModifierClass}${a}`),s.el.classList.add(`${s.params.containerModifierClass}${e}`),s.emitContainerClasses(),s.params.direction=e,s.slides.forEach((t=>{"vertical"===e?t.style.width="":t.style.height=""})),s.emit("changeDirection"),t&&s.update()),s}changeLanguageDirection(e){const t=this;t.rtl&&"rtl"===e||!t.rtl&&"ltr"===e||(t.rtl="rtl"===e,t.rtlTranslate="horizontal"===t.params.direction&&t.rtl,t.rtl?(t.el.classList.add(`${t.params.containerModifierClass}rtl`),t.el.dir="rtl"):(t.el.classList.remove(`${t.params.containerModifierClass}rtl`),t.el.dir="ltr"),t.update())}mount(e){const t=this;if(t.mounted)return!0;let s=e||t.params.el;if("string"==typeof s&&(s=document.querySelector(s)),!s)return!1;s.swiper=t,s.parentNode&&s.parentNode.host&&"SWIPER-CONTAINER"===s.parentNode.host.nodeName&&(t.isElement=!0);const a=()=>`.${(t.params.wrapperClass||"").trim().split(" ").join(".")}`;let i=(()=>{if(s&&s.shadowRoot&&s.shadowRoot.querySelector){return s.shadowRoot.querySelector(a())}return f(s,a())[0]})();return!i&&t.params.createElements&&(i=v("div",t.params.wrapperClass),s.append(i),f(s,`.${t.params.slideClass}`).forEach((e=>{i.append(e)}))),Object.assign(t,{el:s,wrapperEl:i,slidesEl:t.isElement&&!s.parentNode.host.slideSlots?s.parentNode.host:i,hostEl:t.isElement?s.parentNode.host:s,mounted:!0,rtl:"rtl"===s.dir.toLowerCase()||"rtl"===b(s,"direction"),rtlTranslate:"horizontal"===t.params.direction&&("rtl"===s.dir.toLowerCase()||"rtl"===b(s,"direction")),wrongRTL:"-webkit-box"===b(i,"display")}),!0}init(e){const t=this;if(t.initialized)return t;if(!1===t.mount(e))return t;t.emit("beforeInit"),t.params.breakpoints&&t.setBreakpoint(),t.addClasses(),t.updateSize(),t.updateSlides(),t.params.watchOverflow&&t.checkOverflow(),t.params.grabCursor&&t.enabled&&t.setGrabCursor(),t.params.loop&&t.virtual&&t.params.virtual.enabled?t.slideTo(t.params.initialSlide+t.virtual.slidesBefore,0,t.params.runCallbacksOnInit,!1,!0):t.slideTo(t.params.initialSlide,0,t.params.runCallbacksOnInit,!1,!0),t.params.loop&&t.loopCreate(),t.attachEvents();const s=[...t.el.querySelectorAll('[loading="lazy"]')];return t.isElement&&s.push(...t.hostEl.querySelectorAll('[loading="lazy"]')),s.forEach((e=>{e.complete?z(t,e):e.addEventListener("load",(e=>{z(t,e.target)}))})),k(t),t.initialized=!0,k(t),t.emit("init"),t.emit("afterInit"),t}destroy(e,t){void 0===e&&(e=!0),void 0===t&&(t=!0);const s=this,{params:a,el:i,wrapperEl:r,slides:n}=s;return void 0===s.params||s.destroyed||(s.emit("beforeDestroy"),s.initialized=!1,s.detachEvents(),a.loop&&s.loopDestroy(),t&&(s.removeClasses(),i.removeAttribute("style"),r.removeAttribute("style"),n&&n.length&&n.forEach((e=>{e.classList.remove(a.slideVisibleClass,a.slideFullyVisibleClass,a.slideActiveClass,a.slideNextClass,a.slidePrevClass),e.removeAttribute("style"),e.removeAttribute("data-swiper-slide-index")}))),s.emit("destroy"),Object.keys(s.eventsListeners).forEach((e=>{s.off(e)})),!1!==e&&(s.el.swiper=null,function(e){const t=e;Object.keys(t).forEach((e=>{try{t[e]=null}catch(e){}try{delete t[e]}catch(e){}}))}(s)),s.destroyed=!0),null}static extendDefaults(e){p(J,e)}static get extendedDefaults(){return J}static get defaults(){return K}static installModule(e){ee.prototype.__modules__||(ee.prototype.__modules__=[]);const t=ee.prototype.__modules__;"function"==typeof e&&t.indexOf(e)<0&&t.push(e)}static use(e){return Array.isArray(e)?(e.forEach((e=>ee.installModule(e))),ee):(ee.installModule(e),ee)}}function te(e,t,s,a){return e.params.createElements&&Object.keys(a).forEach((i=>{if(!s[i]&&!0===s.auto){let r=f(e.el,`.${a[i]}`)[0];r||(r=v("div",a[i]),r.className=a[i],e.el.append(r)),s[i]=r,t[i]=r}})),s}function se(e){return void 0===e&&(e=""),`.${e.trim().replace(/([\.:!+\/])/g,"\\$1").replace(/ /g,".")}`}function ae(e){const t=this,{params:s,slidesEl:a}=t;s.loop&&t.loopDestroy();const i=e=>{if("string"==typeof e){const t=document.createElement("div");t.innerHTML=e,a.append(t.children[0]),t.innerHTML=""}else a.append(e)};if("object"==typeof e&&"length"in e)for(let t=0;t<e.length;t+=1)e[t]&&i(e[t]);else i(e);t.recalcSlides(),s.loop&&t.loopCreate(),s.observer&&!t.isElement||t.update()}function ie(e){const t=this,{params:s,activeIndex:a,slidesEl:i}=t;s.loop&&t.loopDestroy();let r=a+1;const n=e=>{if("string"==typeof e){const t=document.createElement("div");t.innerHTML=e,i.prepend(t.children[0]),t.innerHTML=""}else i.prepend(e)};if("object"==typeof e&&"length"in e){for(let t=0;t<e.length;t+=1)e[t]&&n(e[t]);r=a+e.length}else n(e);t.recalcSlides(),s.loop&&t.loopCreate(),s.observer&&!t.isElement||t.update(),t.slideTo(r,0,!1)}function re(e,t){const s=this,{params:a,activeIndex:i,slidesEl:r}=s;let n=i;a.loop&&(n-=s.loopedSlides,s.loopDestroy(),s.recalcSlides());const l=s.slides.length;if(e<=0)return void s.prependSlide(t);if(e>=l)return void s.appendSlide(t);let o=n>e?n+1:n;const d=[];for(let t=l-1;t>=e;t-=1){const e=s.slides[t];e.remove(),d.unshift(e)}if("object"==typeof t&&"length"in t){for(let e=0;e<t.length;e+=1)t[e]&&r.append(t[e]);o=n>e?n+t.length:n}else r.append(t);for(let e=0;e<d.length;e+=1)r.append(d[e]);s.recalcSlides(),a.loop&&s.loopCreate(),a.observer&&!s.isElement||s.update(),a.loop?s.slideTo(o+s.loopedSlides,0,!1):s.slideTo(o,0,!1)}function ne(e){const t=this,{params:s,activeIndex:a}=t;let i=a;s.loop&&(i-=t.loopedSlides,t.loopDestroy());let r,n=i;if("object"==typeof e&&"length"in e){for(let s=0;s<e.length;s+=1)r=e[s],t.slides[r]&&t.slides[r].remove(),r<n&&(n-=1);n=Math.max(n,0)}else r=e,t.slides[r]&&t.slides[r].remove(),r<n&&(n-=1),n=Math.max(n,0);t.recalcSlides(),s.loop&&t.loopCreate(),s.observer&&!t.isElement||t.update(),s.loop?t.slideTo(n+t.loopedSlides,0,!1):t.slideTo(n,0,!1)}function le(){const e=this,t=[];for(let s=0;s<e.slides.length;s+=1)t.push(s);e.removeSlide(t)}function oe(e){const{effect:t,swiper:s,on:a,setTranslate:i,setTransition:r,overwriteParams:n,perspective:l,recreateShadows:o,getEffectParams:d}=e;let c;a("beforeInit",(()=>{if(s.params.effect!==t)return;s.classNames.push(`${s.params.containerModifierClass}${t}`),l&&l()&&s.classNames.push(`${s.params.containerModifierClass}3d`);const e=n?n():{};Object.assign(s.params,e),Object.assign(s.originalParams,e)})),a("setTranslate",(()=>{s.params.effect===t&&i()})),a("setTransition",((e,a)=>{s.params.effect===t&&r(a)})),a("transitionEnd",(()=>{if(s.params.effect===t&&o){if(!d||!d().slideShadows)return;s.slides.forEach((e=>{e.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach((e=>e.remove()))})),o()}})),a("virtualUpdate",(()=>{s.params.effect===t&&(s.slides.length||(c=!0),requestAnimationFrame((()=>{c&&s.slides&&s.slides.length&&(i(),c=!1)})))}))}function de(e,t){const s=h(t);return s!==t&&(s.style.backfaceVisibility="hidden",s.style["-webkit-backface-visibility"]="hidden"),s}function ce(e){let{swiper:t,duration:s,transformElements:a,allSlides:i}=e;const{activeIndex:r}=t;if(t.params.virtualTranslate&&0!==s){let e,s=!1;e=i?a:a.filter((e=>{const s=e.classList.contains("swiper-slide-transform")?(e=>{if(!e.parentElement)return t.slides.filter((t=>t.shadowRoot&&t.shadowRoot===e.parentNode))[0];return e.parentElement})(e):e;return t.getSlideIndex(s)===r})),e.forEach((e=>{x(e,(()=>{if(s)return;if(!t||t.destroyed)return;s=!0,t.animating=!1;const e=new window.CustomEvent("transitionend",{bubbles:!0,cancelable:!0});t.wrapperEl.dispatchEvent(e)}))}))}}function pe(e,t,s){const a=`swiper-slide-shadow${s?`-${s}`:""}${e?` swiper-slide-shadow-${e}`:""}`,i=h(t);let r=i.querySelector(`.${a.split(" ").join(".")}`);return r||(r=v("div",a.split(" ")),i.append(r)),r}Object.keys(Q).forEach((e=>{Object.keys(Q[e]).forEach((t=>{ee.prototype[t]=Q[e][t]}))})),ee.use([function(e){let{swiper:t,on:s,emit:a}=e;const i=r();let n=null,l=null;const o=()=>{t&&!t.destroyed&&t.initialized&&(a("beforeResize"),a("resize"))},d=()=>{t&&!t.destroyed&&t.initialized&&a("orientationchange")};s("init",(()=>{t.params.resizeObserver&&void 0!==i.ResizeObserver?t&&!t.destroyed&&t.initialized&&(n=new ResizeObserver((e=>{l=i.requestAnimationFrame((()=>{const{width:s,height:a}=t;let i=s,r=a;e.forEach((e=>{let{contentBoxSize:s,contentRect:a,target:n}=e;n&&n!==t.el||(i=a?a.width:(s[0]||s).inlineSize,r=a?a.height:(s[0]||s).blockSize)})),i===s&&r===a||o()}))})),n.observe(t.el)):(i.addEventListener("resize",o),i.addEventListener("orientationchange",d))})),s("destroy",(()=>{l&&i.cancelAnimationFrame(l),n&&n.unobserve&&t.el&&(n.unobserve(t.el),n=null),i.removeEventListener("resize",o),i.removeEventListener("orientationchange",d)}))},function(e){let{swiper:t,extendParams:s,on:a,emit:i}=e;const n=[],l=r(),o=function(e,s){void 0===s&&(s={});const a=new(l.MutationObserver||l.WebkitMutationObserver)((e=>{if(t.__preventObserver__)return;if(1===e.length)return void i("observerUpdate",e[0]);const s=function(){i("observerUpdate",e[0])};l.requestAnimationFrame?l.requestAnimationFrame(s):l.setTimeout(s,0)}));a.observe(e,{attributes:void 0===s.attributes||s.attributes,childList:void 0===s.childList||s.childList,characterData:void 0===s.characterData||s.characterData}),n.push(a)};s({observer:!1,observeParents:!1,observeSlideChildren:!1}),a("init",(()=>{if(t.params.observer){if(t.params.observeParents){const e=E(t.hostEl);for(let t=0;t<e.length;t+=1)o(e[t])}o(t.hostEl,{childList:t.params.observeSlideChildren}),o(t.wrapperEl,{attributes:!1})}})),a("destroy",(()=>{n.forEach((e=>{e.disconnect()})),n.splice(0,n.length)}))}]);const ue=[function(e){let t,{swiper:s,extendParams:i,on:r,emit:n}=e;i({virtual:{enabled:!1,slides:[],cache:!0,renderSlide:null,renderExternal:null,renderExternalUpdate:!0,addSlidesBefore:0,addSlidesAfter:0}});const l=a();s.virtual={cache:{},from:void 0,to:void 0,slides:[],offset:0,slidesGrid:[]};const o=l.createElement("div");function d(e,t){const a=s.params.virtual;if(a.cache&&s.virtual.cache[t])return s.virtual.cache[t];let i;return a.renderSlide?(i=a.renderSlide.call(s,e,t),"string"==typeof i&&(o.innerHTML=i,i=o.children[0])):i=s.isElement?v("swiper-slide"):v("div",s.params.slideClass),i.setAttribute("data-swiper-slide-index",t),a.renderSlide||(i.innerHTML=e),a.cache&&(s.virtual.cache[t]=i),i}function c(e){const{slidesPerView:t,slidesPerGroup:a,centeredSlides:i,loop:r}=s.params,{addSlidesBefore:l,addSlidesAfter:o}=s.params.virtual,{from:c,to:p,slides:u,slidesGrid:m,offset:h}=s.virtual;s.params.cssMode||s.updateActiveIndex();const g=s.activeIndex||0;let v,w,b;v=s.rtlTranslate?"right":s.isHorizontal()?"left":"top",i?(w=Math.floor(t/2)+a+o,b=Math.floor(t/2)+a+l):(w=t+(a-1)+o,b=(r?t:a)+l);let y=g-b,E=g+w;r||(y=Math.max(y,0),E=Math.min(E,u.length-1));let x=(s.slidesGrid[y]||0)-(s.slidesGrid[0]||0);function S(){s.updateSlides(),s.updateProgress(),s.updateSlidesClasses(),n("virtualUpdate")}if(r&&g>=b?(y-=b,i||(x+=s.slidesGrid[0])):r&&g<b&&(y=-b,i&&(x+=s.slidesGrid[0])),Object.assign(s.virtual,{from:y,to:E,offset:x,slidesGrid:s.slidesGrid,slidesBefore:b,slidesAfter:w}),c===y&&p===E&&!e)return s.slidesGrid!==m&&x!==h&&s.slides.forEach((e=>{e.style[v]=x-Math.abs(s.cssOverflowAdjustment())+"px"})),s.updateProgress(),void n("virtualUpdate");if(s.params.virtual.renderExternal)return s.params.virtual.renderExternal.call(s,{offset:x,from:y,to:E,slides:function(){const e=[];for(let t=y;t<=E;t+=1)e.push(u[t]);return e}()}),void(s.params.virtual.renderExternalUpdate?S():n("virtualUpdate"));const T=[],M=[],C=e=>{let t=e;return e<0?t=u.length+e:t>=u.length&&(t-=u.length),t};if(e)s.slides.filter((e=>e.matches(`.${s.params.slideClass}, swiper-slide`))).forEach((e=>{e.remove()}));else for(let e=c;e<=p;e+=1)if(e<y||e>E){const t=C(e);s.slides.filter((e=>e.matches(`.${s.params.slideClass}[data-swiper-slide-index="${t}"], swiper-slide[data-swiper-slide-index="${t}"]`))).forEach((e=>{e.remove()}))}const P=r?-u.length:0,L=r?2*u.length:u.length;for(let t=P;t<L;t+=1)if(t>=y&&t<=E){const s=C(t);void 0===p||e?M.push(s):(t>p&&M.push(s),t<c&&T.push(s))}if(M.forEach((e=>{s.slidesEl.append(d(u[e],e))})),r)for(let e=T.length-1;e>=0;e-=1){const t=T[e];s.slidesEl.prepend(d(u[t],t))}else T.sort(((e,t)=>t-e)),T.forEach((e=>{s.slidesEl.prepend(d(u[e],e))}));f(s.slidesEl,".swiper-slide, swiper-slide").forEach((e=>{e.style[v]=x-Math.abs(s.cssOverflowAdjustment())+"px"})),S()}r("beforeInit",(()=>{if(!s.params.virtual.enabled)return;let e;if(void 0===s.passedParams.virtual.slides){const t=[...s.slidesEl.children].filter((e=>e.matches(`.${s.params.slideClass}, swiper-slide`)));t&&t.length&&(s.virtual.slides=[...t],e=!0,t.forEach(((e,t)=>{e.setAttribute("data-swiper-slide-index",t),s.virtual.cache[t]=e,e.remove()})))}e||(s.virtual.slides=s.params.virtual.slides),s.classNames.push(`${s.params.containerModifierClass}virtual`),s.params.watchSlidesProgress=!0,s.originalParams.watchSlidesProgress=!0,c()})),r("setTranslate",(()=>{s.params.virtual.enabled&&(s.params.cssMode&&!s._immediateVirtual?(clearTimeout(t),t=setTimeout((()=>{c()}),100)):c())})),r("init update resize",(()=>{s.params.virtual.enabled&&s.params.cssMode&&u(s.wrapperEl,"--swiper-virtual-size",`${s.virtualSize}px`)})),Object.assign(s.virtual,{appendSlide:function(e){if("object"==typeof e&&"length"in e)for(let t=0;t<e.length;t+=1)e[t]&&s.virtual.slides.push(e[t]);else s.virtual.slides.push(e);c(!0)},prependSlide:function(e){const t=s.activeIndex;let a=t+1,i=1;if(Array.isArray(e)){for(let t=0;t<e.length;t+=1)e[t]&&s.virtual.slides.unshift(e[t]);a=t+e.length,i=e.length}else s.virtual.slides.unshift(e);if(s.params.virtual.cache){const e=s.virtual.cache,t={};Object.keys(e).forEach((s=>{const a=e[s],r=a.getAttribute("data-swiper-slide-index");r&&a.setAttribute("data-swiper-slide-index",parseInt(r,10)+i),t[parseInt(s,10)+i]=a})),s.virtual.cache=t}c(!0),s.slideTo(a,0)},removeSlide:function(e){if(null==e)return;let t=s.activeIndex;if(Array.isArray(e))for(let a=e.length-1;a>=0;a-=1)s.params.virtual.cache&&(delete s.virtual.cache[e[a]],Object.keys(s.virtual.cache).forEach((t=>{t>e&&(s.virtual.cache[t-1]=s.virtual.cache[t],s.virtual.cache[t-1].setAttribute("data-swiper-slide-index",t-1),delete s.virtual.cache[t])}))),s.virtual.slides.splice(e[a],1),e[a]<t&&(t-=1),t=Math.max(t,0);else s.params.virtual.cache&&(delete s.virtual.cache[e],Object.keys(s.virtual.cache).forEach((t=>{t>e&&(s.virtual.cache[t-1]=s.virtual.cache[t],s.virtual.cache[t-1].setAttribute("data-swiper-slide-index",t-1),delete s.virtual.cache[t])}))),s.virtual.slides.splice(e,1),e<t&&(t-=1),t=Math.max(t,0);c(!0),s.slideTo(t,0)},removeAllSlides:function(){s.virtual.slides=[],s.params.virtual.cache&&(s.virtual.cache={}),c(!0),s.slideTo(0,0)},update:c})},function(e){let{swiper:t,extendParams:s,on:i,emit:n}=e;const l=a(),o=r();function d(e){if(!t.enabled)return;const{rtlTranslate:s}=t;let a=e;a.originalEvent&&(a=a.originalEvent);const i=a.keyCode||a.charCode,r=t.params.keyboard.pageUpDown,d=r&&33===i,c=r&&34===i,p=37===i,u=39===i,m=38===i,h=40===i;if(!t.allowSlideNext&&(t.isHorizontal()&&u||t.isVertical()&&h||c))return!1;if(!t.allowSlidePrev&&(t.isHorizontal()&&p||t.isVertical()&&m||d))return!1;if(!(a.shiftKey||a.altKey||a.ctrlKey||a.metaKey||l.activeElement&&l.activeElement.nodeName&&("input"===l.activeElement.nodeName.toLowerCase()||"textarea"===l.activeElement.nodeName.toLowerCase()))){if(t.params.keyboard.onlyInViewport&&(d||c||p||u||m||h)){let e=!1;if(E(t.el,`.${t.params.slideClass}, swiper-slide`).length>0&&0===E(t.el,`.${t.params.slideActiveClass}`).length)return;const a=t.el,i=a.clientWidth,r=a.clientHeight,n=o.innerWidth,l=o.innerHeight,d=w(a);s&&(d.left-=a.scrollLeft);const c=[[d.left,d.top],[d.left+i,d.top],[d.left,d.top+r],[d.left+i,d.top+r]];for(let t=0;t<c.length;t+=1){const s=c[t];if(s[0]>=0&&s[0]<=n&&s[1]>=0&&s[1]<=l){if(0===s[0]&&0===s[1])continue;e=!0}}if(!e)return}t.isHorizontal()?((d||c||p||u)&&(a.preventDefault?a.preventDefault():a.returnValue=!1),((c||u)&&!s||(d||p)&&s)&&t.slideNext(),((d||p)&&!s||(c||u)&&s)&&t.slidePrev()):((d||c||m||h)&&(a.preventDefault?a.preventDefault():a.returnValue=!1),(c||h)&&t.slideNext(),(d||m)&&t.slidePrev()),n("keyPress",i)}}function c(){t.keyboard.enabled||(l.addEventListener("keydown",d),t.keyboard.enabled=!0)}function p(){t.keyboard.enabled&&(l.removeEventListener("keydown",d),t.keyboard.enabled=!1)}t.keyboard={enabled:!1},s({keyboard:{enabled:!1,onlyInViewport:!0,pageUpDown:!0}}),i("init",(()=>{t.params.keyboard.enabled&&c()})),i("destroy",(()=>{t.keyboard.enabled&&p()})),Object.assign(t.keyboard,{enable:c,disable:p})},function(e){let{swiper:t,extendParams:s,on:a,emit:i}=e;const n=r();let d;s({mousewheel:{enabled:!1,releaseOnEdges:!1,invert:!1,forceToAxis:!1,sensitivity:1,eventsTarget:"container",thresholdDelta:null,thresholdTime:null,noMousewheelClass:"swiper-no-mousewheel"}}),t.mousewheel={enabled:!1};let c,p=o();const u=[];function m(){t.enabled&&(t.mouseEntered=!0)}function h(){t.enabled&&(t.mouseEntered=!1)}function f(e){return!(t.params.mousewheel.thresholdDelta&&e.delta<t.params.mousewheel.thresholdDelta)&&(!(t.params.mousewheel.thresholdTime&&o()-p<t.params.mousewheel.thresholdTime)&&(e.delta>=6&&o()-p<60||(e.direction<0?t.isEnd&&!t.params.loop||t.animating||(t.slideNext(),i("scroll",e.raw)):t.isBeginning&&!t.params.loop||t.animating||(t.slidePrev(),i("scroll",e.raw)),p=(new n.Date).getTime(),!1)))}function g(e){let s=e,a=!0;if(!t.enabled)return;if(e.target.closest(`.${t.params.mousewheel.noMousewheelClass}`))return;const r=t.params.mousewheel;t.params.cssMode&&s.preventDefault();let n=t.el;"container"!==t.params.mousewheel.eventsTarget&&(n=document.querySelector(t.params.mousewheel.eventsTarget));const p=n&&n.contains(s.target);if(!t.mouseEntered&&!p&&!r.releaseOnEdges)return!0;s.originalEvent&&(s=s.originalEvent);let m=0;const h=t.rtlTranslate?-1:1,g=function(e){let t=0,s=0,a=0,i=0;return"detail"in e&&(s=e.detail),"wheelDelta"in e&&(s=-e.wheelDelta/120),"wheelDeltaY"in e&&(s=-e.wheelDeltaY/120),"wheelDeltaX"in e&&(t=-e.wheelDeltaX/120),"axis"in e&&e.axis===e.HORIZONTAL_AXIS&&(t=s,s=0),a=10*t,i=10*s,"deltaY"in e&&(i=e.deltaY),"deltaX"in e&&(a=e.deltaX),e.shiftKey&&!a&&(a=i,i=0),(a||i)&&e.deltaMode&&(1===e.deltaMode?(a*=40,i*=40):(a*=800,i*=800)),a&&!t&&(t=a<1?-1:1),i&&!s&&(s=i<1?-1:1),{spinX:t,spinY:s,pixelX:a,pixelY:i}}(s);if(r.forceToAxis)if(t.isHorizontal()){if(!(Math.abs(g.pixelX)>Math.abs(g.pixelY)))return!0;m=-g.pixelX*h}else{if(!(Math.abs(g.pixelY)>Math.abs(g.pixelX)))return!0;m=-g.pixelY}else m=Math.abs(g.pixelX)>Math.abs(g.pixelY)?-g.pixelX*h:-g.pixelY;if(0===m)return!0;r.invert&&(m=-m);let v=t.getTranslate()+m*r.sensitivity;if(v>=t.minTranslate()&&(v=t.minTranslate()),v<=t.maxTranslate()&&(v=t.maxTranslate()),a=!!t.params.loop||!(v===t.minTranslate()||v===t.maxTranslate()),a&&t.params.nested&&s.stopPropagation(),t.params.freeMode&&t.params.freeMode.enabled){const e={time:o(),delta:Math.abs(m),direction:Math.sign(m)},a=c&&e.time<c.time+500&&e.delta<=c.delta&&e.direction===c.direction;if(!a){c=void 0;let n=t.getTranslate()+m*r.sensitivity;const o=t.isBeginning,p=t.isEnd;if(n>=t.minTranslate()&&(n=t.minTranslate()),n<=t.maxTranslate()&&(n=t.maxTranslate()),t.setTransition(0),t.setTranslate(n),t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses(),(!o&&t.isBeginning||!p&&t.isEnd)&&t.updateSlidesClasses(),t.params.loop&&t.loopFix({direction:e.direction<0?"next":"prev",byMousewheel:!0}),t.params.freeMode.sticky){clearTimeout(d),d=void 0,u.length>=15&&u.shift();const s=u.length?u[u.length-1]:void 0,a=u[0];if(u.push(e),s&&(e.delta>s.delta||e.direction!==s.direction))u.splice(0);else if(u.length>=15&&e.time-a.time<500&&a.delta-e.delta>=1&&e.delta<=6){const s=m>0?.8:.2;c=e,u.splice(0),d=l((()=>{t.slideToClosest(t.params.speed,!0,void 0,s)}),0)}d||(d=l((()=>{c=e,u.splice(0),t.slideToClosest(t.params.speed,!0,void 0,.5)}),500))}if(a||i("scroll",s),t.params.autoplay&&t.params.autoplayDisableOnInteraction&&t.autoplay.stop(),r.releaseOnEdges&&(n===t.minTranslate()||n===t.maxTranslate()))return!0}}else{const s={time:o(),delta:Math.abs(m),direction:Math.sign(m),raw:e};u.length>=2&&u.shift();const a=u.length?u[u.length-1]:void 0;if(u.push(s),a?(s.direction!==a.direction||s.delta>a.delta||s.time>a.time+150)&&f(s):f(s),function(e){const s=t.params.mousewheel;if(e.direction<0){if(t.isEnd&&!t.params.loop&&s.releaseOnEdges)return!0}else if(t.isBeginning&&!t.params.loop&&s.releaseOnEdges)return!0;return!1}(s))return!0}return s.preventDefault?s.preventDefault():s.returnValue=!1,!1}function v(e){let s=t.el;"container"!==t.params.mousewheel.eventsTarget&&(s=document.querySelector(t.params.mousewheel.eventsTarget)),s[e]("mouseenter",m),s[e]("mouseleave",h),s[e]("wheel",g)}function w(){return t.params.cssMode?(t.wrapperEl.removeEventListener("wheel",g),!0):!t.mousewheel.enabled&&(v("addEventListener"),t.mousewheel.enabled=!0,!0)}function b(){return t.params.cssMode?(t.wrapperEl.addEventListener(event,g),!0):!!t.mousewheel.enabled&&(v("removeEventListener"),t.mousewheel.enabled=!1,!0)}a("init",(()=>{!t.params.mousewheel.enabled&&t.params.cssMode&&b(),t.params.mousewheel.enabled&&w()})),a("destroy",(()=>{t.params.cssMode&&w(),t.mousewheel.enabled&&b()})),Object.assign(t.mousewheel,{enable:w,disable:b})},function(e){let{swiper:t,extendParams:s,on:a,emit:i}=e;s({navigation:{nextEl:null,prevEl:null,hideOnClick:!1,disabledClass:"swiper-button-disabled",hiddenClass:"swiper-button-hidden",lockClass:"swiper-button-lock",navigationDisabledClass:"swiper-navigation-disabled"}}),t.navigation={nextEl:null,prevEl:null};const r=e=>(Array.isArray(e)?e:[e]).filter((e=>!!e));function n(e){let s;return e&&"string"==typeof e&&t.isElement&&(s=t.el.querySelector(e),s)?s:(e&&("string"==typeof e&&(s=[...document.querySelectorAll(e)]),t.params.uniqueNavElements&&"string"==typeof e&&s.length>1&&1===t.el.querySelectorAll(e).length&&(s=t.el.querySelector(e))),e&&!s?e:s)}function l(e,s){const a=t.params.navigation;(e=r(e)).forEach((e=>{e&&(e.classList[s?"add":"remove"](...a.disabledClass.split(" ")),"BUTTON"===e.tagName&&(e.disabled=s),t.params.watchOverflow&&t.enabled&&e.classList[t.isLocked?"add":"remove"](a.lockClass))}))}function o(){const{nextEl:e,prevEl:s}=t.navigation;if(t.params.loop)return l(s,!1),void l(e,!1);l(s,t.isBeginning&&!t.params.rewind),l(e,t.isEnd&&!t.params.rewind)}function d(e){e.preventDefault(),(!t.isBeginning||t.params.loop||t.params.rewind)&&(t.slidePrev(),i("navigationPrev"))}function c(e){e.preventDefault(),(!t.isEnd||t.params.loop||t.params.rewind)&&(t.slideNext(),i("navigationNext"))}function p(){const e=t.params.navigation;if(t.params.navigation=te(t,t.originalParams.navigation,t.params.navigation,{nextEl:"swiper-button-next",prevEl:"swiper-button-prev"}),!e.nextEl&&!e.prevEl)return;let s=n(e.nextEl),a=n(e.prevEl);Object.assign(t.navigation,{nextEl:s,prevEl:a}),s=r(s),a=r(a);const i=(s,a)=>{s&&s.addEventListener("click","next"===a?c:d),!t.enabled&&s&&s.classList.add(...e.lockClass.split(" "))};s.forEach((e=>i(e,"next"))),a.forEach((e=>i(e,"prev")))}function u(){let{nextEl:e,prevEl:s}=t.navigation;e=r(e),s=r(s);const a=(e,s)=>{e.removeEventListener("click","next"===s?c:d),e.classList.remove(...t.params.navigation.disabledClass.split(" "))};e.forEach((e=>a(e,"next"))),s.forEach((e=>a(e,"prev")))}a("init",(()=>{!1===t.params.navigation.enabled?m():(p(),o())})),a("toEdge fromEdge lock unlock",(()=>{o()})),a("destroy",(()=>{u()})),a("enable disable",(()=>{let{nextEl:e,prevEl:s}=t.navigation;e=r(e),s=r(s),t.enabled?o():[...e,...s].filter((e=>!!e)).forEach((e=>e.classList.add(t.params.navigation.lockClass)))})),a("click",((e,s)=>{let{nextEl:a,prevEl:n}=t.navigation;a=r(a),n=r(n);const l=s.target;if(t.params.navigation.hideOnClick&&!n.includes(l)&&!a.includes(l)){if(t.pagination&&t.params.pagination&&t.params.pagination.clickable&&(t.pagination.el===l||t.pagination.el.contains(l)))return;let e;a.length?e=a[0].classList.contains(t.params.navigation.hiddenClass):n.length&&(e=n[0].classList.contains(t.params.navigation.hiddenClass)),i(!0===e?"navigationShow":"navigationHide"),[...a,...n].filter((e=>!!e)).forEach((e=>e.classList.toggle(t.params.navigation.hiddenClass)))}}));const m=()=>{t.el.classList.add(...t.params.navigation.navigationDisabledClass.split(" ")),u()};Object.assign(t.navigation,{enable:()=>{t.el.classList.remove(...t.params.navigation.navigationDisabledClass.split(" ")),p(),o()},disable:m,update:o,init:p,destroy:u})},function(e){let{swiper:t,extendParams:s,on:a,emit:i}=e;const r="swiper-pagination";let n;s({pagination:{el:null,bulletElement:"span",clickable:!1,hideOnClick:!1,renderBullet:null,renderProgressbar:null,renderFraction:null,renderCustom:null,progressbarOpposite:!1,type:"bullets",dynamicBullets:!1,dynamicMainBullets:1,formatFractionCurrent:e=>e,formatFractionTotal:e=>e,bulletClass:`${r}-bullet`,bulletActiveClass:`${r}-bullet-active`,modifierClass:`${r}-`,currentClass:`${r}-current`,totalClass:`${r}-total`,hiddenClass:`${r}-hidden`,progressbarFillClass:`${r}-progressbar-fill`,progressbarOppositeClass:`${r}-progressbar-opposite`,clickableClass:`${r}-clickable`,lockClass:`${r}-lock`,horizontalClass:`${r}-horizontal`,verticalClass:`${r}-vertical`,paginationDisabledClass:`${r}-disabled`}}),t.pagination={el:null,bullets:[]};let l=0;const o=e=>(Array.isArray(e)?e:[e]).filter((e=>!!e));function d(){return!t.params.pagination.el||!t.pagination.el||Array.isArray(t.pagination.el)&&0===t.pagination.el.length}function c(e,s){const{bulletActiveClass:a}=t.params.pagination;e&&(e=e[("prev"===s?"previous":"next")+"ElementSibling"])&&(e.classList.add(`${a}-${s}`),(e=e[("prev"===s?"previous":"next")+"ElementSibling"])&&e.classList.add(`${a}-${s}-${s}`))}function p(e){const s=e.target.closest(se(t.params.pagination.bulletClass));if(!s)return;e.preventDefault();const a=y(s)*t.params.slidesPerGroup;if(t.params.loop){if(t.realIndex===a)return;t.slideToLoop(a)}else t.slideTo(a)}function u(){const e=t.rtl,s=t.params.pagination;if(d())return;let a,r,p=t.pagination.el;p=o(p);const u=t.virtual&&t.params.virtual.enabled?t.virtual.slides.length:t.slides.length,m=t.params.loop?Math.ceil(u/t.params.slidesPerGroup):t.snapGrid.length;if(t.params.loop?(r=t.previousRealIndex||0,a=t.params.slidesPerGroup>1?Math.floor(t.realIndex/t.params.slidesPerGroup):t.realIndex):void 0!==t.snapIndex?(a=t.snapIndex,r=t.previousSnapIndex):(r=t.previousIndex||0,a=t.activeIndex||0),"bullets"===s.type&&t.pagination.bullets&&t.pagination.bullets.length>0){const i=t.pagination.bullets;let o,d,u;if(s.dynamicBullets&&(n=S(i[0],t.isHorizontal()?"width":"height",!0),p.forEach((e=>{e.style[t.isHorizontal()?"width":"height"]=n*(s.dynamicMainBullets+4)+"px"})),s.dynamicMainBullets>1&&void 0!==r&&(l+=a-(r||0),l>s.dynamicMainBullets-1?l=s.dynamicMainBullets-1:l<0&&(l=0)),o=Math.max(a-l,0),d=o+(Math.min(i.length,s.dynamicMainBullets)-1),u=(d+o)/2),i.forEach((e=>{const t=[...["","-next","-next-next","-prev","-prev-prev","-main"].map((e=>`${s.bulletActiveClass}${e}`))].map((e=>"string"==typeof e&&e.includes(" ")?e.split(" "):e)).flat();e.classList.remove(...t)})),p.length>1)i.forEach((e=>{const i=y(e);i===a?e.classList.add(...s.bulletActiveClass.split(" ")):t.isElement&&e.setAttribute("part","bullet"),s.dynamicBullets&&(i>=o&&i<=d&&e.classList.add(...`${s.bulletActiveClass}-main`.split(" ")),i===o&&c(e,"prev"),i===d&&c(e,"next"))}));else{const e=i[a];if(e&&e.classList.add(...s.bulletActiveClass.split(" ")),t.isElement&&i.forEach(((e,t)=>{e.setAttribute("part",t===a?"bullet-active":"bullet")})),s.dynamicBullets){const e=i[o],t=i[d];for(let e=o;e<=d;e+=1)i[e]&&i[e].classList.add(...`${s.bulletActiveClass}-main`.split(" "));c(e,"prev"),c(t,"next")}}if(s.dynamicBullets){const a=Math.min(i.length,s.dynamicMainBullets+4),r=(n*a-n)/2-u*n,l=e?"right":"left";i.forEach((e=>{e.style[t.isHorizontal()?l:"top"]=`${r}px`}))}}p.forEach(((e,r)=>{if("fraction"===s.type&&(e.querySelectorAll(se(s.currentClass)).forEach((e=>{e.textContent=s.formatFractionCurrent(a+1)})),e.querySelectorAll(se(s.totalClass)).forEach((e=>{e.textContent=s.formatFractionTotal(m)}))),"progressbar"===s.type){let i;i=s.progressbarOpposite?t.isHorizontal()?"vertical":"horizontal":t.isHorizontal()?"horizontal":"vertical";const r=(a+1)/m;let n=1,l=1;"horizontal"===i?n=r:l=r,e.querySelectorAll(se(s.progressbarFillClass)).forEach((e=>{e.style.transform=`translate3d(0,0,0) scaleX(${n}) scaleY(${l})`,e.style.transitionDuration=`${t.params.speed}ms`}))}"custom"===s.type&&s.renderCustom?(e.innerHTML=s.renderCustom(t,a+1,m),0===r&&i("paginationRender",e)):(0===r&&i("paginationRender",e),i("paginationUpdate",e)),t.params.watchOverflow&&t.enabled&&e.classList[t.isLocked?"add":"remove"](s.lockClass)}))}function m(){const e=t.params.pagination;if(d())return;const s=t.virtual&&t.params.virtual.enabled?t.virtual.slides.length:t.grid&&t.params.grid.rows>1?t.slides.length/Math.ceil(t.params.grid.rows):t.slides.length;let a=t.pagination.el;a=o(a);let r="";if("bullets"===e.type){let a=t.params.loop?Math.ceil(s/t.params.slidesPerGroup):t.snapGrid.length;t.params.freeMode&&t.params.freeMode.enabled&&a>s&&(a=s);for(let s=0;s<a;s+=1)e.renderBullet?r+=e.renderBullet.call(t,s,e.bulletClass):r+=`<${e.bulletElement} ${t.isElement?'part="bullet"':""} class="${e.bulletClass}"></${e.bulletElement}>`}"fraction"===e.type&&(r=e.renderFraction?e.renderFraction.call(t,e.currentClass,e.totalClass):`<span class="${e.currentClass}"></span> / <span class="${e.totalClass}"></span>`),"progressbar"===e.type&&(r=e.renderProgressbar?e.renderProgressbar.call(t,e.progressbarFillClass):`<span class="${e.progressbarFillClass}"></span>`),t.pagination.bullets=[],a.forEach((s=>{"custom"!==e.type&&(s.innerHTML=r||""),"bullets"===e.type&&t.pagination.bullets.push(...s.querySelectorAll(se(e.bulletClass)))})),"custom"!==e.type&&i("paginationRender",a[0])}function h(){t.params.pagination=te(t,t.originalParams.pagination,t.params.pagination,{el:"swiper-pagination"});const e=t.params.pagination;if(!e.el)return;let s;"string"==typeof e.el&&t.isElement&&(s=t.el.querySelector(e.el)),s||"string"!=typeof e.el||(s=[...document.querySelectorAll(e.el)]),s||(s=e.el),s&&0!==s.length&&(t.params.uniqueNavElements&&"string"==typeof e.el&&Array.isArray(s)&&s.length>1&&(s=[...t.el.querySelectorAll(e.el)],s.length>1&&(s=s.filter((e=>E(e,".swiper")[0]===t.el))[0])),Array.isArray(s)&&1===s.length&&(s=s[0]),Object.assign(t.pagination,{el:s}),s=o(s),s.forEach((s=>{"bullets"===e.type&&e.clickable&&s.classList.add(...(e.clickableClass||"").split(" ")),s.classList.add(e.modifierClass+e.type),s.classList.add(t.isHorizontal()?e.horizontalClass:e.verticalClass),"bullets"===e.type&&e.dynamicBullets&&(s.classList.add(`${e.modifierClass}${e.type}-dynamic`),l=0,e.dynamicMainBullets<1&&(e.dynamicMainBullets=1)),"progressbar"===e.type&&e.progressbarOpposite&&s.classList.add(e.progressbarOppositeClass),e.clickable&&s.addEventListener("click",p),t.enabled||s.classList.add(e.lockClass)})))}function f(){const e=t.params.pagination;if(d())return;let s=t.pagination.el;s&&(s=o(s),s.forEach((s=>{s.classList.remove(e.hiddenClass),s.classList.remove(e.modifierClass+e.type),s.classList.remove(t.isHorizontal()?e.horizontalClass:e.verticalClass),e.clickable&&(s.classList.remove(...(e.clickableClass||"").split(" ")),s.removeEventListener("click",p))}))),t.pagination.bullets&&t.pagination.bullets.forEach((t=>t.classList.remove(...e.bulletActiveClass.split(" "))))}a("changeDirection",(()=>{if(!t.pagination||!t.pagination.el)return;const e=t.params.pagination;let{el:s}=t.pagination;s=o(s),s.forEach((s=>{s.classList.remove(e.horizontalClass,e.verticalClass),s.classList.add(t.isHorizontal()?e.horizontalClass:e.verticalClass)}))})),a("init",(()=>{!1===t.params.pagination.enabled?g():(h(),m(),u())})),a("activeIndexChange",(()=>{void 0===t.snapIndex&&u()})),a("snapIndexChange",(()=>{u()})),a("snapGridLengthChange",(()=>{m(),u()})),a("destroy",(()=>{f()})),a("enable disable",(()=>{let{el:e}=t.pagination;e&&(e=o(e),e.forEach((e=>e.classList[t.enabled?"remove":"add"](t.params.pagination.lockClass))))})),a("lock unlock",(()=>{u()})),a("click",((e,s)=>{const a=s.target,r=o(t.pagination.el);if(t.params.pagination.el&&t.params.pagination.hideOnClick&&r&&r.length>0&&!a.classList.contains(t.params.pagination.bulletClass)){if(t.navigation&&(t.navigation.nextEl&&a===t.navigation.nextEl||t.navigation.prevEl&&a===t.navigation.prevEl))return;const e=r[0].classList.contains(t.params.pagination.hiddenClass);i(!0===e?"paginationShow":"paginationHide"),r.forEach((e=>e.classList.toggle(t.params.pagination.hiddenClass)))}}));const g=()=>{t.el.classList.add(t.params.pagination.paginationDisabledClass);let{el:e}=t.pagination;e&&(e=o(e),e.forEach((e=>e.classList.add(t.params.pagination.paginationDisabledClass)))),f()};Object.assign(t.pagination,{enable:()=>{t.el.classList.remove(t.params.pagination.paginationDisabledClass);let{el:e}=t.pagination;e&&(e=o(e),e.forEach((e=>e.classList.remove(t.params.pagination.paginationDisabledClass)))),h(),m(),u()},disable:g,render:m,update:u,init:h,destroy:f})},function(e){let{swiper:t,extendParams:s,on:i,emit:r}=e;const o=a();let d,c,p,u,m=!1,h=null,f=null;function g(){if(!t.params.scrollbar.el||!t.scrollbar.el)return;const{scrollbar:e,rtlTranslate:s}=t,{dragEl:a,el:i}=e,r=t.params.scrollbar,n=t.params.loop?t.progressLoop:t.progress;let l=c,o=(p-c)*n;s?(o=-o,o>0?(l=c-o,o=0):-o+c>p&&(l=p+o)):o<0?(l=c+o,o=0):o+c>p&&(l=p-o),t.isHorizontal()?(a.style.transform=`translate3d(${o}px, 0, 0)`,a.style.width=`${l}px`):(a.style.transform=`translate3d(0px, ${o}px, 0)`,a.style.height=`${l}px`),r.hide&&(clearTimeout(h),i.style.opacity=1,h=setTimeout((()=>{i.style.opacity=0,i.style.transitionDuration="400ms"}),1e3))}function b(){if(!t.params.scrollbar.el||!t.scrollbar.el)return;const{scrollbar:e}=t,{dragEl:s,el:a}=e;s.style.width="",s.style.height="",p=t.isHorizontal()?a.offsetWidth:a.offsetHeight,u=t.size/(t.virtualSize+t.params.slidesOffsetBefore-(t.params.centeredSlides?t.snapGrid[0]:0)),c="auto"===t.params.scrollbar.dragSize?p*u:parseInt(t.params.scrollbar.dragSize,10),t.isHorizontal()?s.style.width=`${c}px`:s.style.height=`${c}px`,a.style.display=u>=1?"none":"",t.params.scrollbar.hide&&(a.style.opacity=0),t.params.watchOverflow&&t.enabled&&e.el.classList[t.isLocked?"add":"remove"](t.params.scrollbar.lockClass)}function y(e){return t.isHorizontal()?e.clientX:e.clientY}function E(e){const{scrollbar:s,rtlTranslate:a}=t,{el:i}=s;let r;r=(y(e)-w(i)[t.isHorizontal()?"left":"top"]-(null!==d?d:c/2))/(p-c),r=Math.max(Math.min(r,1),0),a&&(r=1-r);const n=t.minTranslate()+(t.maxTranslate()-t.minTranslate())*r;t.updateProgress(n),t.setTranslate(n),t.updateActiveIndex(),t.updateSlidesClasses()}function x(e){const s=t.params.scrollbar,{scrollbar:a,wrapperEl:i}=t,{el:n,dragEl:l}=a;m=!0,d=e.target===l?y(e)-e.target.getBoundingClientRect()[t.isHorizontal()?"left":"top"]:null,e.preventDefault(),e.stopPropagation(),i.style.transitionDuration="100ms",l.style.transitionDuration="100ms",E(e),clearTimeout(f),n.style.transitionDuration="0ms",s.hide&&(n.style.opacity=1),t.params.cssMode&&(t.wrapperEl.style["scroll-snap-type"]="none"),r("scrollbarDragStart",e)}function S(e){const{scrollbar:s,wrapperEl:a}=t,{el:i,dragEl:n}=s;m&&(e.preventDefault?e.preventDefault():e.returnValue=!1,E(e),a.style.transitionDuration="0ms",i.style.transitionDuration="0ms",n.style.transitionDuration="0ms",r("scrollbarDragMove",e))}function T(e){const s=t.params.scrollbar,{scrollbar:a,wrapperEl:i}=t,{el:n}=a;m&&(m=!1,t.params.cssMode&&(t.wrapperEl.style["scroll-snap-type"]="",i.style.transitionDuration=""),s.hide&&(clearTimeout(f),f=l((()=>{n.style.opacity=0,n.style.transitionDuration="400ms"}),1e3)),r("scrollbarDragEnd",e),s.snapOnRelease&&t.slideToClosest())}function M(e){const{scrollbar:s,params:a}=t,i=s.el;if(!i)return;const r=i,n=!!a.passiveListeners&&{passive:!1,capture:!1},l=!!a.passiveListeners&&{passive:!0,capture:!1};if(!r)return;const d="on"===e?"addEventListener":"removeEventListener";r[d]("pointerdown",x,n),o[d]("pointermove",S,n),o[d]("pointerup",T,l)}function C(){const{scrollbar:e,el:s}=t;t.params.scrollbar=te(t,t.originalParams.scrollbar,t.params.scrollbar,{el:"swiper-scrollbar"});const a=t.params.scrollbar;if(!a.el)return;let i,r;if("string"==typeof a.el&&t.isElement&&(i=t.el.querySelector(a.el)),i||"string"!=typeof a.el)i||(i=a.el);else if(i=o.querySelectorAll(a.el),!i.length)return;t.params.uniqueNavElements&&"string"==typeof a.el&&i.length>1&&1===s.querySelectorAll(a.el).length&&(i=s.querySelector(a.el)),i.length>0&&(i=i[0]),i.classList.add(t.isHorizontal()?a.horizontalClass:a.verticalClass),i&&(r=i.querySelector(se(t.params.scrollbar.dragClass)),r||(r=v("div",t.params.scrollbar.dragClass),i.append(r))),Object.assign(e,{el:i,dragEl:r}),a.draggable&&t.params.scrollbar.el&&t.scrollbar.el&&M("on"),i&&i.classList[t.enabled?"remove":"add"](...n(t.params.scrollbar.lockClass))}function P(){const e=t.params.scrollbar,s=t.scrollbar.el;s&&s.classList.remove(...n(t.isHorizontal()?e.horizontalClass:e.verticalClass)),t.params.scrollbar.el&&t.scrollbar.el&&M("off")}s({scrollbar:{el:null,dragSize:"auto",hide:!1,draggable:!1,snapOnRelease:!0,lockClass:"swiper-scrollbar-lock",dragClass:"swiper-scrollbar-drag",scrollbarDisabledClass:"swiper-scrollbar-disabled",horizontalClass:"swiper-scrollbar-horizontal",verticalClass:"swiper-scrollbar-vertical"}}),t.scrollbar={el:null,dragEl:null},i("init",(()=>{!1===t.params.scrollbar.enabled?L():(C(),b(),g())})),i("update resize observerUpdate lock unlock",(()=>{b()})),i("setTranslate",(()=>{g()})),i("setTransition",((e,s)=>{!function(e){t.params.scrollbar.el&&t.scrollbar.el&&(t.scrollbar.dragEl.style.transitionDuration=`${e}ms`)}(s)})),i("enable disable",(()=>{const{el:e}=t.scrollbar;e&&e.classList[t.enabled?"remove":"add"](...n(t.params.scrollbar.lockClass))})),i("destroy",(()=>{P()}));const L=()=>{t.el.classList.add(...n(t.params.scrollbar.scrollbarDisabledClass)),t.scrollbar.el&&t.scrollbar.el.classList.add(...n(t.params.scrollbar.scrollbarDisabledClass)),P()};Object.assign(t.scrollbar,{enable:()=>{t.el.classList.remove(...n(t.params.scrollbar.scrollbarDisabledClass)),t.scrollbar.el&&t.scrollbar.el.classList.remove(...n(t.params.scrollbar.scrollbarDisabledClass)),C(),b(),g()},disable:L,updateSize:b,setTranslate:g,init:C,destroy:P})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({parallax:{enabled:!1}});const i="[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]",r=(e,s)=>{const{rtl:a}=t,i=a?-1:1,r=e.getAttribute("data-swiper-parallax")||"0";let n=e.getAttribute("data-swiper-parallax-x"),l=e.getAttribute("data-swiper-parallax-y");const o=e.getAttribute("data-swiper-parallax-scale"),d=e.getAttribute("data-swiper-parallax-opacity"),c=e.getAttribute("data-swiper-parallax-rotate");if(n||l?(n=n||"0",l=l||"0"):t.isHorizontal()?(n=r,l="0"):(l=r,n="0"),n=n.indexOf("%")>=0?parseInt(n,10)*s*i+"%":n*s*i+"px",l=l.indexOf("%")>=0?parseInt(l,10)*s+"%":l*s+"px",null!=d){const t=d-(d-1)*(1-Math.abs(s));e.style.opacity=t}let p=`translate3d(${n}, ${l}, 0px)`;if(null!=o){p+=` scale(${o-(o-1)*(1-Math.abs(s))})`}if(c&&null!=c){p+=` rotate(${c*s*-1}deg)`}e.style.transform=p},n=()=>{const{el:e,slides:s,progress:a,snapGrid:n,isElement:l}=t,o=f(e,i);t.isElement&&o.push(...f(t.hostEl,i)),o.forEach((e=>{r(e,a)})),s.forEach(((e,s)=>{let l=e.progress;t.params.slidesPerGroup>1&&"auto"!==t.params.slidesPerView&&(l+=Math.ceil(s/2)-a*(n.length-1)),l=Math.min(Math.max(l,-1),1),e.querySelectorAll(`${i}, [data-swiper-parallax-rotate]`).forEach((e=>{r(e,l)}))}))};a("beforeInit",(()=>{t.params.parallax.enabled&&(t.params.watchSlidesProgress=!0,t.originalParams.watchSlidesProgress=!0)})),a("init",(()=>{t.params.parallax.enabled&&n()})),a("setTranslate",(()=>{t.params.parallax.enabled&&n()})),a("setTransition",((e,s)=>{t.params.parallax.enabled&&function(e){void 0===e&&(e=t.params.speed);const{el:s,hostEl:a}=t,r=[...s.querySelectorAll(i)];t.isElement&&r.push(...a.querySelectorAll(i)),r.forEach((t=>{let s=parseInt(t.getAttribute("data-swiper-parallax-duration"),10)||e;0===e&&(s=0),t.style.transitionDuration=`${s}ms`}))}(s)}))},function(e){let{swiper:t,extendParams:s,on:a,emit:i}=e;const n=r();s({zoom:{enabled:!1,maxRatio:3,minRatio:1,toggle:!0,containerClass:"swiper-zoom-container",zoomedSlideClass:"swiper-slide-zoomed"}}),t.zoom={enabled:!1};let l,o,c=1,p=!1;const u=[],m={originX:0,originY:0,slideEl:void 0,slideWidth:void 0,slideHeight:void 0,imageEl:void 0,imageWrapEl:void 0,maxRatio:3},h={isTouched:void 0,isMoved:void 0,currentX:void 0,currentY:void 0,minX:void 0,minY:void 0,maxX:void 0,maxY:void 0,width:void 0,height:void 0,startX:void 0,startY:void 0,touchesStart:{},touchesCurrent:{}},g={x:void 0,y:void 0,prevPositionX:void 0,prevPositionY:void 0,prevTime:void 0};let v=1;function b(){if(u.length<2)return 1;const e=u[0].pageX,t=u[0].pageY,s=u[1].pageX,a=u[1].pageY;return Math.sqrt((s-e)**2+(a-t)**2)}function y(e){const s=t.isElement?"swiper-slide":`.${t.params.slideClass}`;return!!e.target.matches(s)||t.slides.filter((t=>t.contains(e.target))).length>0}function x(e){if("mouse"===e.pointerType&&u.splice(0,u.length),!y(e))return;const s=t.params.zoom;if(l=!1,o=!1,u.push(e),!(u.length<2)){if(l=!0,m.scaleStart=b(),!m.slideEl){m.slideEl=e.target.closest(`.${t.params.slideClass}, swiper-slide`),m.slideEl||(m.slideEl=t.slides[t.activeIndex]);let a=m.slideEl.querySelector(`.${s.containerClass}`);if(a&&(a=a.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0]),m.imageEl=a,m.imageWrapEl=a?E(m.imageEl,`.${s.containerClass}`)[0]:void 0,!m.imageWrapEl)return void(m.imageEl=void 0);m.maxRatio=m.imageWrapEl.getAttribute("data-swiper-zoom")||s.maxRatio}if(m.imageEl){const[e,t]=function(){if(u.length<2)return{x:null,y:null};const e=m.imageEl.getBoundingClientRect();return[(u[0].pageX+(u[1].pageX-u[0].pageX)/2-e.x-n.scrollX)/c,(u[0].pageY+(u[1].pageY-u[0].pageY)/2-e.y-n.scrollY)/c]}();m.originX=e,m.originY=t,m.imageEl.style.transitionDuration="0ms"}p=!0}}function S(e){if(!y(e))return;const s=t.params.zoom,a=t.zoom,i=u.findIndex((t=>t.pointerId===e.pointerId));i>=0&&(u[i]=e),u.length<2||(o=!0,m.scaleMove=b(),m.imageEl&&(a.scale=m.scaleMove/m.scaleStart*c,a.scale>m.maxRatio&&(a.scale=m.maxRatio-1+(a.scale-m.maxRatio+1)**.5),a.scale<s.minRatio&&(a.scale=s.minRatio+1-(s.minRatio-a.scale+1)**.5),m.imageEl.style.transform=`translate3d(0,0,0) scale(${a.scale})`))}function T(e){if(!y(e))return;if("mouse"===e.pointerType&&"pointerout"===e.type)return;const s=t.params.zoom,a=t.zoom,i=u.findIndex((t=>t.pointerId===e.pointerId));i>=0&&u.splice(i,1),l&&o&&(l=!1,o=!1,m.imageEl&&(a.scale=Math.max(Math.min(a.scale,m.maxRatio),s.minRatio),m.imageEl.style.transitionDuration=`${t.params.speed}ms`,m.imageEl.style.transform=`translate3d(0,0,0) scale(${a.scale})`,c=a.scale,p=!1,a.scale>1&&m.slideEl?m.slideEl.classList.add(`${s.zoomedSlideClass}`):a.scale<=1&&m.slideEl&&m.slideEl.classList.remove(`${s.zoomedSlideClass}`),1===a.scale&&(m.originX=0,m.originY=0,m.slideEl=void 0)))}function M(e){if(!y(e)||!function(e){const s=`.${t.params.zoom.containerClass}`;return!!e.target.matches(s)||[...t.hostEl.querySelectorAll(s)].filter((t=>t.contains(e.target))).length>0}(e))return;const s=t.zoom;if(!m.imageEl)return;if(!h.isTouched||!m.slideEl)return;h.isMoved||(h.width=m.imageEl.offsetWidth,h.height=m.imageEl.offsetHeight,h.startX=d(m.imageWrapEl,"x")||0,h.startY=d(m.imageWrapEl,"y")||0,m.slideWidth=m.slideEl.offsetWidth,m.slideHeight=m.slideEl.offsetHeight,m.imageWrapEl.style.transitionDuration="0ms");const a=h.width*s.scale,i=h.height*s.scale;if(a<m.slideWidth&&i<m.slideHeight)return;h.minX=Math.min(m.slideWidth/2-a/2,0),h.maxX=-h.minX,h.minY=Math.min(m.slideHeight/2-i/2,0),h.maxY=-h.minY,h.touchesCurrent.x=u.length>0?u[0].pageX:e.pageX,h.touchesCurrent.y=u.length>0?u[0].pageY:e.pageY;if(Math.max(Math.abs(h.touchesCurrent.x-h.touchesStart.x),Math.abs(h.touchesCurrent.y-h.touchesStart.y))>5&&(t.allowClick=!1),!h.isMoved&&!p){if(t.isHorizontal()&&(Math.floor(h.minX)===Math.floor(h.startX)&&h.touchesCurrent.x<h.touchesStart.x||Math.floor(h.maxX)===Math.floor(h.startX)&&h.touchesCurrent.x>h.touchesStart.x))return void(h.isTouched=!1);if(!t.isHorizontal()&&(Math.floor(h.minY)===Math.floor(h.startY)&&h.touchesCurrent.y<h.touchesStart.y||Math.floor(h.maxY)===Math.floor(h.startY)&&h.touchesCurrent.y>h.touchesStart.y))return void(h.isTouched=!1)}e.cancelable&&e.preventDefault(),e.stopPropagation(),h.isMoved=!0;const r=(s.scale-c)/(m.maxRatio-t.params.zoom.minRatio),{originX:n,originY:l}=m;h.currentX=h.touchesCurrent.x-h.touchesStart.x+h.startX+r*(h.width-2*n),h.currentY=h.touchesCurrent.y-h.touchesStart.y+h.startY+r*(h.height-2*l),h.currentX<h.minX&&(h.currentX=h.minX+1-(h.minX-h.currentX+1)**.8),h.currentX>h.maxX&&(h.currentX=h.maxX-1+(h.currentX-h.maxX+1)**.8),h.currentY<h.minY&&(h.currentY=h.minY+1-(h.minY-h.currentY+1)**.8),h.currentY>h.maxY&&(h.currentY=h.maxY-1+(h.currentY-h.maxY+1)**.8),g.prevPositionX||(g.prevPositionX=h.touchesCurrent.x),g.prevPositionY||(g.prevPositionY=h.touchesCurrent.y),g.prevTime||(g.prevTime=Date.now()),g.x=(h.touchesCurrent.x-g.prevPositionX)/(Date.now()-g.prevTime)/2,g.y=(h.touchesCurrent.y-g.prevPositionY)/(Date.now()-g.prevTime)/2,Math.abs(h.touchesCurrent.x-g.prevPositionX)<2&&(g.x=0),Math.abs(h.touchesCurrent.y-g.prevPositionY)<2&&(g.y=0),g.prevPositionX=h.touchesCurrent.x,g.prevPositionY=h.touchesCurrent.y,g.prevTime=Date.now(),m.imageWrapEl.style.transform=`translate3d(${h.currentX}px, ${h.currentY}px,0)`}function C(){const e=t.zoom;m.slideEl&&t.activeIndex!==t.slides.indexOf(m.slideEl)&&(m.imageEl&&(m.imageEl.style.transform="translate3d(0,0,0) scale(1)"),m.imageWrapEl&&(m.imageWrapEl.style.transform="translate3d(0,0,0)"),m.slideEl.classList.remove(`${t.params.zoom.zoomedSlideClass}`),e.scale=1,c=1,m.slideEl=void 0,m.imageEl=void 0,m.imageWrapEl=void 0,m.originX=0,m.originY=0)}function P(e){const s=t.zoom,a=t.params.zoom;if(!m.slideEl){e&&e.target&&(m.slideEl=e.target.closest(`.${t.params.slideClass}, swiper-slide`)),m.slideEl||(t.params.virtual&&t.params.virtual.enabled&&t.virtual?m.slideEl=f(t.slidesEl,`.${t.params.slideActiveClass}`)[0]:m.slideEl=t.slides[t.activeIndex]);let s=m.slideEl.querySelector(`.${a.containerClass}`);s&&(s=s.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0]),m.imageEl=s,m.imageWrapEl=s?E(m.imageEl,`.${a.containerClass}`)[0]:void 0}if(!m.imageEl||!m.imageWrapEl)return;let i,r,l,o,d,p,u,g,v,b,y,x,S,T,M,C,P,L;t.params.cssMode&&(t.wrapperEl.style.overflow="hidden",t.wrapperEl.style.touchAction="none"),m.slideEl.classList.add(`${a.zoomedSlideClass}`),void 0===h.touchesStart.x&&e?(i=e.pageX,r=e.pageY):(i=h.touchesStart.x,r=h.touchesStart.y);const A="number"==typeof e?e:null;1===c&&A&&(i=void 0,r=void 0),s.scale=A||m.imageWrapEl.getAttribute("data-swiper-zoom")||a.maxRatio,c=A||m.imageWrapEl.getAttribute("data-swiper-zoom")||a.maxRatio,!e||1===c&&A?(u=0,g=0):(P=m.slideEl.offsetWidth,L=m.slideEl.offsetHeight,l=w(m.slideEl).left+n.scrollX,o=w(m.slideEl).top+n.scrollY,d=l+P/2-i,p=o+L/2-r,v=m.imageEl.offsetWidth,b=m.imageEl.offsetHeight,y=v*s.scale,x=b*s.scale,S=Math.min(P/2-y/2,0),T=Math.min(L/2-x/2,0),M=-S,C=-T,u=d*s.scale,g=p*s.scale,u<S&&(u=S),u>M&&(u=M),g<T&&(g=T),g>C&&(g=C)),A&&1===s.scale&&(m.originX=0,m.originY=0),m.imageWrapEl.style.transitionDuration="300ms",m.imageWrapEl.style.transform=`translate3d(${u}px, ${g}px,0)`,m.imageEl.style.transitionDuration="300ms",m.imageEl.style.transform=`translate3d(0,0,0) scale(${s.scale})`}function L(){const e=t.zoom,s=t.params.zoom;if(!m.slideEl){t.params.virtual&&t.params.virtual.enabled&&t.virtual?m.slideEl=f(t.slidesEl,`.${t.params.slideActiveClass}`)[0]:m.slideEl=t.slides[t.activeIndex];let e=m.slideEl.querySelector(`.${s.containerClass}`);e&&(e=e.querySelectorAll("picture, img, svg, canvas, .swiper-zoom-target")[0]),m.imageEl=e,m.imageWrapEl=e?E(m.imageEl,`.${s.containerClass}`)[0]:void 0}m.imageEl&&m.imageWrapEl&&(t.params.cssMode&&(t.wrapperEl.style.overflow="",t.wrapperEl.style.touchAction=""),e.scale=1,c=1,m.imageWrapEl.style.transitionDuration="300ms",m.imageWrapEl.style.transform="translate3d(0,0,0)",m.imageEl.style.transitionDuration="300ms",m.imageEl.style.transform="translate3d(0,0,0) scale(1)",m.slideEl.classList.remove(`${s.zoomedSlideClass}`),m.slideEl=void 0,m.originX=0,m.originY=0)}function A(e){const s=t.zoom;s.scale&&1!==s.scale?L():P(e)}function I(){return{passiveListener:!!t.params.passiveListeners&&{passive:!0,capture:!1},activeListenerWithCapture:!t.params.passiveListeners||{passive:!1,capture:!0}}}function z(){const e=t.zoom;if(e.enabled)return;e.enabled=!0;const{passiveListener:s,activeListenerWithCapture:a}=I();t.wrapperEl.addEventListener("pointerdown",x,s),t.wrapperEl.addEventListener("pointermove",S,a),["pointerup","pointercancel","pointerout"].forEach((e=>{t.wrapperEl.addEventListener(e,T,s)})),t.wrapperEl.addEventListener("pointermove",M,a)}function $(){const e=t.zoom;if(!e.enabled)return;e.enabled=!1;const{passiveListener:s,activeListenerWithCapture:a}=I();t.wrapperEl.removeEventListener("pointerdown",x,s),t.wrapperEl.removeEventListener("pointermove",S,a),["pointerup","pointercancel","pointerout"].forEach((e=>{t.wrapperEl.removeEventListener(e,T,s)})),t.wrapperEl.removeEventListener("pointermove",M,a)}Object.defineProperty(t.zoom,"scale",{get:()=>v,set(e){if(v!==e){const t=m.imageEl,s=m.slideEl;i("zoomChange",e,t,s)}v=e}}),a("init",(()=>{t.params.zoom.enabled&&z()})),a("destroy",(()=>{$()})),a("touchStart",((e,s)=>{t.zoom.enabled&&function(e){const s=t.device;if(!m.imageEl)return;if(h.isTouched)return;s.android&&e.cancelable&&e.preventDefault(),h.isTouched=!0;const a=u.length>0?u[0]:e;h.touchesStart.x=a.pageX,h.touchesStart.y=a.pageY}(s)})),a("touchEnd",((e,s)=>{t.zoom.enabled&&function(){const e=t.zoom;if(!m.imageEl)return;if(!h.isTouched||!h.isMoved)return h.isTouched=!1,void(h.isMoved=!1);h.isTouched=!1,h.isMoved=!1;let s=300,a=300;const i=g.x*s,r=h.currentX+i,n=g.y*a,l=h.currentY+n;0!==g.x&&(s=Math.abs((r-h.currentX)/g.x)),0!==g.y&&(a=Math.abs((l-h.currentY)/g.y));const o=Math.max(s,a);h.currentX=r,h.currentY=l;const d=h.width*e.scale,c=h.height*e.scale;h.minX=Math.min(m.slideWidth/2-d/2,0),h.maxX=-h.minX,h.minY=Math.min(m.slideHeight/2-c/2,0),h.maxY=-h.minY,h.currentX=Math.max(Math.min(h.currentX,h.maxX),h.minX),h.currentY=Math.max(Math.min(h.currentY,h.maxY),h.minY),m.imageWrapEl.style.transitionDuration=`${o}ms`,m.imageWrapEl.style.transform=`translate3d(${h.currentX}px, ${h.currentY}px,0)`}()})),a("doubleTap",((e,s)=>{!t.animating&&t.params.zoom.enabled&&t.zoom.enabled&&t.params.zoom.toggle&&A(s)})),a("transitionEnd",(()=>{t.zoom.enabled&&t.params.zoom.enabled&&C()})),a("slideChange",(()=>{t.zoom.enabled&&t.params.zoom.enabled&&t.params.cssMode&&C()})),Object.assign(t.zoom,{enable:z,disable:$,in:P,out:L,toggle:A})},function(e){let{swiper:t,extendParams:s,on:a}=e;function i(e,t){const s=function(){let e,t,s;return(a,i)=>{for(t=-1,e=a.length;e-t>1;)s=e+t>>1,a[s]<=i?t=s:e=s;return e}}();let a,i;return this.x=e,this.y=t,this.lastIndex=e.length-1,this.interpolate=function(e){return e?(i=s(this.x,e),a=i-1,(e-this.x[a])*(this.y[i]-this.y[a])/(this.x[i]-this.x[a])+this.y[a]):0},this}function r(){t.controller.control&&t.controller.spline&&(t.controller.spline=void 0,delete t.controller.spline)}s({controller:{control:void 0,inverse:!1,by:"slide"}}),t.controller={control:void 0},a("beforeInit",(()=>{if("undefined"!=typeof window&&("string"==typeof t.params.controller.control||t.params.controller.control instanceof HTMLElement)){const e=document.querySelector(t.params.controller.control);if(e&&e.swiper)t.controller.control=e.swiper;else if(e){const s=a=>{t.controller.control=a.detail[0],t.update(),e.removeEventListener("init",s)};e.addEventListener("init",s)}}else t.controller.control=t.params.controller.control})),a("update",(()=>{r()})),a("resize",(()=>{r()})),a("observerUpdate",(()=>{r()})),a("setTranslate",((e,s,a)=>{t.controller.control&&!t.controller.control.destroyed&&t.controller.setTranslate(s,a)})),a("setTransition",((e,s,a)=>{t.controller.control&&!t.controller.control.destroyed&&t.controller.setTransition(s,a)})),Object.assign(t.controller,{setTranslate:function(e,s){const a=t.controller.control;let r,n;const l=t.constructor;function o(e){if(e.destroyed)return;const s=t.rtlTranslate?-t.translate:t.translate;"slide"===t.params.controller.by&&(!function(e){t.controller.spline=t.params.loop?new i(t.slidesGrid,e.slidesGrid):new i(t.snapGrid,e.snapGrid)}(e),n=-t.controller.spline.interpolate(-s)),n&&"container"!==t.params.controller.by||(r=(e.maxTranslate()-e.minTranslate())/(t.maxTranslate()-t.minTranslate()),!Number.isNaN(r)&&Number.isFinite(r)||(r=1),n=(s-t.minTranslate())*r+e.minTranslate()),t.params.controller.inverse&&(n=e.maxTranslate()-n),e.updateProgress(n),e.setTranslate(n,t),e.updateActiveIndex(),e.updateSlidesClasses()}if(Array.isArray(a))for(let e=0;e<a.length;e+=1)a[e]!==s&&a[e]instanceof l&&o(a[e]);else a instanceof l&&s!==a&&o(a)},setTransition:function(e,s){const a=t.constructor,i=t.controller.control;let r;function n(s){s.destroyed||(s.setTransition(e,t),0!==e&&(s.transitionStart(),s.params.autoHeight&&l((()=>{s.updateAutoHeight()})),x(s.wrapperEl,(()=>{i&&s.transitionEnd()}))))}if(Array.isArray(i))for(r=0;r<i.length;r+=1)i[r]!==s&&i[r]instanceof a&&n(i[r]);else i instanceof a&&s!==i&&n(i)}})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({a11y:{enabled:!0,notificationClass:"swiper-notification",prevSlideMessage:"Previous slide",nextSlideMessage:"Next slide",firstSlideMessage:"This is the first slide",lastSlideMessage:"This is the last slide",paginationBulletMessage:"Go to slide {{index}}",slideLabelMessage:"{{index}} / {{slidesLength}}",containerMessage:null,containerRoleDescriptionMessage:null,itemRoleDescriptionMessage:null,slideRole:"group",id:null}}),t.a11y={clicked:!1};let i=null;function r(e){const t=i;0!==t.length&&(t.innerHTML="",t.innerHTML=e)}const n=e=>(Array.isArray(e)?e:[e]).filter((e=>!!e));function l(e){(e=n(e)).forEach((e=>{e.setAttribute("tabIndex","0")}))}function o(e){(e=n(e)).forEach((e=>{e.setAttribute("tabIndex","-1")}))}function d(e,t){(e=n(e)).forEach((e=>{e.setAttribute("role",t)}))}function c(e,t){(e=n(e)).forEach((e=>{e.setAttribute("aria-roledescription",t)}))}function p(e,t){(e=n(e)).forEach((e=>{e.setAttribute("aria-label",t)}))}function u(e){(e=n(e)).forEach((e=>{e.setAttribute("aria-disabled",!0)}))}function m(e){(e=n(e)).forEach((e=>{e.setAttribute("aria-disabled",!1)}))}function h(e){if(13!==e.keyCode&&32!==e.keyCode)return;const s=t.params.a11y,a=e.target;t.pagination&&t.pagination.el&&(a===t.pagination.el||t.pagination.el.contains(e.target))&&!e.target.matches(se(t.params.pagination.bulletClass))||(t.navigation&&t.navigation.nextEl&&a===t.navigation.nextEl&&(t.isEnd&&!t.params.loop||t.slideNext(),t.isEnd?r(s.lastSlideMessage):r(s.nextSlideMessage)),t.navigation&&t.navigation.prevEl&&a===t.navigation.prevEl&&(t.isBeginning&&!t.params.loop||t.slidePrev(),t.isBeginning?r(s.firstSlideMessage):r(s.prevSlideMessage)),t.pagination&&a.matches(se(t.params.pagination.bulletClass))&&a.click())}function f(){return t.pagination&&t.pagination.bullets&&t.pagination.bullets.length}function g(){return f()&&t.params.pagination.clickable}const w=(e,t,s)=>{l(e),"BUTTON"!==e.tagName&&(d(e,"button"),e.addEventListener("keydown",h)),p(e,s),function(e,t){(e=n(e)).forEach((e=>{e.setAttribute("aria-controls",t)}))}(e,t)},b=()=>{t.a11y.clicked=!0},E=()=>{requestAnimationFrame((()=>{requestAnimationFrame((()=>{t.destroyed||(t.a11y.clicked=!1)}))}))},x=e=>{if(t.a11y.clicked)return;const s=e.target.closest(`.${t.params.slideClass}, swiper-slide`);if(!s||!t.slides.includes(s))return;const a=t.slides.indexOf(s)===t.activeIndex,i=t.params.watchSlidesProgress&&t.visibleSlides&&t.visibleSlides.includes(s);a||i||e.sourceCapabilities&&e.sourceCapabilities.firesTouchEvents||(t.isHorizontal()?t.el.scrollLeft=0:t.el.scrollTop=0,t.slideTo(t.slides.indexOf(s),0))},S=()=>{const e=t.params.a11y;e.itemRoleDescriptionMessage&&c(t.slides,e.itemRoleDescriptionMessage),e.slideRole&&d(t.slides,e.slideRole);const s=t.slides.length;e.slideLabelMessage&&t.slides.forEach(((a,i)=>{const r=t.params.loop?parseInt(a.getAttribute("data-swiper-slide-index"),10):i;p(a,e.slideLabelMessage.replace(/\{\{index\}\}/,r+1).replace(/\{\{slidesLength\}\}/,s))}))},T=()=>{const e=t.params.a11y;t.el.append(i);const s=t.el;e.containerRoleDescriptionMessage&&c(s,e.containerRoleDescriptionMessage),e.containerMessage&&p(s,e.containerMessage);const a=t.wrapperEl,r=e.id||a.getAttribute("id")||`swiper-wrapper-${l=16,void 0===l&&(l=16),"x".repeat(l).replace(/x/g,(()=>Math.round(16*Math.random()).toString(16)))}`;var l;const o=t.params.autoplay&&t.params.autoplay.enabled?"off":"polite";var d;d=r,n(a).forEach((e=>{e.setAttribute("id",d)})),function(e,t){(e=n(e)).forEach((e=>{e.setAttribute("aria-live",t)}))}(a,o),S();let{nextEl:u,prevEl:m}=t.navigation?t.navigation:{};if(u=n(u),m=n(m),u&&u.forEach((t=>w(t,r,e.nextSlideMessage))),m&&m.forEach((t=>w(t,r,e.prevSlideMessage))),g()){n(t.pagination.el).forEach((e=>{e.addEventListener("keydown",h)}))}t.el.addEventListener("focus",x,!0),t.el.addEventListener("pointerdown",b,!0),t.el.addEventListener("pointerup",E,!0)};a("beforeInit",(()=>{i=v("span",t.params.a11y.notificationClass),i.setAttribute("aria-live","assertive"),i.setAttribute("aria-atomic","true")})),a("afterInit",(()=>{t.params.a11y.enabled&&T()})),a("slidesLengthChange snapGridLengthChange slidesGridLengthChange",(()=>{t.params.a11y.enabled&&S()})),a("fromEdge toEdge afterInit lock unlock",(()=>{t.params.a11y.enabled&&function(){if(t.params.loop||t.params.rewind||!t.navigation)return;const{nextEl:e,prevEl:s}=t.navigation;s&&(t.isBeginning?(u(s),o(s)):(m(s),l(s))),e&&(t.isEnd?(u(e),o(e)):(m(e),l(e)))}()})),a("paginationUpdate",(()=>{t.params.a11y.enabled&&function(){const e=t.params.a11y;f()&&t.pagination.bullets.forEach((s=>{t.params.pagination.clickable&&(l(s),t.params.pagination.renderBullet||(d(s,"button"),p(s,e.paginationBulletMessage.replace(/\{\{index\}\}/,y(s)+1)))),s.matches(se(t.params.pagination.bulletActiveClass))?s.setAttribute("aria-current","true"):s.removeAttribute("aria-current")}))}()})),a("destroy",(()=>{t.params.a11y.enabled&&function(){i&&i.remove();let{nextEl:e,prevEl:s}=t.navigation?t.navigation:{};e=n(e),s=n(s),e&&e.forEach((e=>e.removeEventListener("keydown",h))),s&&s.forEach((e=>e.removeEventListener("keydown",h))),g()&&n(t.pagination.el).forEach((e=>{e.removeEventListener("keydown",h)}));t.el.removeEventListener("focus",x,!0),t.el.removeEventListener("pointerdown",b,!0),t.el.removeEventListener("pointerup",E,!0)}()}))},function(e){let{swiper:t,extendParams:s,on:a}=e;s({history:{enabled:!1,root:"",replaceState:!1,key:"slides",keepQuery:!1}});let i=!1,n={};const l=e=>e.toString().replace(/\s+/g,"-").replace(/[^\w-]+/g,"").replace(/--+/g,"-").replace(/^-+/,"").replace(/-+$/,""),o=e=>{const t=r();let s;s=e?new URL(e):t.location;const a=s.pathname.slice(1).split("/").filter((e=>""!==e)),i=a.length;return{key:a[i-2],value:a[i-1]}},d=(e,s)=>{const a=r();if(!i||!t.params.history.enabled)return;let n;n=t.params.url?new URL(t.params.url):a.location;const o=t.slides[s];let d=l(o.getAttribute("data-history"));if(t.params.history.root.length>0){let s=t.params.history.root;"/"===s[s.length-1]&&(s=s.slice(0,s.length-1)),d=`${s}/${e?`${e}/`:""}${d}`}else n.pathname.includes(e)||(d=`${e?`${e}/`:""}${d}`);t.params.history.keepQuery&&(d+=n.search);const c=a.history.state;c&&c.value===d||(t.params.history.replaceState?a.history.replaceState({value:d},null,d):a.history.pushState({value:d},null,d))},c=(e,s,a)=>{if(s)for(let i=0,r=t.slides.length;i<r;i+=1){const r=t.slides[i];if(l(r.getAttribute("data-history"))===s){const s=t.getSlideIndex(r);t.slideTo(s,e,a)}}else t.slideTo(0,e,a)},p=()=>{n=o(t.params.url),c(t.params.speed,n.value,!1)};a("init",(()=>{t.params.history.enabled&&(()=>{const e=r();if(t.params.history){if(!e.history||!e.history.pushState)return t.params.history.enabled=!1,void(t.params.hashNavigation.enabled=!0);i=!0,n=o(t.params.url),n.key||n.value?(c(0,n.value,t.params.runCallbacksOnInit),t.params.history.replaceState||e.addEventListener("popstate",p)):t.params.history.replaceState||e.addEventListener("popstate",p)}})()})),a("destroy",(()=>{t.params.history.enabled&&(()=>{const e=r();t.params.history.replaceState||e.removeEventListener("popstate",p)})()})),a("transitionEnd _freeModeNoMomentumRelease",(()=>{i&&d(t.params.history.key,t.activeIndex)})),a("slideChange",(()=>{i&&t.params.cssMode&&d(t.params.history.key,t.activeIndex)}))},function(e){let{swiper:t,extendParams:s,emit:i,on:n}=e,l=!1;const o=a(),d=r();s({hashNavigation:{enabled:!1,replaceState:!1,watchState:!1,getSlideIndex(e,s){if(t.virtual&&t.params.virtual.enabled){const e=t.slides.filter((e=>e.getAttribute("data-hash")===s))[0];if(!e)return 0;return parseInt(e.getAttribute("data-swiper-slide-index"),10)}return t.getSlideIndex(f(t.slidesEl,`.${t.params.slideClass}[data-hash="${s}"], swiper-slide[data-hash="${s}"]`)[0])}}});const c=()=>{i("hashChange");const e=o.location.hash.replace("#",""),s=t.virtual&&t.params.virtual.enabled?t.slidesEl.querySelector(`[data-swiper-slide-index="${t.activeIndex}"]`):t.slides[t.activeIndex];if(e!==(s?s.getAttribute("data-hash"):"")){const s=t.params.hashNavigation.getSlideIndex(t,e);if(void 0===s||Number.isNaN(s))return;t.slideTo(s)}},p=()=>{if(!l||!t.params.hashNavigation.enabled)return;const e=t.virtual&&t.params.virtual.enabled?t.slidesEl.querySelector(`[data-swiper-slide-index="${t.activeIndex}"]`):t.slides[t.activeIndex],s=e?e.getAttribute("data-hash")||e.getAttribute("data-history"):"";t.params.hashNavigation.replaceState&&d.history&&d.history.replaceState?(d.history.replaceState(null,null,`#${s}`||""),i("hashSet")):(o.location.hash=s||"",i("hashSet"))};n("init",(()=>{t.params.hashNavigation.enabled&&(()=>{if(!t.params.hashNavigation.enabled||t.params.history&&t.params.history.enabled)return;l=!0;const e=o.location.hash.replace("#","");if(e){const s=0,a=t.params.hashNavigation.getSlideIndex(t,e);t.slideTo(a||0,s,t.params.runCallbacksOnInit,!0)}t.params.hashNavigation.watchState&&d.addEventListener("hashchange",c)})()})),n("destroy",(()=>{t.params.hashNavigation.enabled&&t.params.hashNavigation.watchState&&d.removeEventListener("hashchange",c)})),n("transitionEnd _freeModeNoMomentumRelease",(()=>{l&&p()})),n("slideChange",(()=>{l&&t.params.cssMode&&p()}))},function(e){let t,s,{swiper:i,extendParams:r,on:n,emit:l,params:o}=e;i.autoplay={running:!1,paused:!1,timeLeft:0},r({autoplay:{enabled:!1,delay:3e3,waitForTransition:!0,disableOnInteraction:!1,stopOnLastSlide:!1,reverseDirection:!1,pauseOnMouseEnter:!1}});let d,c,p,u,m,h,f,g,v=o&&o.autoplay?o.autoplay.delay:3e3,w=o&&o.autoplay?o.autoplay.delay:3e3,b=(new Date).getTime();function y(e){i&&!i.destroyed&&i.wrapperEl&&e.target===i.wrapperEl&&(i.wrapperEl.removeEventListener("transitionend",y),g||C())}const E=()=>{if(i.destroyed||!i.autoplay.running)return;i.autoplay.paused?c=!0:c&&(w=d,c=!1);const e=i.autoplay.paused?d:b+w-(new Date).getTime();i.autoplay.timeLeft=e,l("autoplayTimeLeft",e,e/v),s=requestAnimationFrame((()=>{E()}))},x=e=>{if(i.destroyed||!i.autoplay.running)return;cancelAnimationFrame(s),E();let a=void 0===e?i.params.autoplay.delay:e;v=i.params.autoplay.delay,w=i.params.autoplay.delay;const r=(()=>{let e;if(e=i.virtual&&i.params.virtual.enabled?i.slides.filter((e=>e.classList.contains("swiper-slide-active")))[0]:i.slides[i.activeIndex],!e)return;return parseInt(e.getAttribute("data-swiper-autoplay"),10)})();!Number.isNaN(r)&&r>0&&void 0===e&&(a=r,v=r,w=r),d=a;const n=i.params.speed,o=()=>{i&&!i.destroyed&&(i.params.autoplay.reverseDirection?!i.isBeginning||i.params.loop||i.params.rewind?(i.slidePrev(n,!0,!0),l("autoplay")):i.params.autoplay.stopOnLastSlide||(i.slideTo(i.slides.length-1,n,!0,!0),l("autoplay")):!i.isEnd||i.params.loop||i.params.rewind?(i.slideNext(n,!0,!0),l("autoplay")):i.params.autoplay.stopOnLastSlide||(i.slideTo(0,n,!0,!0),l("autoplay")),i.params.cssMode&&(b=(new Date).getTime(),requestAnimationFrame((()=>{x()}))))};return a>0?(clearTimeout(t),t=setTimeout((()=>{o()}),a)):requestAnimationFrame((()=>{o()})),a},S=()=>{b=(new Date).getTime(),i.autoplay.running=!0,x(),l("autoplayStart")},T=()=>{i.autoplay.running=!1,clearTimeout(t),cancelAnimationFrame(s),l("autoplayStop")},M=(e,s)=>{if(i.destroyed||!i.autoplay.running)return;clearTimeout(t),e||(f=!0);const a=()=>{l("autoplayPause"),i.params.autoplay.waitForTransition?i.wrapperEl.addEventListener("transitionend",y):C()};if(i.autoplay.paused=!0,s)return h&&(d=i.params.autoplay.delay),h=!1,void a();const r=d||i.params.autoplay.delay;d=r-((new Date).getTime()-b),i.isEnd&&d<0&&!i.params.loop||(d<0&&(d=0),a())},C=()=>{i.isEnd&&d<0&&!i.params.loop||i.destroyed||!i.autoplay.running||(b=(new Date).getTime(),f?(f=!1,x(d)):x(),i.autoplay.paused=!1,l("autoplayResume"))},P=()=>{if(i.destroyed||!i.autoplay.running)return;const e=a();"hidden"===e.visibilityState&&(f=!0,M(!0)),"visible"===e.visibilityState&&C()},L=e=>{"mouse"===e.pointerType&&(f=!0,g=!0,i.animating||i.autoplay.paused||M(!0))},A=e=>{"mouse"===e.pointerType&&(g=!1,i.autoplay.paused&&C())};n("init",(()=>{i.params.autoplay.enabled&&(i.params.autoplay.pauseOnMouseEnter&&(i.el.addEventListener("pointerenter",L),i.el.addEventListener("pointerleave",A)),a().addEventListener("visibilitychange",P),S())})),n("destroy",(()=>{i.el.removeEventListener("pointerenter",L),i.el.removeEventListener("pointerleave",A),a().removeEventListener("visibilitychange",P),i.autoplay.running&&T()})),n("_freeModeStaticRelease",(()=>{(u||f)&&C()})),n("_freeModeNoMomentumRelease",(()=>{i.params.autoplay.disableOnInteraction?T():M(!0,!0)})),n("beforeTransitionStart",((e,t,s)=>{!i.destroyed&&i.autoplay.running&&(s||!i.params.autoplay.disableOnInteraction?M(!0,!0):T())})),n("sliderFirstMove",(()=>{!i.destroyed&&i.autoplay.running&&(i.params.autoplay.disableOnInteraction?T():(p=!0,u=!1,f=!1,m=setTimeout((()=>{f=!0,u=!0,M(!0)}),200)))})),n("touchEnd",(()=>{if(!i.destroyed&&i.autoplay.running&&p){if(clearTimeout(m),clearTimeout(t),i.params.autoplay.disableOnInteraction)return u=!1,void(p=!1);u&&i.params.cssMode&&C(),u=!1,p=!1}})),n("slideChange",(()=>{!i.destroyed&&i.autoplay.running&&(h=!0)})),Object.assign(i.autoplay,{start:S,stop:T,pause:M,resume:C})},function(e){let{swiper:t,extendParams:s,on:i}=e;s({thumbs:{swiper:null,multipleActiveThumbs:!0,autoScrollOffset:0,slideThumbActiveClass:"swiper-slide-thumb-active",thumbsContainerClass:"swiper-thumbs"}});let r=!1,n=!1;function l(){const e=t.thumbs.swiper;if(!e||e.destroyed)return;const s=e.clickedIndex,a=e.clickedSlide;if(a&&a.classList.contains(t.params.thumbs.slideThumbActiveClass))return;if(null==s)return;let i;i=e.params.loop?parseInt(e.clickedSlide.getAttribute("data-swiper-slide-index"),10):s,t.params.loop?t.slideToLoop(i):t.slideTo(i)}function o(){const{thumbs:e}=t.params;if(r)return!1;r=!0;const s=t.constructor;if(e.swiper instanceof s)t.thumbs.swiper=e.swiper,Object.assign(t.thumbs.swiper.originalParams,{watchSlidesProgress:!0,slideToClickedSlide:!1}),Object.assign(t.thumbs.swiper.params,{watchSlidesProgress:!0,slideToClickedSlide:!1}),t.thumbs.swiper.update();else if(c(e.swiper)){const a=Object.assign({},e.swiper);Object.assign(a,{watchSlidesProgress:!0,slideToClickedSlide:!1}),t.thumbs.swiper=new s(a),n=!0}return t.thumbs.swiper.el.classList.add(t.params.thumbs.thumbsContainerClass),t.thumbs.swiper.on("tap",l),!0}function d(e){const s=t.thumbs.swiper;if(!s||s.destroyed)return;const a="auto"===s.params.slidesPerView?s.slidesPerViewDynamic():s.params.slidesPerView;let i=1;const r=t.params.thumbs.slideThumbActiveClass;if(t.params.slidesPerView>1&&!t.params.centeredSlides&&(i=t.params.slidesPerView),t.params.thumbs.multipleActiveThumbs||(i=1),i=Math.floor(i),s.slides.forEach((e=>e.classList.remove(r))),s.params.loop||s.params.virtual&&s.params.virtual.enabled)for(let e=0;e<i;e+=1)f(s.slidesEl,`[data-swiper-slide-index="${t.realIndex+e}"]`).forEach((e=>{e.classList.add(r)}));else for(let e=0;e<i;e+=1)s.slides[t.realIndex+e]&&s.slides[t.realIndex+e].classList.add(r);const n=t.params.thumbs.autoScrollOffset,l=n&&!s.params.loop;if(t.realIndex!==s.realIndex||l){const i=s.activeIndex;let r,o;if(s.params.loop){const e=s.slides.filter((e=>e.getAttribute("data-swiper-slide-index")===`${t.realIndex}`))[0];r=s.slides.indexOf(e),o=t.activeIndex>t.previousIndex?"next":"prev"}else r=t.realIndex,o=r>t.previousIndex?"next":"prev";l&&(r+="next"===o?n:-1*n),s.visibleSlidesIndexes&&s.visibleSlidesIndexes.indexOf(r)<0&&(s.params.centeredSlides?r=r>i?r-Math.floor(a/2)+1:r+Math.floor(a/2)-1:r>i&&s.params.slidesPerGroup,s.slideTo(r,e?0:void 0))}}t.thumbs={swiper:null},i("beforeInit",(()=>{const{thumbs:e}=t.params;if(e&&e.swiper)if("string"==typeof e.swiper||e.swiper instanceof HTMLElement){const s=a(),i=()=>{const a="string"==typeof e.swiper?s.querySelector(e.swiper):e.swiper;if(a&&a.swiper)e.swiper=a.swiper,o(),d(!0);else if(a){const s=i=>{e.swiper=i.detail[0],a.removeEventListener("init",s),o(),d(!0),e.swiper.update(),t.update()};a.addEventListener("init",s)}return a},r=()=>{if(t.destroyed)return;i()||requestAnimationFrame(r)};requestAnimationFrame(r)}else o(),d(!0)})),i("slideChange update resize observerUpdate",(()=>{d()})),i("setTransition",((e,s)=>{const a=t.thumbs.swiper;a&&!a.destroyed&&a.setTransition(s)})),i("beforeDestroy",(()=>{const e=t.thumbs.swiper;e&&!e.destroyed&&n&&e.destroy()})),Object.assign(t.thumbs,{init:o,update:d})},function(e){let{swiper:t,extendParams:s,emit:a,once:i}=e;s({freeMode:{enabled:!1,momentum:!0,momentumRatio:1,momentumBounce:!0,momentumBounceRatio:1,momentumVelocityRatio:1,sticky:!1,minimumVelocity:.02}}),Object.assign(t,{freeMode:{onTouchStart:function(){if(t.params.cssMode)return;const e=t.getTranslate();t.setTranslate(e),t.setTransition(0),t.touchEventsData.velocities.length=0,t.freeMode.onTouchEnd({currentPos:t.rtl?t.translate:-t.translate})},onTouchMove:function(){if(t.params.cssMode)return;const{touchEventsData:e,touches:s}=t;0===e.velocities.length&&e.velocities.push({position:s[t.isHorizontal()?"startX":"startY"],time:e.touchStartTime}),e.velocities.push({position:s[t.isHorizontal()?"currentX":"currentY"],time:o()})},onTouchEnd:function(e){let{currentPos:s}=e;if(t.params.cssMode)return;const{params:r,wrapperEl:n,rtlTranslate:l,snapGrid:d,touchEventsData:c}=t,p=o()-c.touchStartTime;if(s<-t.minTranslate())t.slideTo(t.activeIndex);else if(s>-t.maxTranslate())t.slides.length<d.length?t.slideTo(d.length-1):t.slideTo(t.slides.length-1);else{if(r.freeMode.momentum){if(c.velocities.length>1){const e=c.velocities.pop(),s=c.velocities.pop(),a=e.position-s.position,i=e.time-s.time;t.velocity=a/i,t.velocity/=2,Math.abs(t.velocity)<r.freeMode.minimumVelocity&&(t.velocity=0),(i>150||o()-e.time>300)&&(t.velocity=0)}else t.velocity=0;t.velocity*=r.freeMode.momentumVelocityRatio,c.velocities.length=0;let e=1e3*r.freeMode.momentumRatio;const s=t.velocity*e;let p=t.translate+s;l&&(p=-p);let u,m=!1;const h=20*Math.abs(t.velocity)*r.freeMode.momentumBounceRatio;let f;if(p<t.maxTranslate())r.freeMode.momentumBounce?(p+t.maxTranslate()<-h&&(p=t.maxTranslate()-h),u=t.maxTranslate(),m=!0,c.allowMomentumBounce=!0):p=t.maxTranslate(),r.loop&&r.centeredSlides&&(f=!0);else if(p>t.minTranslate())r.freeMode.momentumBounce?(p-t.minTranslate()>h&&(p=t.minTranslate()+h),u=t.minTranslate(),m=!0,c.allowMomentumBounce=!0):p=t.minTranslate(),r.loop&&r.centeredSlides&&(f=!0);else if(r.freeMode.sticky){let e;for(let t=0;t<d.length;t+=1)if(d[t]>-p){e=t;break}p=Math.abs(d[e]-p)<Math.abs(d[e-1]-p)||"next"===t.swipeDirection?d[e]:d[e-1],p=-p}if(f&&i("transitionEnd",(()=>{t.loopFix()})),0!==t.velocity){if(e=l?Math.abs((-p-t.translate)/t.velocity):Math.abs((p-t.translate)/t.velocity),r.freeMode.sticky){const s=Math.abs((l?-p:p)-t.translate),a=t.slidesSizesGrid[t.activeIndex];e=s<a?r.speed:s<2*a?1.5*r.speed:2.5*r.speed}}else if(r.freeMode.sticky)return void t.slideToClosest();r.freeMode.momentumBounce&&m?(t.updateProgress(u),t.setTransition(e),t.setTranslate(p),t.transitionStart(!0,t.swipeDirection),t.animating=!0,x(n,(()=>{t&&!t.destroyed&&c.allowMomentumBounce&&(a("momentumBounce"),t.setTransition(r.speed),setTimeout((()=>{t.setTranslate(u),x(n,(()=>{t&&!t.destroyed&&t.transitionEnd()}))}),0))}))):t.velocity?(a("_freeModeNoMomentumRelease"),t.updateProgress(p),t.setTransition(e),t.setTranslate(p),t.transitionStart(!0,t.swipeDirection),t.animating||(t.animating=!0,x(n,(()=>{t&&!t.destroyed&&t.transitionEnd()})))):t.updateProgress(p),t.updateActiveIndex(),t.updateSlidesClasses()}else{if(r.freeMode.sticky)return void t.slideToClosest();r.freeMode&&a("_freeModeNoMomentumRelease")}(!r.freeMode.momentum||p>=r.longSwipesMs)&&(a("_freeModeStaticRelease"),t.updateProgress(),t.updateActiveIndex(),t.updateSlidesClasses())}}}})},function(e){let t,s,a,i,{swiper:r,extendParams:n,on:l}=e;n({grid:{rows:1,fill:"column"}});const o=()=>{let e=r.params.spaceBetween;return"string"==typeof e&&e.indexOf("%")>=0?e=parseFloat(e.replace("%",""))/100*r.size:"string"==typeof e&&(e=parseFloat(e)),e};l("init",(()=>{i=r.params.grid&&r.params.grid.rows>1})),l("update",(()=>{const{params:e,el:t}=r,s=e.grid&&e.grid.rows>1;i&&!s?(t.classList.remove(`${e.containerModifierClass}grid`,`${e.containerModifierClass}grid-column`),a=1,r.emitContainerClasses()):!i&&s&&(t.classList.add(`${e.containerModifierClass}grid`),"column"===e.grid.fill&&t.classList.add(`${e.containerModifierClass}grid-column`),r.emitContainerClasses()),i=s})),r.grid={initSlides:e=>{const{slidesPerView:i}=r.params,{rows:n,fill:l}=r.params.grid,o=r.virtual&&r.params.virtual.enabled?r.virtual.slides.length:e.length;a=Math.floor(o/n),t=Math.floor(o/n)===o/n?o:Math.ceil(o/n)*n,"auto"!==i&&"row"===l&&(t=Math.max(t,i*n)),s=t/n},unsetSlides:()=>{r.slides&&r.slides.forEach((e=>{e.swiperSlideGridSet&&(e.style.height="",e.style[r.getDirectionLabel("margin-top")]="")}))},updateSlide:(e,i,n)=>{const{slidesPerGroup:l}=r.params,d=o(),{rows:c,fill:p}=r.params.grid,u=r.virtual&&r.params.virtual.enabled?r.virtual.slides.length:n.length;let m,h,f;if("row"===p&&l>1){const s=Math.floor(e/(l*c)),a=e-c*l*s,r=0===s?l:Math.min(Math.ceil((u-s*c*l)/c),l);f=Math.floor(a/r),h=a-f*r+s*l,m=h+f*t/c,i.style.order=m}else"column"===p?(h=Math.floor(e/c),f=e-h*c,(h>a||h===a&&f===c-1)&&(f+=1,f>=c&&(f=0,h+=1))):(f=Math.floor(e/s),h=e-f*s);i.row=f,i.column=h,i.style.height=`calc((100% - ${(c-1)*d}px) / ${c})`,i.style[r.getDirectionLabel("margin-top")]=0!==f?d&&`${d}px`:"",i.swiperSlideGridSet=!0},updateWrapperSize:(e,s)=>{const{centeredSlides:a,roundLengths:i}=r.params,n=o(),{rows:l}=r.params.grid;if(r.virtualSize=(e+n)*t,r.virtualSize=Math.ceil(r.virtualSize/l)-n,r.params.cssMode||(r.wrapperEl.style[r.getDirectionLabel("width")]=`${r.virtualSize+n}px`),a){const e=[];for(let t=0;t<s.length;t+=1){let a=s[t];i&&(a=Math.floor(a)),s[t]<r.virtualSize+s[0]&&e.push(a)}s.splice(0,s.length),s.push(...e)}}}},function(e){let{swiper:t}=e;Object.assign(t,{appendSlide:ae.bind(t),prependSlide:ie.bind(t),addSlide:re.bind(t),removeSlide:ne.bind(t),removeAllSlides:le.bind(t)})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({fadeEffect:{crossFade:!1}}),oe({effect:"fade",swiper:t,on:a,setTranslate:()=>{const{slides:e}=t;t.params.fadeEffect;for(let s=0;s<e.length;s+=1){const e=t.slides[s];let a=-e.swiperSlideOffset;t.params.virtualTranslate||(a-=t.translate);let i=0;t.isHorizontal()||(i=a,a=0);const r=t.params.fadeEffect.crossFade?Math.max(1-Math.abs(e.progress),0):1+Math.min(Math.max(e.progress,-1),0),n=de(0,e);n.style.opacity=r,n.style.transform=`translate3d(${a}px, ${i}px, 0px)`}},setTransition:e=>{const s=t.slides.map((e=>h(e)));s.forEach((t=>{t.style.transitionDuration=`${e}ms`})),ce({swiper:t,duration:e,transformElements:s,allSlides:!0})},overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!t.params.cssMode})})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({cubeEffect:{slideShadows:!0,shadow:!0,shadowOffset:20,shadowScale:.94}});const i=(e,t,s)=>{let a=s?e.querySelector(".swiper-slide-shadow-left"):e.querySelector(".swiper-slide-shadow-top"),i=s?e.querySelector(".swiper-slide-shadow-right"):e.querySelector(".swiper-slide-shadow-bottom");a||(a=v("div",("swiper-slide-shadow-cube swiper-slide-shadow-"+(s?"left":"top")).split(" ")),e.append(a)),i||(i=v("div",("swiper-slide-shadow-cube swiper-slide-shadow-"+(s?"right":"bottom")).split(" ")),e.append(i)),a&&(a.style.opacity=Math.max(-t,0)),i&&(i.style.opacity=Math.max(t,0))};oe({effect:"cube",swiper:t,on:a,setTranslate:()=>{const{el:e,wrapperEl:s,slides:a,width:r,height:n,rtlTranslate:l,size:o,browser:d}=t,c=t.params.cubeEffect,p=t.isHorizontal(),u=t.virtual&&t.params.virtual.enabled;let m,h=0;c.shadow&&(p?(m=t.wrapperEl.querySelector(".swiper-cube-shadow"),m||(m=v("div","swiper-cube-shadow"),t.wrapperEl.append(m)),m.style.height=`${r}px`):(m=e.querySelector(".swiper-cube-shadow"),m||(m=v("div","swiper-cube-shadow"),e.append(m))));for(let e=0;e<a.length;e+=1){const s=a[e];let r=e;u&&(r=parseInt(s.getAttribute("data-swiper-slide-index"),10));let n=90*r,d=Math.floor(n/360);l&&(n=-n,d=Math.floor(-n/360));const m=Math.max(Math.min(s.progress,1),-1);let f=0,g=0,v=0;r%4==0?(f=4*-d*o,v=0):(r-1)%4==0?(f=0,v=4*-d*o):(r-2)%4==0?(f=o+4*d*o,v=o):(r-3)%4==0&&(f=-o,v=3*o+4*o*d),l&&(f=-f),p||(g=f,f=0);const w=`rotateX(${p?0:-n}deg) rotateY(${p?n:0}deg) translate3d(${f}px, ${g}px, ${v}px)`;m<=1&&m>-1&&(h=90*r+90*m,l&&(h=90*-r-90*m),t.browser&&t.browser.isSafari&&Math.abs(h)/90%2==1&&(h+=.001)),s.style.transform=w,c.slideShadows&&i(s,m,p)}if(s.style.transformOrigin=`50% 50% -${o/2}px`,s.style["-webkit-transform-origin"]=`50% 50% -${o/2}px`,c.shadow)if(p)m.style.transform=`translate3d(0px, ${r/2+c.shadowOffset}px, ${-r/2}px) rotateX(89.99deg) rotateZ(0deg) scale(${c.shadowScale})`;else{const e=Math.abs(h)-90*Math.floor(Math.abs(h)/90),t=1.5-(Math.sin(2*e*Math.PI/360)/2+Math.cos(2*e*Math.PI/360)/2),s=c.shadowScale,a=c.shadowScale/t,i=c.shadowOffset;m.style.transform=`scale3d(${s}, 1, ${a}) translate3d(0px, ${n/2+i}px, ${-n/2/a}px) rotateX(-89.99deg)`}const f=(d.isSafari||d.isWebView)&&d.needPerspectiveFix?-o/2:0;s.style.transform=`translate3d(0px,0,${f}px) rotateX(${t.isHorizontal()?0:h}deg) rotateY(${t.isHorizontal()?-h:0}deg)`,s.style.setProperty("--swiper-cube-translate-z",`${f}px`)},setTransition:e=>{const{el:s,slides:a}=t;if(a.forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach((t=>{t.style.transitionDuration=`${e}ms`}))})),t.params.cubeEffect.shadow&&!t.isHorizontal()){const t=s.querySelector(".swiper-cube-shadow");t&&(t.style.transitionDuration=`${e}ms`)}},recreateShadows:()=>{const e=t.isHorizontal();t.slides.forEach((t=>{const s=Math.max(Math.min(t.progress,1),-1);i(t,s,e)}))},getEffectParams:()=>t.params.cubeEffect,perspective:()=>!0,overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,resistanceRatio:0,spaceBetween:0,centeredSlides:!1,virtualTranslate:!0})})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({flipEffect:{slideShadows:!0,limitRotation:!0}});const i=(e,s)=>{let a=t.isHorizontal()?e.querySelector(".swiper-slide-shadow-left"):e.querySelector(".swiper-slide-shadow-top"),i=t.isHorizontal()?e.querySelector(".swiper-slide-shadow-right"):e.querySelector(".swiper-slide-shadow-bottom");a||(a=pe("flip",e,t.isHorizontal()?"left":"top")),i||(i=pe("flip",e,t.isHorizontal()?"right":"bottom")),a&&(a.style.opacity=Math.max(-s,0)),i&&(i.style.opacity=Math.max(s,0))};oe({effect:"flip",swiper:t,on:a,setTranslate:()=>{const{slides:e,rtlTranslate:s}=t,a=t.params.flipEffect;for(let r=0;r<e.length;r+=1){const n=e[r];let l=n.progress;t.params.flipEffect.limitRotation&&(l=Math.max(Math.min(n.progress,1),-1));const o=n.swiperSlideOffset;let d=-180*l,c=0,p=t.params.cssMode?-o-t.translate:-o,u=0;t.isHorizontal()?s&&(d=-d):(u=p,p=0,c=-d,d=0),t.browser&&t.browser.isSafari&&(Math.abs(d)/90%2==1&&(d+=.001),Math.abs(c)/90%2==1&&(c+=.001)),n.style.zIndex=-Math.abs(Math.round(l))+e.length,a.slideShadows&&i(n,l);const m=`translate3d(${p}px, ${u}px, 0px) rotateX(${c}deg) rotateY(${d}deg)`;de(0,n).style.transform=m}},setTransition:e=>{const s=t.slides.map((e=>h(e)));s.forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach((t=>{t.style.transitionDuration=`${e}ms`}))})),ce({swiper:t,duration:e,transformElements:s})},recreateShadows:()=>{t.params.flipEffect,t.slides.forEach((e=>{let s=e.progress;t.params.flipEffect.limitRotation&&(s=Math.max(Math.min(e.progress,1),-1)),i(e,s)}))},getEffectParams:()=>t.params.flipEffect,perspective:()=>!0,overwriteParams:()=>({slidesPerView:1,slidesPerGroup:1,watchSlidesProgress:!0,spaceBetween:0,virtualTranslate:!t.params.cssMode})})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({coverflowEffect:{rotate:50,stretch:0,depth:100,scale:1,modifier:1,slideShadows:!0}}),oe({effect:"coverflow",swiper:t,on:a,setTranslate:()=>{const{width:e,height:s,slides:a,slidesSizesGrid:i}=t,r=t.params.coverflowEffect,n=t.isHorizontal(),l=t.translate,o=n?e/2-l:s/2-l,d=n?r.rotate:-r.rotate,c=r.depth;for(let e=0,s=a.length;e<s;e+=1){const s=a[e],l=i[e],p=(o-s.swiperSlideOffset-l/2)/l,u="function"==typeof r.modifier?r.modifier(p):p*r.modifier;let m=n?d*u:0,h=n?0:d*u,f=-c*Math.abs(u),g=r.stretch;"string"==typeof g&&-1!==g.indexOf("%")&&(g=parseFloat(r.stretch)/100*l);let v=n?0:g*u,w=n?g*u:0,b=1-(1-r.scale)*Math.abs(u);Math.abs(w)<.001&&(w=0),Math.abs(v)<.001&&(v=0),Math.abs(f)<.001&&(f=0),Math.abs(m)<.001&&(m=0),Math.abs(h)<.001&&(h=0),Math.abs(b)<.001&&(b=0),t.browser&&t.browser.isSafari&&(Math.abs(m)/90%2==1&&(m+=.001),Math.abs(h)/90%2==1&&(h+=.001));const y=`translate3d(${w}px,${v}px,${f}px)  rotateX(${h}deg) rotateY(${m}deg) scale(${b})`;if(de(0,s).style.transform=y,s.style.zIndex=1-Math.abs(Math.round(u)),r.slideShadows){let e=n?s.querySelector(".swiper-slide-shadow-left"):s.querySelector(".swiper-slide-shadow-top"),t=n?s.querySelector(".swiper-slide-shadow-right"):s.querySelector(".swiper-slide-shadow-bottom");e||(e=pe("coverflow",s,n?"left":"top")),t||(t=pe("coverflow",s,n?"right":"bottom")),e&&(e.style.opacity=u>0?u:0),t&&(t.style.opacity=-u>0?-u:0)}}},setTransition:e=>{t.slides.map((e=>h(e))).forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").forEach((t=>{t.style.transitionDuration=`${e}ms`}))}))},perspective:()=>!0,overwriteParams:()=>({watchSlidesProgress:!0})})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({creativeEffect:{limitProgress:1,shadowPerProgress:!1,progressMultiplier:1,perspective:!0,prev:{translate:[0,0,0],rotate:[0,0,0],opacity:1,scale:1},next:{translate:[0,0,0],rotate:[0,0,0],opacity:1,scale:1}}});const i=e=>"string"==typeof e?e:`${e}px`;oe({effect:"creative",swiper:t,on:a,setTranslate:()=>{const{slides:e,wrapperEl:s,slidesSizesGrid:a}=t,r=t.params.creativeEffect,{progressMultiplier:n}=r,l=t.params.centeredSlides;if(l){const e=a[0]/2-t.params.slidesOffsetBefore||0;s.style.transform=`translateX(calc(50% - ${e}px))`}for(let s=0;s<e.length;s+=1){const a=e[s],o=a.progress,d=Math.min(Math.max(a.progress,-r.limitProgress),r.limitProgress);let c=d;l||(c=Math.min(Math.max(a.originalProgress,-r.limitProgress),r.limitProgress));const p=a.swiperSlideOffset,u=[t.params.cssMode?-p-t.translate:-p,0,0],m=[0,0,0];let h=!1;t.isHorizontal()||(u[1]=u[0],u[0]=0);let f={translate:[0,0,0],rotate:[0,0,0],scale:1,opacity:1};d<0?(f=r.next,h=!0):d>0&&(f=r.prev,h=!0),u.forEach(((e,t)=>{u[t]=`calc(${e}px + (${i(f.translate[t])} * ${Math.abs(d*n)}))`})),m.forEach(((e,s)=>{let a=f.rotate[s]*Math.abs(d*n);t.browser&&t.browser.isSafari&&Math.abs(a)/90%2==1&&(a+=.001),m[s]=a})),a.style.zIndex=-Math.abs(Math.round(o))+e.length;const g=u.join(", "),v=`rotateX(${m[0]}deg) rotateY(${m[1]}deg) rotateZ(${m[2]}deg)`,w=c<0?`scale(${1+(1-f.scale)*c*n})`:`scale(${1-(1-f.scale)*c*n})`,b=c<0?1+(1-f.opacity)*c*n:1-(1-f.opacity)*c*n,y=`translate3d(${g}) ${v} ${w}`;if(h&&f.shadow||!h){let e=a.querySelector(".swiper-slide-shadow");if(!e&&f.shadow&&(e=pe("creative",a)),e){const t=r.shadowPerProgress?d*(1/r.limitProgress):d;e.style.opacity=Math.min(Math.max(Math.abs(t),0),1)}}const E=de(0,a);E.style.transform=y,E.style.opacity=b,f.origin&&(E.style.transformOrigin=f.origin)}},setTransition:e=>{const s=t.slides.map((e=>h(e)));s.forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow").forEach((t=>{t.style.transitionDuration=`${e}ms`}))})),ce({swiper:t,duration:e,transformElements:s,allSlides:!0})},perspective:()=>t.params.creativeEffect.perspective,overwriteParams:()=>({watchSlidesProgress:!0,virtualTranslate:!t.params.cssMode})})},function(e){let{swiper:t,extendParams:s,on:a}=e;s({cardsEffect:{slideShadows:!0,rotate:!0,perSlideRotate:2,perSlideOffset:8}}),oe({effect:"cards",swiper:t,on:a,setTranslate:()=>{const{slides:e,activeIndex:s,rtlTranslate:a}=t,i=t.params.cardsEffect,{startTranslate:r,isTouched:n}=t.touchEventsData,l=a?-t.translate:t.translate;for(let o=0;o<e.length;o+=1){const d=e[o],c=d.progress,p=Math.min(Math.max(c,-4),4);let u=d.swiperSlideOffset;t.params.centeredSlides&&!t.params.cssMode&&(t.wrapperEl.style.transform=`translateX(${t.minTranslate()}px)`),t.params.centeredSlides&&t.params.cssMode&&(u-=e[0].swiperSlideOffset);let m=t.params.cssMode?-u-t.translate:-u,h=0;const f=-100*Math.abs(p);let g=1,v=-i.perSlideRotate*p,w=i.perSlideOffset-.75*Math.abs(p);const b=t.virtual&&t.params.virtual.enabled?t.virtual.from+o:o,y=(b===s||b===s-1)&&p>0&&p<1&&(n||t.params.cssMode)&&l<r,E=(b===s||b===s+1)&&p<0&&p>-1&&(n||t.params.cssMode)&&l>r;if(y||E){const e=(1-Math.abs((Math.abs(p)-.5)/.5))**.5;v+=-28*p*e,g+=-.5*e,w+=96*e,h=-25*e*Math.abs(p)+"%"}if(m=p<0?`calc(${m}px ${a?"-":"+"} (${w*Math.abs(p)}%))`:p>0?`calc(${m}px ${a?"-":"+"} (-${w*Math.abs(p)}%))`:`${m}px`,!t.isHorizontal()){const e=h;h=m,m=e}const x=p<0?""+(1+(1-g)*p):""+(1-(1-g)*p),S=`\n        translate3d(${m}, ${h}, ${f}px)\n        rotateZ(${i.rotate?a?-v:v:0}deg)\n        scale(${x})\n      `;if(i.slideShadows){let e=d.querySelector(".swiper-slide-shadow");e||(e=pe("cards",d)),e&&(e.style.opacity=Math.min(Math.max((Math.abs(p)-.5)/.5,0),1))}d.style.zIndex=-Math.abs(Math.round(c))+e.length;de(0,d).style.transform=S}},setTransition:e=>{const s=t.slides.map((e=>h(e)));s.forEach((t=>{t.style.transitionDuration=`${e}ms`,t.querySelectorAll(".swiper-slide-shadow").forEach((t=>{t.style.transitionDuration=`${e}ms`}))})),ce({swiper:t,duration:e,transformElements:s})},perspective:()=>!0,overwriteParams:()=>({watchSlidesProgress:!0,virtualTranslate:!t.params.cssMode})})}];return ee.use(ue),ee}();
//# sourceMappingURL=swiper-bundle.min.js.map

!(function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? (module.exports = e()) : "function" == typeof define && define.amd ? define(e) : ((t = "undefined" != typeof globalThis ? globalThis : t || self).WaveSurfer = e());
})(this, function () {
  "use strict";
  function t(t, e, i, s) {
    return new (i || (i = Promise))(function (n, r) {
      function o(t) {
        try {
          h(s.next(t));
        } catch (t) {
          r(t);
        }
      }
      function a(t) {
        try {
          h(s.throw(t));
        } catch (t) {
          r(t);
        }
      }
      function h(t) {
        var e;
        t.done
          ? n(t.value)
          : ((e = t.value),
            e instanceof i
              ? e
              : new i(function (t) {
                  t(e);
                })).then(o, a);
      }
      h((s = s.apply(t, e || [])).next());
    });
  }
  "function" == typeof SuppressedError && SuppressedError;
  const e = {
    decode: function (e, i) {
      return t(this, void 0, void 0, function* () {
        const t = new AudioContext({ sampleRate: i });
        return t.decodeAudioData(e).finally(() => t.close());
      });
    },
    createBuffer: function (t, e) {
      return (
        "number" == typeof t[0] && (t = [t]),
        (function (t) {
          const e = t[0];
          if (e.some((t) => t > 1 || t < -1)) {
            const i = e.length;
            let s = 0;
            for (let t = 0; t < i; t++) {
              const i = Math.abs(e[t]);
              i > s && (s = i);
            }
            for (const e of t) for (let t = 0; t < i; t++) e[t] /= s;
          }
        })(t),
        { duration: e, length: t[0].length, sampleRate: t[0].length / e, numberOfChannels: t.length, getChannelData: (e) => (null == t ? void 0 : t[e]), copyFromChannel: AudioBuffer.prototype.copyFromChannel, copyToChannel: AudioBuffer.prototype.copyToChannel }
      );
    },
  };
  const i = {
    fetchBlob: function (e, i, s) {
      return t(this, void 0, void 0, function* () {
        const n = yield fetch(e, s);
        if (!n.ok) throw new Error(`Failed to fetch ${e}: ${n.status} (${n.statusText})`);
        return (
          (function (e, i) {
            t(this, void 0, void 0, function* () {
              if (!e.body || !e.headers) return;
              const s = e.body.getReader(),
                n = Number(e.headers.get("Content-Length")) || 0;
              let r = 0;
              const o = (e) =>
                  t(this, void 0, void 0, function* () {
                    r += (null == e ? void 0 : e.length) || 0;
                    const t = Math.round((r / n) * 100);
                    i(t);
                  }),
                a = () =>
                  t(this, void 0, void 0, function* () {
                    let t;
                    try {
                      t = yield s.read();
                    } catch (t) {
                      return;
                    }
                    t.done || (o(t.value), yield a());
                  });
              a();
            });
          })(n.clone(), i),
          n.blob()
        );
      });
    },
  };
  class s {
    constructor() {
      (this.listeners = {}), (this.on = this.addEventListener), (this.un = this.removeEventListener);
    }
    addEventListener(t, e, i) {
      if ((this.listeners[t] || (this.listeners[t] = new Set()), this.listeners[t].add(e), null == i ? void 0 : i.once)) {
        const i = () => {
          this.removeEventListener(t, i), this.removeEventListener(t, e);
        };
        return this.addEventListener(t, i), i;
      }
      return () => this.removeEventListener(t, e);
    }
    removeEventListener(t, e) {
      var i;
      null === (i = this.listeners[t]) || void 0 === i || i.delete(e);
    }
    once(t, e) {
      return this.on(t, e, { once: !0 });
    }
    unAll() {
      this.listeners = {};
    }
    emit(t, ...e) {
      this.listeners[t] && this.listeners[t].forEach((t) => t(...e));
    }
  }
  class n extends s {
    constructor(t) {
      super(),
        (this.isExternalMedia = !1),
        t.media ? ((this.media = t.media), (this.isExternalMedia = !0)) : (this.media = document.createElement("audio")),
        t.mediaControls && (this.media.controls = !0),
        t.autoplay && (this.media.autoplay = !0),
        null != t.playbackRate &&
          this.onceMediaEvent("canplay", () => {
            null != t.playbackRate && (this.media.playbackRate = t.playbackRate);
          });
    }
    onMediaEvent(t, e, i) {
      return this.media.addEventListener(t, e, i), () => this.media.removeEventListener(t, e);
    }
    onceMediaEvent(t, e) {
      return this.onMediaEvent(t, e, { once: !0 });
    }
    getSrc() {
      return this.media.currentSrc || this.media.src || "";
    }
    revokeSrc() {
      const t = this.getSrc();
      t.startsWith("blob:") && URL.revokeObjectURL(t);
    }
    setSrc(t, e) {
      if (this.getSrc() === t) return;
      this.revokeSrc();
      const i = e instanceof Blob ? URL.createObjectURL(e) : t;
      (this.media.src = i), this.media.load();
    }
    destroy() {
      this.media.pause(), this.isExternalMedia || (this.media.remove(), this.revokeSrc(), (this.media.src = ""), this.media.load());
    }
    setMediaElement(t) {
      this.media = t;
    }
    play() {
      return this.media.play();
    }
    pause() {
      this.media.pause();
    }
    isPlaying() {
      return !this.media.paused && !this.media.ended;
    }
    setTime(t) {
      this.media.currentTime = t;
    }
    getDuration() {
      return this.media.duration;
    }
    getCurrentTime() {
      return this.media.currentTime;
    }
    getVolume() {
      return this.media.volume;
    }
    setVolume(t) {
      this.media.volume = t;
    }
    getMuted() {
      return this.media.muted;
    }
    setMuted(t) {
      this.media.muted = t;
    }
    getPlaybackRate() {
      return this.media.playbackRate;
    }
    setPlaybackRate(t, e) {
      null != e && (this.media.preservesPitch = e), (this.media.playbackRate = t);
    }
    getMediaElement() {
      return this.media;
    }
    setSinkId(t) {
      return this.media.setSinkId(t);
    }
  }
  class r extends s {
    constructor(t, e) {
      super(), (this.timeouts = []), (this.isScrollable = !1), (this.audioData = null), (this.resizeObserver = null), (this.isDragging = !1), (this.options = t);
      const i = this.parentFromOptionsContainer(t.container);
      this.parent = i;
      const [s, n] = this.initHtml();
      i.appendChild(s), (this.container = s), (this.scrollContainer = n.querySelector(".scroll")), (this.wrapper = n.querySelector(".wrapper")), (this.canvasWrapper = n.querySelector(".canvases")), (this.progressWrapper = n.querySelector(".progress")), (this.cursor = n.querySelector(".cursor")), e && n.appendChild(e), this.initEvents();
    }
    parentFromOptionsContainer(t) {
      let e;
      if (("string" == typeof t ? (e = document.querySelector(t)) : t instanceof HTMLElement && (e = t), !e)) throw new Error("Container not found");
      return e;
    }
    initEvents() {
      const t = (t) => {
        const e = this.wrapper.getBoundingClientRect(),
          i = t.clientX - e.left,
          s = t.clientX - e.left;
        return [i / e.width, s / e.height];
      };
      this.wrapper.addEventListener("click", (e) => {
        const [i, s] = t(e);
        this.emit("click", i, s);
      }),
        this.wrapper.addEventListener("dblclick", (e) => {
          const [i, s] = t(e);
          this.emit("dblclick", i, s);
        }),
        this.options.dragToSeek && this.initDrag(),
        this.scrollContainer.addEventListener("scroll", () => {
          const { scrollLeft: t, scrollWidth: e, clientWidth: i } = this.scrollContainer,
            s = t / e,
            n = (t + i) / e;
          this.emit("scroll", s, n);
        });
      const e = this.createDelay(100);
      (this.resizeObserver = new ResizeObserver(() => {
        e(() => this.reRender());
      })),
        this.resizeObserver.observe(this.scrollContainer);
    }
    initDrag() {
      !(function (t, e, i, s, n = 3, r = 0) {
        if (!t) return () => {};
        let o = () => {};
        const a = (a) => {
          if (a.button !== r) return;
          a.preventDefault(), a.stopPropagation();
          let h = a.clientX,
            l = a.clientY,
            d = !1;
          const c = (s) => {
              s.preventDefault(), s.stopPropagation();
              const r = s.clientX,
                o = s.clientY,
                a = r - h,
                c = o - l;
              if (((h = r), (l = o), d || Math.abs(a) > n || Math.abs(c) > n)) {
                const s = t.getBoundingClientRect(),
                  { left: n, top: u } = s;
                d || (null == i || i(h - n, l - u), (d = !0)), e(a, c, r - n, o - u);
              }
            },
            u = () => {
              d && (null == s || s()), o();
            },
            p = (t) => {
              d && (t.stopPropagation(), t.preventDefault());
            },
            m = (t) => {
              d && t.preventDefault();
            };
          document.addEventListener("pointermove", c),
            document.addEventListener("pointerup", u),
            document.addEventListener("pointerout", u),
            document.addEventListener("pointercancel", u),
            document.addEventListener("touchmove", m, { passive: !1 }),
            document.addEventListener("click", p, { capture: !0 }),
            (o = () => {
              document.removeEventListener("pointermove", c),
                document.removeEventListener("pointerup", u),
                document.removeEventListener("pointerout", u),
                document.removeEventListener("pointercancel", u),
                document.removeEventListener("touchmove", m),
                setTimeout(() => {
                  document.removeEventListener("click", p, { capture: !0 });
                }, 10);
            });
        };
        t.addEventListener("pointerdown", a);
      })(
        this.wrapper,
        (t, e, i) => {
          this.emit("drag", Math.max(0, Math.min(1, i / this.wrapper.getBoundingClientRect().width)));
        },
        () => (this.isDragging = !0),
        () => (this.isDragging = !1)
      );
    }
    getHeight(t) {
      return null == t ? 128 : isNaN(Number(t)) ? ("auto" === t && this.parent.clientHeight) || 128 : Number(t);
    }
    initHtml() {
      const t = document.createElement("div"),
        e = t.attachShadow({ mode: "open" });
      return (
        (e.innerHTML = `\n      <style>\n        :host {\n          user-select: none;\n          min-width: 1px;\n        }\n        :host audio {\n          display: block;\n          width: 100%;\n        }\n        :host .scroll {\n          overflow-x: auto;\n          overflow-y: hidden;\n          width: 100%;\n          position: relative;\n        }\n        :host .noScrollbar {\n          scrollbar-color: transparent;\n          scrollbar-width: none;\n        }\n        :host .noScrollbar::-webkit-scrollbar {\n          display: none;\n          -webkit-appearance: none;\n        }\n        :host .wrapper {\n          position: relative;\n          overflow: visible;\n          z-index: 2;\n        }\n        :host .canvases {\n          min-height: ${this.getHeight(
          this.options.height
        )}px;\n        }\n        :host .canvases > div {\n          position: relative;\n        }\n        :host canvas {\n          display: block;\n          position: absolute;\n          top: 0;\n          image-rendering: pixelated;\n        }\n        :host .progress {\n          pointer-events: none;\n          position: absolute;\n          z-index: 2;\n          top: 0;\n          left: 0;\n          width: 0;\n          height: 100%;\n          overflow: hidden;\n        }\n        :host .progress > div {\n          position: relative;\n        }\n        :host .cursor {\n          pointer-events: none;\n          position: absolute;\n          z-index: 5;\n          top: 0;\n          left: 0;\n          height: 100%;\n          border-radius: 2px;\n        }\n      </style>\n\n      <div class="scroll" part="scroll">\n        <div class="wrapper" part="wrapper">\n          <div class="canvases"></div>\n          <div class="progress" part="progress"></div>\n          <div class="cursor" part="cursor"></div>\n        </div>\n      </div>\n    `),
        [t, e]
      );
    }
    setOptions(t) {
      if (this.options.container !== t.container) {
        const e = this.parentFromOptionsContainer(t.container);
        e.appendChild(this.container), (this.parent = e);
      }
      t.dragToSeek && !this.options.dragToSeek && this.initDrag(), (this.options = t), this.reRender();
    }
    getWrapper() {
      return this.wrapper;
    }
    getScroll() {
      return this.scrollContainer.scrollLeft;
    }
    destroy() {
      var t;
      this.container.remove(), null === (t = this.resizeObserver) || void 0 === t || t.disconnect();
    }
    createDelay(t = 10) {
      const e = {};
      return (
        this.timeouts.push(e),
        (i) => {
          e.timeout && clearTimeout(e.timeout), (e.timeout = setTimeout(i, t));
        }
      );
    }
    convertColorValues(t) {
      if (!Array.isArray(t)) return t || "";
      if (t.length < 2) return t[0] || "";
      const e = document.createElement("canvas"),
        i = e.getContext("2d"),
        s = e.height * (window.devicePixelRatio || 1),
        n = i.createLinearGradient(0, 0, 0, s),
        r = 1 / (t.length - 1);
      return (
        t.forEach((t, e) => {
          const i = e * r;
          n.addColorStop(i, t);
        }),
        n
      );
    }
    renderBarWaveform(t, e, i, s) {
      const n = t[0],
        r = t[1] || t[0],
        o = n.length,
        { width: a, height: h } = i.canvas,
        l = h / 2,
        d = window.devicePixelRatio || 1,
        c = e.barWidth ? e.barWidth * d : 1,
        u = e.barGap ? e.barGap * d : e.barWidth ? c / 2 : 0,
        p = e.barRadius || 0,
        m = a / (c + u) / o,
        v = p && "roundRect" in i ? "roundRect" : "rect";
      i.beginPath();
      let g = 0,
        f = 0,
        b = 0;
      for (let t = 0; t <= o; t++) {
        const o = Math.round(t * m);
        if (o > g) {
          const t = Math.round(f * l * s),
            n = t + Math.round(b * l * s) || 1;
          let r = l - t;
          "top" === e.barAlign ? (r = 0) : "bottom" === e.barAlign && (r = h - n), i[v](g * (c + u), r, c, n, p), (g = o), (f = 0), (b = 0);
        }
        const a = Math.abs(n[t] || 0),
          d = Math.abs(r[t] || 0);
        a > f && (f = a), d > b && (b = d);
      }
      i.fill(), i.closePath();
    }
    renderLineWaveform(t, e, i, s) {
      const n = (e) => {
        const n = t[e] || t[0],
          r = n.length,
          { height: o } = i.canvas,
          a = o / 2,
          h = i.canvas.width / r;
        i.moveTo(0, a);
        let l = 0,
          d = 0;
        for (let t = 0; t <= r; t++) {
          const r = Math.round(t * h);
          if (r > l) {
            const t = a + (Math.round(d * a * s) || 1) * (0 === e ? -1 : 1);
            i.lineTo(l, t), (l = r), (d = 0);
          }
          const o = Math.abs(n[t] || 0);
          o > d && (d = o);
        }
        i.lineTo(l, a);
      };
      i.beginPath(), n(0), n(1), i.fill(), i.closePath();
    }
    renderWaveform(t, e, i) {
      if (((i.fillStyle = this.convertColorValues(e.waveColor)), e.renderFunction)) return void e.renderFunction(t, i);
      let s = e.barHeight || 1;
      if (e.normalize) {
        const e = Array.from(t[0]).reduce((t, e) => Math.max(t, Math.abs(e)), 0);
        s = e ? 1 / e : 1;
      }
      e.barWidth || e.barGap || e.barAlign ? this.renderBarWaveform(t, e, i, s) : this.renderLineWaveform(t, e, i, s);
    }
    renderSingleCanvas(t, e, i, s, n, r, o, a) {
      const h = window.devicePixelRatio || 1,
        l = document.createElement("canvas"),
        d = t[0].length;
      (l.width = Math.round((i * (r - n)) / d)), (l.height = s * h), (l.style.width = `${Math.floor(l.width / h)}px`), (l.style.height = `${s}px`), (l.style.left = `${Math.floor((n * i) / h / d)}px`), o.appendChild(l);
      const c = l.getContext("2d");
      if (
        (this.renderWaveform(
          t.map((t) => t.slice(n, r)),
          e,
          c
        ),
        l.width > 0 && l.height > 0)
      ) {
        const t = l.cloneNode(),
          i = t.getContext("2d");
        i.drawImage(l, 0, 0), (i.globalCompositeOperation = "source-in"), (i.fillStyle = this.convertColorValues(e.progressColor)), i.fillRect(0, 0, l.width, l.height), a.appendChild(t);
      }
    }
    renderChannel(t, e, i) {
      const s = document.createElement("div"),
        n = this.getHeight(e.height);
      (s.style.height = `${n}px`), (this.canvasWrapper.style.minHeight = `${n}px`), this.canvasWrapper.appendChild(s);
      const o = s.cloneNode();
      this.progressWrapper.appendChild(o);
      const { scrollLeft: a, scrollWidth: h, clientWidth: l } = this.scrollContainer,
        d = t[0].length,
        c = d / h;
      let u = Math.min(r.MAX_CANVAS_WIDTH, l);
      if (e.barWidth || e.barGap) {
        const t = e.barWidth || 0.5,
          i = t + (e.barGap || t / 2);
        u % i != 0 && (u = Math.floor(u / i) * i);
      }
      const p = Math.floor(Math.abs(a) * c),
        m = Math.floor(p + u * c),
        v = m - p,
        g = (r, a) => {
          this.renderSingleCanvas(t, e, i, n, Math.max(0, r), Math.min(a, d), s, o);
        },
        f = this.createDelay(),
        b = this.createDelay(),
        y = (t, e) => {
          g(t, e),
            t > 0 &&
              f(() => {
                y(t - v, e - v);
              });
        },
        C = (t, e) => {
          g(t, e),
            e < d &&
              b(() => {
                C(t + v, e + v);
              });
        };
      y(p, m), m < d && C(m, m + v);
    }
    render(t) {
      this.timeouts.forEach((t) => t.timeout && clearTimeout(t.timeout)), (this.timeouts = []), (this.canvasWrapper.innerHTML = ""), (this.progressWrapper.innerHTML = ""), null != this.options.width && (this.scrollContainer.style.width = "number" == typeof this.options.width ? `${this.options.width}px` : this.options.width);
      const e = window.devicePixelRatio || 1,
        i = this.scrollContainer.clientWidth,
        s = Math.ceil(t.duration * (this.options.minPxPerSec || 0));
      this.isScrollable = s > i;
      const n = this.options.fillParent && !this.isScrollable,
        r = (n ? i : s) * e;
      if (((this.wrapper.style.width = n ? "100%" : `${s}px`), (this.scrollContainer.style.overflowX = this.isScrollable ? "auto" : "hidden"), this.scrollContainer.classList.toggle("noScrollbar", !!this.options.hideScrollbar), (this.cursor.style.backgroundColor = `${this.options.cursorColor || this.options.progressColor}`), (this.cursor.style.width = `${this.options.cursorWidth}px`), this.options.splitChannels))
        for (let e = 0; e < t.numberOfChannels; e++) {
          const i = Object.assign(Object.assign({}, this.options), this.options.splitChannels[e]);
          this.renderChannel([t.getChannelData(e)], i, r);
        }
      else {
        const e = [t.getChannelData(0)];
        t.numberOfChannels > 1 && e.push(t.getChannelData(1)), this.renderChannel(e, this.options, r);
      }
      (this.audioData = t), this.emit("render");
    }
    reRender() {
      if (!this.audioData) return;
      const { scrollWidth: t } = this.scrollContainer,
        e = this.progressWrapper.clientWidth;
      if ((this.render(this.audioData), this.isScrollable && t !== this.scrollContainer.scrollWidth)) {
        const t = this.progressWrapper.clientWidth;
        this.scrollContainer.scrollLeft += t - e;
      }
    }
    zoom(t) {
      (this.options.minPxPerSec = t), this.reRender();
    }
    scrollIntoView(t, e = !1) {
      const { scrollLeft: i, scrollWidth: s, clientWidth: n } = this.scrollContainer,
        r = t * s,
        o = i,
        a = i + n,
        h = n / 2;
      if (this.isDragging) {
        const t = 30;
        r + t > a ? (this.scrollContainer.scrollLeft += t) : r - t < o && (this.scrollContainer.scrollLeft -= t);
      } else {
        (r < o || r > a) && (this.scrollContainer.scrollLeft = r - (this.options.autoCenter ? h : 0));
        const t = r - i - h;
        e && this.options.autoCenter && t > 0 && (this.scrollContainer.scrollLeft += Math.min(t, 10));
      }
      {
        const t = this.scrollContainer.scrollLeft,
          e = t / s,
          i = (t + n) / s;
        this.emit("scroll", e, i);
      }
    }
    renderProgress(t, e) {
      if (isNaN(t)) return;
      const i = 100 * t;
      (this.canvasWrapper.style.clipPath = `polygon(${i}% 0, 100% 0, 100% 100%, ${i}% 100%)`), (this.progressWrapper.style.width = `${i}%`), (this.cursor.style.left = `${i}%`), (this.cursor.style.marginLeft = 100 === Math.round(i) ? `-${this.options.cursorWidth}px` : ""), this.isScrollable && this.options.autoScroll && this.scrollIntoView(t, e);
    }
    exportImage(e, i, s) {
      return t(this, void 0, void 0, function* () {
        const t = this.canvasWrapper.querySelectorAll("canvas");
        if (!t.length) throw new Error("No waveform data");
        if ("dataURL" === s) {
          const s = Array.from(t).map((t) => t.toDataURL(e, i));
          return Promise.resolve(s);
        }
        return Promise.all(
          Array.from(t).map(
            (t) =>
              new Promise((s, n) => {
                t.toBlob(
                  (t) => {
                    t ? s(t) : n(new Error("Could not export image"));
                  },
                  e,
                  i
                );
              })
          )
        );
      });
    }
  }
  r.MAX_CANVAS_WIDTH = 4e3;
  class o extends s {
    constructor() {
      super(...arguments), (this.unsubscribe = () => {});
    }
    start() {
      (this.unsubscribe = this.on("tick", () => {
        requestAnimationFrame(() => {
          this.emit("tick");
        });
      })),
        this.emit("tick");
    }
    stop() {
      this.unsubscribe();
    }
    destroy() {
      this.unsubscribe();
    }
  }
  class a extends s {
    constructor(t = new AudioContext()) {
      super(), (this.bufferNode = null), (this.autoplay = !1), (this.playStartTime = 0), (this.playedDuration = 0), (this._muted = !1), (this.buffer = null), (this.currentSrc = ""), (this.paused = !0), (this.crossOrigin = null), (this.audioContext = t), (this.gainNode = this.audioContext.createGain()), this.gainNode.connect(this.audioContext.destination);
    }
    load() {
      return t(this, void 0, void 0, function* () {});
    }
    get src() {
      return this.currentSrc;
    }
    set src(t) {
      (this.currentSrc = t),
        fetch(t)
          .then((t) => t.arrayBuffer())
          .then((t) => this.audioContext.decodeAudioData(t))
          .then((t) => {
            (this.buffer = t), this.emit("loadedmetadata"), this.emit("canplay"), this.autoplay && this.play();
          });
    }
    _play() {
      var t;
      this.paused &&
        ((this.paused = !1),
        null === (t = this.bufferNode) || void 0 === t || t.disconnect(),
        (this.bufferNode = this.audioContext.createBufferSource()),
        (this.bufferNode.buffer = this.buffer),
        this.bufferNode.connect(this.gainNode),
        this.playedDuration >= this.duration && (this.playedDuration = 0),
        this.bufferNode.start(this.audioContext.currentTime, this.playedDuration),
        (this.playStartTime = this.audioContext.currentTime),
        (this.bufferNode.onended = () => {
          this.currentTime >= this.duration && (this.pause(), this.emit("ended"));
        }));
    }
    _pause() {
      var t;
      this.paused || ((this.paused = !0), null === (t = this.bufferNode) || void 0 === t || t.stop(), (this.playedDuration += this.audioContext.currentTime - this.playStartTime));
    }
    play() {
      return t(this, void 0, void 0, function* () {
        this._play(), this.emit("play");
      });
    }
    pause() {
      this._pause(), this.emit("pause");
    }
    stopAt(t) {
      var e, i;
      const s = t - this.currentTime;
      null === (e = this.bufferNode) || void 0 === e || e.stop(this.audioContext.currentTime + s),
        null === (i = this.bufferNode) ||
          void 0 === i ||
          i.addEventListener(
            "ended",
            () => {
              (this.bufferNode = null), this.pause();
            },
            { once: !0 }
          );
    }
    setSinkId(e) {
      return t(this, void 0, void 0, function* () {
        return this.audioContext.setSinkId(e);
      });
    }
    get playbackRate() {
      var t, e;
      return null !== (e = null === (t = this.bufferNode) || void 0 === t ? void 0 : t.playbackRate.value) && void 0 !== e ? e : 1;
    }
    set playbackRate(t) {
      this.bufferNode && (this.bufferNode.playbackRate.value = t);
    }
    get currentTime() {
      return this.paused ? this.playedDuration : this.playedDuration + this.audioContext.currentTime - this.playStartTime;
    }
    set currentTime(t) {
      this.emit("seeking"), this.paused ? (this.playedDuration = t) : (this._pause(), (this.playedDuration = t), this._play()), this.emit("timeupdate");
    }
    get duration() {
      var t;
      return (null === (t = this.buffer) || void 0 === t ? void 0 : t.duration) || 0;
    }
    get volume() {
      return this.gainNode.gain.value;
    }
    set volume(t) {
      (this.gainNode.gain.value = t), this.emit("volumechange");
    }
    get muted() {
      return this._muted;
    }
    set muted(t) {
      this._muted !== t && ((this._muted = t), this._muted ? this.gainNode.disconnect() : this.gainNode.connect(this.audioContext.destination));
    }
    getGainNode() {
      return this.gainNode;
    }
  }
  const h = { waveColor: "#999", progressColor: "#555", cursorWidth: 1, minPxPerSec: 0, fillParent: !0, interact: !0, dragToSeek: !1, autoScroll: !0, autoCenter: !0, sampleRate: 8e3 };
  class l extends n {
    static create(t) {
      return new l(t);
    }
    constructor(t) {
      const e = t.media || ("WebAudio" === t.backend ? new a() : void 0);
      super({ media: e, mediaControls: t.mediaControls, autoplay: t.autoplay, playbackRate: t.audioRate }), (this.plugins = []), (this.decodedData = null), (this.subscriptions = []), (this.mediaSubscriptions = []), (this.options = Object.assign({}, h, t)), (this.timer = new o());
      const i = e ? void 0 : this.getMediaElement();
      (this.renderer = new r(this.options, i)), this.initPlayerEvents(), this.initRendererEvents(), this.initTimerEvents(), this.initPlugins();
      const s = this.options.url || this.getSrc() || "";
      (s || (this.options.peaks && this.options.duration)) && this.load(s, this.options.peaks, this.options.duration);
    }
    initTimerEvents() {
      this.subscriptions.push(
        this.timer.on("tick", () => {
          const t = this.getCurrentTime();
          this.renderer.renderProgress(t / this.getDuration(), !0), this.emit("timeupdate", t), this.emit("audioprocess", t);
        })
      );
    }
    initPlayerEvents() {
      this.isPlaying() && (this.emit("play"), this.timer.start()),
        this.mediaSubscriptions.push(
          this.onMediaEvent("timeupdate", () => {
            const t = this.getCurrentTime();
            this.renderer.renderProgress(t / this.getDuration(), this.isPlaying()), this.emit("timeupdate", t);
          }),
          this.onMediaEvent("play", () => {
            this.emit("play"), this.timer.start();
          }),
          this.onMediaEvent("pause", () => {
            this.emit("pause"), this.timer.stop();
          }),
          this.onMediaEvent("emptied", () => {
            this.timer.stop();
          }),
          this.onMediaEvent("ended", () => {
            this.emit("finish");
          }),
          this.onMediaEvent("seeking", () => {
            this.emit("seeking", this.getCurrentTime());
          })
        );
    }
    initRendererEvents() {
      this.subscriptions.push(
        this.renderer.on("click", (t, e) => {
          this.options.interact && (this.seekTo(t), this.emit("interaction", t * this.getDuration()), this.emit("click", t, e));
        }),
        this.renderer.on("dblclick", (t, e) => {
          this.emit("dblclick", t, e);
        }),
        this.renderer.on("scroll", (t, e) => {
          const i = this.getDuration();
          this.emit("scroll", t * i, e * i);
        }),
        this.renderer.on("render", () => {
          this.emit("redraw");
        })
      );
      {
        let t;
        this.subscriptions.push(
          this.renderer.on("drag", (e) => {
            this.options.interact &&
              (this.renderer.renderProgress(e),
              clearTimeout(t),
              (t = setTimeout(
                () => {
                  this.seekTo(e);
                },
                this.isPlaying() ? 0 : 200
              )),
              this.emit("interaction", e * this.getDuration()),
              this.emit("drag", e));
          })
        );
      }
    }
    initPlugins() {
      var t;
      (null === (t = this.options.plugins) || void 0 === t ? void 0 : t.length) &&
        this.options.plugins.forEach((t) => {
          this.registerPlugin(t);
        });
    }
    unsubscribePlayerEvents() {
      this.mediaSubscriptions.forEach((t) => t()), (this.mediaSubscriptions = []);
    }
    setOptions(t) {
      (this.options = Object.assign({}, this.options, t)), this.renderer.setOptions(this.options), t.audioRate && this.setPlaybackRate(t.audioRate), null != t.mediaControls && (this.getMediaElement().controls = t.mediaControls);
    }
    registerPlugin(t) {
      return (
        t.init(this),
        this.plugins.push(t),
        this.subscriptions.push(
          t.once("destroy", () => {
            this.plugins = this.plugins.filter((e) => e !== t);
          })
        ),
        t
      );
    }
    getWrapper() {
      return this.renderer.getWrapper();
    }
    getScroll() {
      return this.renderer.getScroll();
    }
    getActivePlugins() {
      return this.plugins;
    }
    loadAudio(s, n, r, o) {
      return t(this, void 0, void 0, function* () {
        if ((this.emit("load", s), !this.options.media && this.isPlaying() && this.pause(), (this.decodedData = null), !n && !r)) {
          const t = (t) => this.emit("loading", t);
          n = yield i.fetchBlob(s, t, this.options.fetchParams);
        }
        this.setSrc(s, n);
        const t =
          (yield Promise.resolve(o || this.getDuration())) ||
          (yield new Promise((t) => {
            this.onceMediaEvent("loadedmetadata", () => t(this.getDuration()));
          }));
        if (r) this.decodedData = e.createBuffer(r, t || 0);
        else if (n) {
          const t = yield n.arrayBuffer();
          this.decodedData = yield e.decode(t, this.options.sampleRate);
        }
        this.decodedData && (this.emit("decode", this.getDuration()), this.renderer.render(this.decodedData)), this.emit("ready", this.getDuration());
      });
    }
    load(e, i, s) {
      return t(this, void 0, void 0, function* () {
        yield this.loadAudio(e, void 0, i, s);
      });
    }
    loadBlob(e, i, s) {
      return t(this, void 0, void 0, function* () {
        yield this.loadAudio("blob", e, i, s);
      });
    }
    zoom(t) {
      if (!this.decodedData) throw new Error("No audio loaded");
      this.renderer.zoom(t), this.emit("zoom", t);
    }
    getDecodedData() {
      return this.decodedData;
    }
    exportPeaks({ channels: t = 2, maxLength: e = 8e3, precision: i = 1e4 } = {}) {
      if (!this.decodedData) throw new Error("The audio has not been decoded yet");
      const s = Math.min(t, this.decodedData.numberOfChannels),
        n = [];
      for (let t = 0; t < s; t++) {
        const s = this.decodedData.getChannelData(t),
          r = [],
          o = Math.round(s.length / e);
        for (let t = 0; t < e; t++) {
          const e = s.slice(t * o, (t + 1) * o);
          let n = 0;
          for (let t = 0; t < e.length; t++) {
            const i = e[t];
            Math.abs(i) > Math.abs(n) && (n = i);
          }
          r.push(Math.round(n * i) / i);
        }
        n.push(r);
      }
      return n;
    }
    getDuration() {
      let t = super.getDuration() || 0;
      return (0 !== t && t !== 1 / 0) || !this.decodedData || (t = this.decodedData.duration), t;
    }
    toggleInteraction(t) {
      this.options.interact = t;
    }
    seekTo(t) {
      const e = this.getDuration() * t;
      this.setTime(e);
    }
    playPause() {
      return t(this, void 0, void 0, function* () {
        return this.isPlaying() ? this.pause() : this.play();
      });
    }
    stop() {
      this.pause(), this.setTime(0);
    }
    skip(t) {
      this.setTime(this.getCurrentTime() + t);
    }
    empty() {
      this.load("", [[0]], 0.001);
    }
    setMediaElement(t) {
      this.unsubscribePlayerEvents(), super.setMediaElement(t), this.initPlayerEvents();
    }
    exportImage(e = "image/png", i = 1, s = "dataURL") {
      return t(this, void 0, void 0, function* () {
        return this.renderer.exportImage(e, i, s);
      });
    }
    destroy() {
      this.emit("destroy"), this.plugins.forEach((t) => t.destroy()), this.subscriptions.forEach((t) => t()), this.unsubscribePlayerEvents(), this.timer.destroy(), this.renderer.destroy(), super.destroy();
    }
  }
  return l;
});